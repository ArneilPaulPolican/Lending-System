<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <!-- Title -->
    <title>DLH - Applicant List</title>

    <!-- Styles -->
    @Styles.Render("~/Content/css")
</head>
<body>
    <!-- Header -->
    @Html.Partial("HomeHeader")

    <section class="software-section">
        <div class="container">
            <div class="row">
                <div class="col-lg-3">
                    <div class="list-group">
                        <a href="/Software" class="list-group-item">
                            <i class="fa fa-dashboard fa-fw"></i> &nbsp; Dashboard
                        </a>
                        <a href="/Software/ApplicantList" class="list-group-item active">
                            <i class="fa fa-users fa-fw"></i> &nbsp; Applicant
                        </a>
                        <a href="/Software/LoanApplicationList" class="list-group-item">
                            <i class="fa fa-file-text-o fa-fw"></i> &nbsp; Loan
                        </a>
                        <a href="#" class="list-group-item"><i class="fa fa-money fa-fw"></i> &nbsp; Collection</a>
                        <a href="#" class="list-group-item"><i class="fa fa-credit-card fa-fw"></i> &nbsp; Disbursement</a>
                        <a href="/Software/Tables" class="list-group-item">
                            <i class="fa fa-table fa-fw"></i> &nbsp; Tables
                        </a>
                        <a href="#" class="list-group-item">
                            <i class="fa fa-print fa-fw"></i> &nbsp; Reports
                        </a>
                        <a href="/Software/CompanyList" class="list-group-item">
                            <i class="fa fa-building fa-fw"></i> &nbsp; Company
                        </a>
                        <a href="#" class="list-group-item"><i class="fa fa-key fa-fw"></i> &nbsp; Users</a>
                        <a href="#" class="list-group-item"><i class="fa fa-gears fa-fw"></i> &nbsp; Settings</a>
                    </div>
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            User security stamp
                        </div>
                        <div class="panel-body">
                            <p>Created by:</p>
                            <div style="padding-left: 10px;">
                                <i class="fa fa-key fa-fw"></i> <label id="stampCreatedBy">NA</label>
                                <br />
                                <small><i class="fa fa-calendar fa-fw"></i> &nbsp;<span id="stampCreatedDate">mm/dd/yyyy</span></small>
                            </div>
                            <hr />
                            <p>Updated by:</p>
                            <div style="padding-left: 10px;">
                                <i class="fa fa-key fa-fw"></i> <label id="stampUpdatedBy">NA</label>
                                <br />
                                <small><i class="fa fa-calendar fa-fw"></i> &nbsp;<span id="stampUpdatedDate">mm/dd/yyyy</span></small>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-lg-9">
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            <h4>List of Applicants</h4>
                        </div>
                        <div class="panel-heading">
                            <table style="width: 100%">
                                <tr>
                                    <td>
                                        <div class="input-group">
                                            <span class="input-group-addon"><i class="fa fa-search fa-fw"></i> </span>
                                            <input type="text" id="searchApplicant" class="form-control" placeholder="Search" />
                                        </div>
                                    </td>
                                    <td>&nbsp;&nbsp;&nbsp;</td>
                                    <td align="right">
                                        <button class="btn btn-primary" id="btnAddApplicant" onclick="btnAddApplicantOnclick()">
                                            <i class="fa fa-plus fa-fw"></i>&nbsp; Add
                                        </button>
                                    </td>
                                </tr>
                            </table>
                        </div>
                        <div class="panel-body">
                            <div class="flexgridHeight">
                                <div id="applicantListFlexGrid" class="grid"></div>
                            </div>
                        </div>
                        <div class="panel-footer">
                            <div class="row">
                                <div class="btn-group col-md-7" id="navigationPageGrid">
                                    <button type="button" class="btn btn-default border-custom" id="btnMoveToFirstPageGrid">
                                        <span class="glyphicon glyphicon-fast-backward"></span>
                                    </button>
                                    <button type="button" class="btn btn-default border-custom" id="btnMoveToPreviousPageGrid">
                                        <span class="glyphicon glyphicon-step-backward"></span>
                                    </button>
                                    <button type="button" class="btn btn-default border-custom" disabled style="width: 100px" id="btnCurrentPageGrid"></button>
                                    <button type="button" class="btn btn-default border-custom" id="btnMoveToNextPageGrid">
                                        <span class="glyphicon glyphicon-step-forward"></span>
                                    </button>
                                    <button type="button" class="btn btn-default border-custom" id="btnMoveToLastPageGrid">
                                        <span class="glyphicon glyphicon-fast-forward"></span>
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- Footer -->
    @Html.Partial("HomeFooter")

    <!-- delete confirmation applicant modal -->
    <div class="modal fade" id="deleteConfirmationApplicantModal" role="dialog">
        <div class="modal-dialog modal-sm">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Delete Applicant</h4>
                </div>
                <div class="modal-body">
                    Are you sure that you want to delete this Applicant?
                </div>
                <div class="modal-footer">
                    <button class="btn btn-default" id="btnConfirmDeleteApplicant" onclick="btnConfirmDeleteApplicantOnclick()">Yes</button>
                    <button class="btn btn-default" id="btnCloseDeleteApplicantModal" data-dismiss="modal">No</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Scripts -->
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    <script type="text/javascript">
        // glebal variable
        var applicantCollectionView;
        var applicantFlexGrid;
        var btnFirstPageGrid;
        var btnPreviousPageGrid;
        var btnNextPageGrid;
        var btnLastPageGrid;
        var btnCurrentPageGrid;

        // get applicants
        function getApplicantList() {
            var applicants = new wijmo.collections.ObservableArray;
            $.ajax({
                url: '/api/applicant/list',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (applicantListResult) {
                    if (applicantListResult.length > 0) {
                        for (i = 0; i < applicantListResult.length; i++) {
                            var isLocked = false;
                            if (applicantListResult[i]["IsLocked"]) {
                                isLocked = true;
                            }

                            applicants.push({
                                EditButton: "<button class='btn btn-primary btn-xs btn-block' onclick='editApplicantOnclick()'><i class='fa fa-edit fa-fw'></i> Edit</button>",
                                DeleteButton: "<button class='btn btn-danger btn-xs btn-block'  onclick='deleteApplicantOnclick(" + isLocked + ")'><i class='fa fa-trash fa-fw'></i> Delete</button>",
                                Id: applicantListResult[i]["Id"],
                                ApplicantFullName: applicantListResult[i]["ApplicantFullName"],
                                CityAddress: applicantListResult[i]["CityAddress"],
                                IsLocked: applicantListResult[i]["IsLocked"],
                                CreatedByUserId: applicantListResult[i]["CreatedByUserId"],
                                CreatedByUser: applicantListResult[i]["CreatedByUser"],
                                CreatedDateTime: applicantListResult[i]["CreatedDateTime"],
                                UpdatedByUserId: applicantListResult[i]["UpdatedByUserId"],
                                UpdatedByUser: applicantListResult[i]["UpdatedByUser"],
                                UpdatedDateTime: applicantListResult[i]["UpdatedDateTime"]
                            });
                        }
                    }

                    NProgress.done();
                }
            });
            return applicants;
        }

        // edit applicant
        function editApplicantOnclick() {
            applicantCollectionView.editItem(applicantCollectionView.currentItem);
            var applicantCurrentEditItem = applicantCollectionView.currentEditItem;
            window.location = '/Software/ApplicantDetail?id=' + applicantCurrentEditItem.Id;
        }

        // delete applicant
        function deleteApplicantOnclick(isLocked) {
            if (isLocked) {
                toastr.info("Record Locked");
            } else {
                $("#deleteConfirmationApplicantModal").modal({
                    "show": true,
                    "backdrop": "static"
                });

                document.getElementById("btnConfirmDeleteApplicant").innerHTML = "Yes";
                $("#btnConfirmDeleteApplicant").prop("disabled", false);
                $("#btnCloseDeleteApplicantModal").prop("disabled", false);
            }
        }

        function btnConfirmDeleteApplicantOnclick() {
            document.getElementById("btnConfirmDeleteApplicant").innerHTML = "<i class='fa fa-spinner fa-spin fa-fw'></i> Deleting";
            $("#btnConfirmDeleteApplicant").prop("disabled", true);
            $("#btnCloseDeleteApplicantModal").prop("disabled", true);

            applicantCollectionView.editItem(applicantCollectionView.currentItem);
            var id = applicantCollectionView.currentEditItem.Id;
            $.ajax({
                url: '/api/applicant/delete/' + id,
                type: "DELETE",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                statusCode: {
                    200: function () {
                        toastr.success("Delete Successful");

                        $('#deleteConfirmationApplicantModal').modal('hide');

                        applicantCollectionView = new wijmo.collections.CollectionView(getApplicantList());
                        applicantCollectionView.canFilter = true;
                        applicantCollectionView.pageSize = 15;

                        var filterText = '';
                        $('#searchApplicant').keyup(function () {
                            filterText = this.value.toLowerCase();
                            applicantCollectionView.refresh();
                        });

                        applicantCollectionView.filter = function (item) {
                            return !filterText || (item.FullName.toLowerCase().indexOf(filterText) > -1);
                        }

                        applicantCollectionView.collectionChanged.addHandler(function (sender, args) {
                            updateNavigateButtons();
                        });

                        // Flex Grid
                        applicantFlexGrid.itemsSource = applicantCollectionView;
                        applicantFlexGrid.trackChanges = true;
                    },
                    404: function () {
                        toastr.error("Delete Not Found");
                        $('#deleteConfirmationApplicantModal').modal('hide');
                        $("#btnConfirmDeleteApplicant").prop("disabled", false);
                        $("#btnCloseDeleteApplicantModal").prop("disabled", false);
                    },
                    400: function () {
                        toastr.error("Bad Request");
                        $('#deleteConfirmationApplicantModal').modal('hide');
                        $("#btnConfirmDeleteApplicant").prop("disabled", false);
                        $("#btnCloseDeleteApplicantModal").prop("disabled", false);
                    }
                }
            });
        }

        // navigation button for flexgrid
        function updateNavigateButtons() {
            if (applicantCollectionView.pageSize <= 0) {
                document.getElementById('navigationPageGrid').style.display = 'none';
                return;
            }
            document.getElementById('navigationPageGrid').style.display = 'block';
            if (applicantCollectionView.pageIndex === 0) {
                btnFirstPageGrid.setAttribute('disabled', 'disabled');
                btnPreviousPageGrid.setAttribute('disabled', 'disabled');
                btnNextPageGrid.removeAttribute('disabled');
                btnLastPageGrid.removeAttribute('disabled');
            } else if (applicantCollectionView.pageIndex === (applicantCollectionView.pageCount - 1)) {
                btnFirstPageGrid.removeAttribute('disabled');
                btnPreviousPageGrid.removeAttribute('disabled');
                btnLastPageGrid.setAttribute('disabled', 'disabled');
                btnNextPageGrid.setAttribute('disabled', 'disabled');
            } else {
                btnFirstPageGrid.removeAttribute('disabled');
                btnPreviousPageGrid.removeAttribute('disabled');
                btnNextPageGrid.removeAttribute('disabled');
                btnLastPageGrid.removeAttribute('disabled');
            }
            btnCurrentPageGrid.innerHTML = (applicantCollectionView.pageIndex + 1) + ' / ' + applicantCollectionView.pageCount;
        }

        // add new applicant
        function btnAddApplicantOnclick() {
            $("#btnAddApplicant").prop("disabled", true);
            document.getElementById("btnAddApplicant").innerHTML = "<i class='fa fa-spinner fa-spin fa-fw'></i> Adding new Applicant";

            $.ajax({
                type: "POST",
                url: '/api/applicant/add',
                contentType: "application/json; charset=utf-8",
                success: function (id) {
                    if (id > 0) {
                        window.location = '/Software/ApplicantDetail?id=' + id;
                    } else {
                        toastr.error("Internal Server Error");
                    }
                }
            });
        }

        // stamp security
        function updateStampSecurity() {
            var item = applicantCollectionView.currentItem;
            document.getElementById('stampCreatedBy').innerHTML = item.CreatedByUser;
            document.getElementById('stampCreatedDate').innerHTML = item.CreatedDateTime;
            document.getElementById('stampUpdatedBy').innerHTML = item.UpdatedByUser;
            document.getElementById('stampUpdatedDate').innerHTML = item.UpdatedDateTime;
        }

        // ready function
        window.onload = function () {
            NProgress.start();
            toastrModification();

            applicantCollectionView = new wijmo.collections.CollectionView(getApplicantList());
            applicantCollectionView.canFilter = true;
            applicantCollectionView.pageSize = 15;

            var filterText = '';
            $('#searchApplicant').keyup(function () {
                filterText = this.value.toLowerCase();
                applicantCollectionView.refresh();
            });

            applicantCollectionView.filter = function (item) {
                return !filterText || (item.FullName.toLowerCase().indexOf(filterText) > -1);
            }

            applicantCollectionView.collectionChanged.addHandler(function (sender, args) {
                updateNavigateButtons();
            });

            applicantCollectionView.currentChanged.addHandler(function (sender, args) {
                updateStampSecurity();
            });

            // Flex Grid
            applicantFlexGrid = new wijmo.grid.FlexGrid('#applicantListFlexGrid');
            applicantFlexGrid.initialize({
                columns: [
                            {
                                "header": "Applicants",
                                "isReadOnly": true,
                                "visible": false,
                                "allowDragging": false,
                                "width": "*"
                            },
                            {
                                "header": "Edit",
                                "binding": "EditButton",
                                "width": 80,
                                "align": "center",
                                "allowResizing": false,
                                "isContentHtml": true
                            },
                            {
                                "header": "Delete",
                                "binding": "DeleteButton",
                                "width": 80,
                                "align": "center",
                                "allowResizing": false,
                                "isContentHtml": true
                            },
                            {
                                "header": "Applicant",
                                "binding": "ApplicantFullName",
                                "allowSorting": true,
                                "width": "3*"
                            },
                            {
                                "header": "L",
                                "binding": "IsLocked",
                                "allowSorting": true,
                                "width": "0.2*"
                            }
                ],
                autoGenerateColumns: false,
                itemsSource: applicantCollectionView,
                isReadOnly: true,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            applicantFlexGrid.trackChanges = true;

            //Navigation button
            btnFirstPageGrid = document.getElementById('btnMoveToFirstPageGrid');
            btnPreviousPageGrid = document.getElementById('btnMoveToPreviousPageGrid');
            btnNextPageGrid = document.getElementById('btnMoveToNextPageGrid');
            btnLastPageGrid = document.getElementById('btnMoveToLastPageGrid');
            btnCurrentPageGrid = document.getElementById('btnCurrentPageGrid');

            updateNavigateButtons();

            btnFirstPageGrid.addEventListener('click', function () {
                applicantCollectionView.moveToFirstPage();
                updateNavigateButtons();
            });
            btnPreviousPageGrid.addEventListener('click', function () {
                applicantCollectionView.moveToPreviousPage();
                updateNavigateButtons();
            });
            btnNextPageGrid.addEventListener('click', function () {
                applicantCollectionView.moveToNextPage();
                updateNavigateButtons();
            });
            btnLastPageGrid.addEventListener('click', function () {
                applicantCollectionView.moveToLastPage();
                updateNavigateButtons();
            });
        }
    </script>
</body>
</html>