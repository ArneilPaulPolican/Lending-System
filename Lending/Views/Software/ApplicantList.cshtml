<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <!-- Title -->
    <title>DLH - Applicant List</title>

    <!-- Styles -->
    @Styles.Render("~/Content/css")
</head>
<body>
    <!-- Header -->
    @Html.Partial("HomeHeader")

    <section class="software-section">
        <div class="container">
            <div class="row">
                <div class="col-lg-3">
                    <div class="list-group">
                        <a href="/Software" class="list-group-item">
                            <i class="fa fa-dashboard fa-fw"></i> &nbsp; Dashboard
                        </a>
                        <a href="/Software/ApplicantList" class="list-group-item active">
                            <i class="fa fa-users fa-fw"></i> &nbsp; Applicant
                        </a>
                        <a href="#" class="list-group-item"><i class="fa fa-file-text-o fa-fw"></i> &nbsp; Loan Application</a>
                        <a href="#" class="list-group-item"><i class="fa fa-print fa-fw"></i> &nbsp; Reports</a>
                        <a href="#" class="list-group-item"><i class="fa fa-gears fa-fw"></i> &nbsp; Settings</a>
                    </div>
                </div>
                <div class="col-lg-9">
                    <h4>List of Applicants</h4>
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            <table style="width: 100%">
                                <tr>
                                    <td>
                                        <div class="input-group">
                                            <span class="input-group-addon"><i class="fa fa-search fa-fw"></i> </span>
                                            <input type="text" id="searchApplicant" class="form-control" placeholder="Search">
                                        </div>
                                    </td>
                                    <td>&nbsp;&nbsp;&nbsp;</td>
                                    <td align="right">
                                        <button class="btn btn-success">
                                            <i class="fa fa-user-plus fa-fw"></i> New Applicant
                                        </button>
                                    </td>
                                </tr>
                            </table>
                        </div>
                        <div class="panel-body">
                            <div class="flexgridHeight">
                                <div id="applicantListFlexGrid" class="grid"></div>
                            </div>
                        </div>
                        <div class="panel-footer">
                            <div class="row">
                                <div class="btn-group col-md-7" id="naviagtionPageGrid">
                                    <button type="button" class="btn btn-default border-custom" id="btnMoveToFirstPageGrid">
                                        <span class="glyphicon glyphicon-fast-backward"></span>
                                    </button>
                                    <button type="button" class="btn btn-default border-custom" id="btnMoveToPreviousPageGrid">
                                        <span class="glyphicon glyphicon-step-backward"></span>
                                    </button>
                                    <button type="button" class="btn btn-default border-custom" disabled style="width: 100px" id="btnCurrentPageGrid"></button>
                                    <button type="button" class="btn btn-default border-custom" id="btnMoveToNextPageGrid">
                                        <span class="glyphicon glyphicon-step-forward"></span>
                                    </button>
                                    <button type="button" class="btn btn-default border-custom" id="btnMoveToLastPageGrid">
                                        <span class="glyphicon glyphicon-fast-forward"></span>
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- view applicant modal -->
    <div class="modal fade" id="viewApplicantModal" role="dialog">
        <div class="modal-dialog modal-lg">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Applicant Detail</h4>
                </div>
                <div class="modal-body">

                </div>
                <div class="modal-footer">
                    <button class="btn btn-danger" id="" data-dismiss="modal"><i class="fa fa-close fa-fw"></i> Close</button>
                </div>
            </div>
        </div>
    </div>

    <!-- delete confirmation applicant modal -->
    <div class="modal fade" id="deleteConfirmationApplicantModal" role="dialog">
        <div class="modal-dialog modal-sm">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Delete Applicant</h4>
                </div>
                <div class="modal-body">
                    Are you sure that you want to delete this Applicant?
                </div>
                <div class="modal-footer">
                    <button class="btn btn-default" id="">Yes</button>
                    <button class="btn btn-default" id="" data-dismiss="modal">No</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Scripts -->
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    <script type="text/javascript">
        // glebal variable
        var applicantCollectionView;
        var applicantFlexGrid;

        var btnFirstPageGrid;
        var btnPreviousPageGrid;
        var btnNextPageGrid;
        var btnLastPageGrid;
        var btnCurrentPageGrid;

        // get applicants
        function getApplicantList() {
            NProgress.start;
            var applicants = new wijmo.collections.ObservableArray;
            $.ajax({
                url: '/api/applicant/list',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (applicantListResult) {
                    if (applicantListResult.length > 0) {
                        for (i = 0; i < applicantListResult.length; i++) {
                            applicants.push({
                                ViewButton: "<button class='btn btn-default btn-xs btn-block' onclick='viewApplicantOnclick()'><i class='fa fa-eye fa-fw'></i> View</button>",
                                EditButton: "<button class='btn btn-primary btn-xs btn-block'><i class='fa fa-edit fa-fw'></i> Edit</button>",
                                DeleteButton: "<button class='btn btn-danger btn-xs btn-block'  onclick='deleteApplicantOnclick()'><i class='fa fa-trash fa-fw'></i> Delete</button>",
                                Id: applicantListResult[i]["Id"],
                                ApplicantCode: applicantListResult[i]["ApplicantCode"],
                                FirstName: applicantListResult[i]["FirstName"],
                                MiddleName: applicantListResult[i]["MiddleName"],
                                LastName: applicantListResult[i]["LastName"],
                                FullName: applicantListResult[i]["FirstName"] + " " + applicantListResult[i]["MiddleName"] + " " + applicantListResult[i]["LastName"],
                                BirthDate: applicantListResult[i]["BirthDate"],
                                Gender: applicantListResult[i]["Gender"],
                                Status: applicantListResult[i]["Status"],
                                CityAddress: applicantListResult[i]["CityAddress"],
                                ProvinceAddress: applicantListResult[i]["ProvinceAddress"],
                                ResidenceTypeId: applicantListResult[i]["ResidenceTypeId"],
                                ResidenceType: applicantListResult[i]["ResidenceType"],
                                LengthOfStay: applicantListResult[i]["LengthOfStay"],
                                CreatedByUserId: applicantListResult[i]["CreatedByUserId"],
                                CreatedByUser: applicantListResult[i]["CreatedByUser"],
                                CreatedDateTime: applicantListResult[i]["CreatedDateTime"],
                                UpdatedByUserId: applicantListResult[i]["UpdatedByUserId"],
                                UpdatedByUser: applicantListResult[i]["UpdatedByUser"],
                                UpdatedDateTime: applicantListResult[i]["UpdatedDateTime"]
                            });
                        }

                        NProgress.done;
                    }
                }
            });
            return applicants;
        }

        // view applicant
        function viewApplicantOnclick() {
            $("#viewApplicantModal").modal({
                "show": true,
                "backdrop": "static"
            });
        }

        // delete applicant
        function deleteApplicantOnclick() {
            $("#deleteConfirmationApplicantModal").modal({
                "show": true,
                "backdrop": "static"
            });
        }

        // navigation button for flexgrid
        function updateNavigateButtons() {
            if (applicantCollectionView.pageSize <= 0) {
                document.getElementById('naviagtionPageGrid').style.display = 'none';
                return;
            }
            document.getElementById('naviagtionPageGrid').style.display = 'block';
            if (applicantCollectionView.pageIndex === 0) {
                btnFirstPageGrid.setAttribute('disabled', 'disabled');
                btnPreviousPageGrid.setAttribute('disabled', 'disabled');
                btnNextPageGrid.removeAttribute('disabled');
                btnLastPageGrid.removeAttribute('disabled');
            } else if (applicantCollectionView.pageIndex === (applicantCollectionView.pageCount - 1)) {
                btnFirstPageGrid.removeAttribute('disabled');
                btnPreviousPageGrid.removeAttribute('disabled');
                btnLastPageGrid.setAttribute('disabled', 'disabled');
                btnNextPageGrid.setAttribute('disabled', 'disabled');
            } else {
                btnFirstPageGrid.removeAttribute('disabled');
                btnPreviousPageGrid.removeAttribute('disabled');
                btnNextPageGrid.removeAttribute('disabled');
                btnLastPageGrid.removeAttribute('disabled');
            }
            btnCurrentPageGrid.innerHTML = (applicantCollectionView.pageIndex + 1) + ' / ' + applicantCollectionView.pageCount;
        }

        // columns for the flexgrid responsive
        function showColumns(rowHeight) {
            // show/hide colummns
            var phone = applicantFlexGrid.hostElement.getBoundingClientRect().width < 678,
                cols = applicantFlexGrid.columns;

            for (var i = 0; i < cols.length; i++) {
                applicantFlexGrid.columns[i].visible = (i == 0 ? phone : !phone);
            }

            // make rows taller on phone layout
            applicantFlexGrid.rows.defaultSize = phone ? rowHeight * 2 : rowHeight;
        }

        // ready function
        window.onload = function () {
            applicantCollectionView = new wijmo.collections.CollectionView(getApplicantList());
            applicantCollectionView.canFilter = true;
            applicantCollectionView.pageSize = 15;

            var filterText = '';
            $('#searchApplicant').keyup(function () {
                filterText = this.value.toLowerCase();
                applicantCollectionView.refresh();
            });

            applicantCollectionView.filter = function (item) {
                return !filterText || (item.FullName.toLowerCase().indexOf(filterText) > -1);
            }

            applicantCollectionView.collectionChanged.addHandler(function (sender, args) {
                updateNavigateButtons();
            });

            //applicantCollectionView.currentChanged.addHandler(function (sender, args) {
            //    updateDetails();
            //});

            // Flex Grid
            applicantFlexGrid = new wijmo.grid.FlexGrid('#applicantListFlexGrid');
            applicantFlexGrid.initialize({
                columns: [
                            {
                                "header": "Applicants",
                                "isReadOnly": true,
                                "visible": false,
                                "allowDragging": false,
                                "width": "*"
                            },
                            {
                                "header": "View",
                                "binding": "ViewButton",
                                "width": 80,
                                "align": "center",
                                "allowResizing": false,
                                "allowSorting": false,
                                "isContentHtml": true
                            },
                            {
                                "header": "Code",
                                "binding": "ApplicantCode",
                                "allowSorting": true,
                                "width": "1*",
                            },
                            {
                                "header": "Applicant",
                                "binding": "FullName",
                                "allowSorting": true,
                                "width": "3*"
                            },
                            {
                                "header": "Edit",
                                "binding": "EditButton",
                                "width": 80,
                                "align": "center",
                                "allowResizing": false,
                                "isContentHtml": true
                            },
                            {
                                "header": "Delete",
                                "binding": "DeleteButton",
                                "width": 80,
                                "align": "center",
                                "allowResizing": false,
                                "isContentHtml": true
                            },
                ],
                autoGenerateColumns: false,
                itemsSource: applicantCollectionView,
                isReadOnly: true,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            applicantFlexGrid.trackChanges = true;

            //Navigation button
            btnFirstPageGrid = document.getElementById('btnMoveToFirstPageGrid');
            btnPreviousPageGrid = document.getElementById('btnMoveToPreviousPageGrid');
            btnNextPageGrid = document.getElementById('btnMoveToNextPageGrid');
            btnLastPageGrid = document.getElementById('btnMoveToLastPageGrid');
            btnCurrentPageGrid = document.getElementById('btnCurrentPageGrid');

            updateNavigateButtons();

            btnFirstPageGrid.addEventListener('click', function () {
                applicantCollectionView.moveToFirstPage();
                updateNavigateButtons();
            });
            btnPreviousPageGrid.addEventListener('click', function () {
                applicantCollectionView.moveToPreviousPage();
                updateNavigateButtons();
            });
            btnNextPageGrid.addEventListener('click', function () {
                applicantCollectionView.moveToNextPage();
                updateNavigateButtons();
            });
            btnLastPageGrid.addEventListener('click', function () {
                applicantCollectionView.moveToLastPage();
                updateNavigateButtons();
            });

            // show company summary on phone layout
            applicantFlexGrid.formatItem.addHandler(function (s, e) {
                if (e.panel == applicantFlexGrid.cells && e.col == 0) {
                    var html = wijmo.format(
                        '<table style="width: 100%">' +
                            '<tr>' +
                               '<td align="left" style="width: 20%">' +
                                    '<div class="button-item">{ViewButton} </div>' +
                                    '<div class="button-item"></div>' +
                                '</td>' +
                                 '<td>' +
                                    '&nbsp;&nbsp;' +
                                '</td>' +
                                '<td>' +
                                    '<div class="item-header">{FullName}</div>' +
                                    '<div class="item-detail">{ApplicantCode}</div>' +
                                '</td>' +
                                '<td>' +
                                    '&nbsp;&nbsp;' +
                                '</td>' +
                                '<td align="right" style="width: 20%" valign="middle">' +
                                    '<div class="button-item">{EditButton}</div>' +
                                    '<div class="button-item">{DeleteButton} </div>' +
                                '</td>' +
                            '</tr>' +
                        '</table>',
                        applicantFlexGrid.rows[e.row].dataItem);
                    e.cell.innerHTML = html;
                }
            });

            // making the flexgrid responsive
            var rowHeight = applicantFlexGrid.rows.defaultSize;

            window.onresize = function (event) {
                showColumns(rowHeight);
            };

            showColumns(rowHeight);
        }
    </script>
</body>
</html>