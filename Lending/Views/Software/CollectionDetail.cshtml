<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <link rel="shortcut icon" href="~/Images/dlhicon.ico">

    <!-- Title -->
    <title>Collection Detail</title>

    <!-- Styles -->
    @Styles.Render("~/Content/css")
</head>
<body>
    <div id="wrapper">
        <!-- Header -->
        @Html.Partial("SoftwareHeader")

        <div id="page-wrapper">
            <div class="container-fluid">
                <div class="row">
                    <div class="col-lg-12">
                        <h3 class="">
                            <i class="fa fa-money fa-fw"></i>  Collection Detail <small>Edit detail page</small>
                        </h3>
                        <ol class="breadcrumb">
                            <li>
                                <a href="/Software">Dashboard</a>
                            </li>
                            <li>
                                <a href="/Software/CollectionList">Collections</a>
                            </li>
                            <li class="active">
                                Collection Detail
                            </li>
                        </ol>
                    </div>
                </div>
                <div class="panel panel-default">
                    <div class="panel-heading" align="right">
                        <div class="dropdown">
                            <button class="btn btn-primary" id="btnLock" onclick="btnLockOnClick()">
                                <i class="fa fa-lock fa-fw"></i> Lock
                            </button>
                            <button class="btn btn-primary" id="btnUnlock" onclick="btnUnlockOnClick()">
                                <i class="fa fa-unlock fa-fw"></i> Unlock
                            </button>
                            <button class="btn btn-primary" type="button" id="btnOptions" data-toggle="dropdown">
                                <i class="fa fa-bars fa-fw"></i>
                            </button>
                            <ul class="dropdown-menu dropdown-menu-right">
                                <li class="dropdown-header">Options</li>
                                <li><a href="#" onclick="btnAddCollectionOnclick()"><i class="fa fa-plus fa-fw"></i> &nbsp; New Collection</a></li>
                                <li><a href="#" onclick="btnDeleteCollectionOnclick()"><i class="fa fa-trash fa-fw"></i> &nbsp; Delete</a></li>
                                <li class="divider"></li>
                                <li><a href="#" onclick="btnRecentCollections()"><i class="fa fa-money fa-fw"></i> &nbsp; Recent Collection</a></li>
                            </ul>
                        </div>
                    </div>
                    <div class="panel-body">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="panel panel-default">
                                    <div class="panel-heading">
                                        Detail
                                    </div>
                                    <div class="panel-body">
                                        <div class="form-horizontal">
                                            <div class="form-group">
                                                <label class="control-label col-sm-4">Collection Number</label>
                                                <div class="col-sm-8">
                                                    <input type="text" class="form-control requiredCollection" id="collectionNumber" placeholder="Collection Number" disabled />
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label class="control-label col-sm-4">Collection Date</label>
                                                <div class="col-sm-8">
                                                    <div id="cboCollectionDate" style="width: 100%;"></div>
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label class="control-label col-sm-4">Applicant</label>
                                                <div class="col-sm-8">
                                                    <div class="input-group">
                                                        <div id="cboCollectionApplicant" style="width: 100%;"></div>
                                                        <div class="input-group-btn">
                                                            <button class="btn btn-primary" onclick="btnApplicantDetailOnClick()">
                                                                <i class="fa fa-edit fa-fw"></i>
                                                            </button>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label class="control-label col-sm-4">Loan Number</label>
                                                <div class="col-sm-8">
                                                    <div class="input-group">
                                                        <div id="cboCollectionApplicantLoanNumber" style="width: 100%;"></div>
                                                        <div class="input-group-btn">
                                                            <button class="btn btn-primary" onclick="btnLoanNumberDetailOnClick()">
                                                                <i class="fa fa-edit fa-fw"></i>
                                                            </button>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label class="control-label col-sm-4">Particulars</label>
                                                <div class="col-sm-8">
                                                    <textarea class="form-control requiredCollection" rows="5" id="collectionParticulars" placeholder="Particulars"></textarea>
                                                </div>
                                            </div>
                                            @*<div class="form-group">
                                                    <label class="control-label col-sm-4">Collector</label>
                                                    <div class="col-sm-8">
                                                        <div class="input-group">
                                                            <div id="cboCollectionCollectorStaff" style="width: 100%;"></div>
                                                            <div class="input-group-btn">
                                                                <button class="btn btn-primary" onclick="btnStaffDetailOnClick()">
                                                                    <i class="fa fa-edit fa-fw"></i>
                                                                </button>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>*@
                                            <div class="form-group">
                                                <label class="control-label col-sm-4">Prepared by</label>
                                                <div class="col-sm-8">
                                                    <div id="cboCollectionPreparedBy" style="width: 100%;"></div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="panel panel-default">
                                    <div class="panel-body">
                                        <div class="row">
                                            <div class="col-md-6">
                                                <p>Created by:</p>
                                                <div style="padding-left: 10px;">
                                                    <i class="fa fa-key fa-fw"></i> <label id="stampCreatedBy">NA</label>
                                                    <br />
                                                    <small><i class="fa fa-calendar fa-fw"></i> &nbsp;<span id="stampCreatedDate">mm/dd/yyyy</span></small>
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <p>Updated by:</p>
                                                <div style="padding-left: 10px;">
                                                    <i class="fa fa-key fa-fw"></i> <label id="stampUpdatedBy">NA</label>
                                                    <br />
                                                    <small><i class="fa fa-calendar fa-fw"></i> &nbsp;<span id="stampUpdatedDate">mm/dd/yyyy</span></small>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                @*<div class="panel panel-default">
                                        <div class="panel-heading">
                                            Loan Balance (Calculate upon locking)
                                        </div>
                                        <div class="panel-body">
                                            <form class="form-horizontal">
                                                <div class="form-group">
                                                    <label class="control-label col-sm-4">Collectible</label>
                                                    <div class="col-sm-8">
                                                        <div class="input-group numberField">
                                                            <span class="input-group-addon">&#8369;</span>
                                                            <input type="text" class="form-control numberField" id="payCollectible" placeholder="0.00" disabled />
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    <label class="control-label col-sm-4">Total Paid</label>
                                                    <div class="col-sm-8">
                                                        <div class="input-group numberField">
                                                            <span class="input-group-addon">&#8369;</span>
                                                            <input type="text" class="form-control numberField" id="payTotalPaid" placeholder="0.00" disabled />
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    <label class="control-label col-sm-4">Total Penalty</label>
                                                    <div class="col-sm-8">
                                                        <div class="input-group numberField">
                                                            <span class="input-group-addon">&#8369;</span>
                                                            <input type="text" class="form-control numberField" id="payTotalPenalty" placeholder="0.00" disabled />
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    <label class="control-label col-sm-4">Total Balance</label>
                                                    <div class="col-sm-8">
                                                        <div class="input-group numberField">
                                                            <span class="input-group-addon">&#8369;</span>
                                                            <input type="text" class="form-control numberField" id="payBalance" placeholder="0.00" disabled />
                                                        </div>
                                                    </div>
                                                </div>
                                            </form>
                                        </div>
                                    </div>*@
                                <div class="panel panel-default">
                                    <div class="panel-heading">
                                        Amount
                                    </div>
                                    <div class="panel-body">
                                        <form class="form-horizontal">
                                            <div class="form-group">
                                                <label class="control-label col-sm-4">Status</label>
                                                <div class="col-sm-8">
                                                    <div id="cboCollectionStatus"></div>
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label class="control-label col-sm-4">Paid Amount</label>
                                                <div class="col-sm-8">
                                                    <div class="input-group numberField">
                                                        <span class="input-group-addon">&#8369;</span>
                                                        <input type="text" class="form-control numberField requiredCollection" id="collectionTotalPaidAmount" placeholder="0.00" />
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label class="control-label col-sm-4">Penalty Amount</label>
                                                <div class="col-sm-8">
                                                    <div class="input-group numberField">
                                                        <span class="input-group-addon">&#8369;</span>
                                                        <input type="text" class="form-control numberField requiredCollection" id="collectionTotalPenaltyAmount" placeholder="0.00" />
                                                    </div>
                                                </div>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                @*<div class="panel panel-default">
                        <div class="panel-heading">
                            <table style="width: 100%">
                                <tr>
                                    <td>
                                        Collections
                                    </td>
                                    <td align="right">
                                         <button class="btn btn-primary " id="btnFullPayment" onclick="btnFullPaymentOnclick()">
                                            <i class="fa fa-money fa-fw"></i> Add All
                                        </button>
                                        <button class="btn btn-primary " id="btnAddCollectionLines" onclick="btnAddCollectionLinesOnclick()">
                                            <i class="fa fa-plus fa-fw"></i> Add
                                        </button>
                                    </td>
                                </tr>
                            </table>
                        </div>
                        <div class="panel-body">
                            <div id="collectionLinesFlexgrid" class="grid"></div>
                        </div>
                        <div class="panel-footer">
                            <div class="row">
                                <div class="btn-group col-md-7" id="naviagtionPageGrid">
                                    <button type="button" class="btn btn-default border-custom" id="btnMoveToFirstPageGrid">
                                        <span class="glyphicon glyphicon-fast-backward"></span> First
                                    </button>
                                    <button type="button" class="btn btn-default border-custom" id="btnMoveToPreviousPageGrid">
                                        <span class="glyphicon glyphicon-step-backward"></span> Previous
                                    </button>
                                    <button type="button" class="btn btn-default border-custom" disabled style="width: 100px" id="btnCurrentPageGrid"></button>
                                    <button type="button" class="btn btn-default border-custom" id="btnMoveToNextPageGrid">
                                        <span class="glyphicon glyphicon-step-forward"></span> Next
                                    </button>
                                    <button type="button" class="btn btn-default border-custom" id="btnMoveToLastPageGrid">
                                        <span class="glyphicon glyphicon-fast-forward"></span> Last
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>*@
            </div>
        </div>
    </div>

    <!-- collection lines Detail Modal -->
    <div class="modal fade" id="collectionLineDetailModal" role="dialog">
        <div class="modal-dialog modal-lg">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Recent Collection</h4>
                </div>
                <div class="modal-body">
                    <div id="recentCollectionLinesFlexgrid" style="height: 400px;"></div>

                    @*<ul id="myTab" class="nav nav-tabs">
                            <li class="active">
                                <a href="#currentCollections" data-toggle="tab" id="currentCollectionsTab">
                                    Current Collections
                                </a>
                            </li>
                            <li>
                                <a href="#recentCollections" data-toggle="tab" id="recentCollectionsTab">
                                    Recent Collections
                                </a>
                            </li>
                        </ul>*@
                    <br />
                    <div id="myTabContent" class="tab-content">
                        <div class="tab-pane fade in" id="currentCollections">
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="panel panel-default">
                                        <div class="panel-heading">
                                            Loan Balance and Collectible
                                        </div>
                                        <div class="panel-body">
                                            <form class="form-horizontal">
                                                <div class="form-group">
                                                    <label class="control-label col-sm-4">Balance</label>
                                                    <div class="col-sm-8">
                                                        <div class="input-group numberField">
                                                            <span class="input-group-addon">&#8369;</span>
                                                            <input type="text" class="form-control numberField" id="payBalance2" placeholder="0.00" disabled />
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    <label class="control-label col-sm-4">Collectible</label>
                                                    <div class="col-sm-8">
                                                        <div class="input-group numberField">
                                                            <span class="input-group-addon">&#8369;</span>
                                                            <input type="text" class="form-control numberField" id="payCollectible2" placeholder="0.00" disabled />
                                                        </div>
                                                    </div>
                                                </div>
                                            </form>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="panel panel-default">
                                        <div class="panel-heading">
                                            Collection Detail and Amount
                                        </div>
                                        <div class="panel-body">
                                            <div class="row">
                                                <div class="col-md-12">
                                                    <form class="form-horizontal">
                                                        <div class="form-group">
                                                            <label class="control-label col-sm-4">Date</label>
                                                            <div class="col-sm-8">
                                                                <div id="cboPayDate"></div>
                                                            </div>
                                                        </div>
                                                        @*<div class="form-group">
                                                                <label class="control-label col-sm-4">Status</label>
                                                                <div class="col-sm-8">
                                                                    <div id="cboCollectionStatus"></div>
                                                                </div>
                                                            </div>*@
                                                        <div class="form-group">
                                                            <label class="control-label col-sm-4">Paid</label>
                                                            <div class="col-sm-8">
                                                                <div class="input-group numberField">
                                                                    <span class="input-group-addon">&#8369;</span>
                                                                    <input type="text" class="form-control numberField requiredPayment" id="payPaidAmount" placeholder="0.00" />
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="form-group">
                                                            <label class="control-label col-sm-4">Penalty</label>
                                                            <div class="col-sm-8">
                                                                <div class="input-group numberField">
                                                                    <span class="input-group-addon">&#8369;</span>
                                                                    <input type="text" class="form-control numberField requiredPayment" id="payPenaltyAmount" placeholder="0.00" />
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="form-group">
                                                            <label class="control-label col-sm-4">Particulars</label>
                                                            <div class="col-sm-8">
                                                                <textarea class="form-control requiredPayment" rows="3" id="payParticulars" placeholder="Particulars"></textarea>
                                                            </div>
                                                        </div>
                                                    </form>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="tab-pane fade in" id="recentCollections">
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    @*<button class="btn btn-primary" id="btnSaveCollectionLine" onclick="btnSaveCollectionLineOnclick()"><i class="fa fa-save fa-fw"></i> Save</button>*@
                    <button class="btn btn-danger" id="btnCloseCollectionLine" data-dismiss="modal"><i class="fa fa-close fa-fw"></i> Close</button>
                </div>
            </div>
        </div>
    </div>

    <!-- delete confirmation collection line modal -->
    <div class="modal fade" id="deleteConfirmationCollectionLineModal" role="dialog">
        <div class="modal-dialog modal-sm">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Delete Collection Line</h4>
                </div>
                <div class="modal-body">
                    Delete?
                </div>
                <div class="modal-footer">
                    <button class="btn btn-danger" id="btnConfirmDeleteCollectionLine" onclick="btnConfirmDeleteCollectionLineOnclick()">Delete</button>
                    <button class="btn btn-default" id="btnCloseDeleteCollectionLineModal" data-dismiss="modal">No</button>
                </div>
            </div>
        </div>
    </div>

    <!-- full payment confirmation collection line modal -->
    <!--<div class="modal fade" id="fullPaymentConfirmationCollectionLineModal" role="dialog">
        <div class="modal-dialog">-->
    <!-- Modal content-->
    <!--<div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Add All Payment</h4>
                </div>
                <div class="modal-body">
                    <form class="form-horizontal">
                        <div class="form-group">
                            <label class="control-label col-sm-4">Total Balance</label>
                            <div class="col-sm-8">
                                <div class="input-group numberField">
                                    <span class="input-group-addon">&#8369;</span>
                                    <input type="text" class="form-control numberField" id="loanTotalBalanceAmount" placeholder="0.00" disabled />
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-primary" id="btnConfirmFullPaymentCollectionLine" onclick="btnConfirmFullPaymentCollectionLineOnclick()"><i class="fa fa-check fa-fw"></i> Confirm</button>
                    <button class="btn btn-default" id="btnCloseFullPaymentCollectionLineModal" data-dismiss="modal">Cancel</button>
                </div>
            </div>
        </div>
    </div>-->
    <!-- payment modal -->
    <div class="modal fade" id="paymentModal" role="dialog">
        <div class="modal-dialog">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Payment</h4>
                </div>
                <div class="modal-body">
                    <form class="form-horizontal">
                        <div class="form-group">
                            <label class="control-label col-sm-4">Total Balance</label>
                            <div class="col-sm-8">
                                <div class="input-group numberField">
                                    <span class="input-group-addon">&#8369;</span>
                                    <input type="text" class="form-control numberField requiredCollectionLines" id="TotalBalanceAmount" placeholder="0.00" disabled />
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-sm-4">Collectible</label>
                            <div class="col-sm-8">
                                <div class="input-group numberField">
                                    <span class="input-group-addon">&#8369;</span>
                                    <input type="text" class="form-control numberField requiredCollectionLines" id="collectionLinesCollectibleAmount" placeholder="0.00" disabled />
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-sm-4">Amount</label>
                            <div class="col-sm-8">
                                <div class="input-group numberField">
                                    <span class="input-group-addon">&#8369;</span>
                                    <input type="text" class="form-control numberField requiredCollectionLines" id="collectionLinesPaidAmount" placeholder="0.00" />
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-danger" id="btnCloseCollectionLine" data-dismiss="modal"><i class="fa fa-close fa-fw"></i> Close</button>
                </div>
            </div>
        </div>
    </div>

    <!-- penalty modal -->
    <div class="modal fade" id="penaltyModal" role="dialog">
        <div class="modal-dialog">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Penalty for Collections</h4>
                </div>
                <div class="modal-body">
                    <form class="form-horizontal">
                        <div class="form-group">
                            <label class="control-label col-sm-4">Penalty</label>
                            <div class="col-sm-8">
                                <div id="cboPenalty" style="width: 100%;"></div>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-sm-4">Amount</label>
                            <div class="col-sm-8">
                                <div class="input-group numberField">
                                    <span class="input-group-addon">&#8369;</span>
                                    <input type="text" class="form-control numberField requiredCollectionLines" id="collectionLinesPenaltyAmount" placeholder="0.00" />
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                </div>
            </div>
        </div>
    </div>

    <!-- delete confirmation collection modal -->
    <div class="modal fade" id="deleteConfirmationCollectionModal" role="dialog">
        <div class="modal-dialog modal-sm">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Delete Collection</h4>
                </div>
                <div class="modal-body">
                    Delete?
                </div>
                <div class="modal-footer">
                    <button class="btn btn-danger" id="btnConfirmDeleteCollection" onclick="btnConfirmDeleteCollectionOnclick()">Delete</button>
                    <button class="btn btn-default" id="btnCloseDeleteCollectionModal" data-dismiss="modal">No</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Scripts -->
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    <script type="text/javascript">
        var newDate = new Date();
        var collectionDateValue = [newDate.getMonth() + 1, newDate.getDate(), newDate.getFullYear()].join('-');
        var cboCollectionDate;
        var cboCollectionApplicant;
        var cboCollectionApplicantLoanNumber;
        var cboCollectionPreparedBy;
        var isLocked = false;
        var collectionLinesCollectionView;
        var collectionLinesFlexgrid;
        var cboPenalty;
        var recentCollectionLinesCollectionView;
        var recentCollectionLinesFlexgrid;
        var currentCollectionsCollectionView;
        var applicantloanunmberselectedvalue = "";
        var cboCollectionCollectorStaff;

        // full payment
        //function btnFullPaymentOnclick() {
        //    $("#fullPaymentConfirmationCollectionLineModal").modal({
        //        "show": true,
        //        "backdrop": "static"
        //    });

        //    $("#btnConfirmFullPaymentCollectionLine").prop("disabled", false);
        //    document.getElementById("btnConfirmFullPaymentCollectionLine").innerHTML = "<i class'fa fa-check fa-fw'></i> Confirm";
        //}

        // confirm full payment
        //function btnConfirmFullPaymentCollectionLineOnclick() {
        //    $("#btnConfirmFullPaymentCollectionLine").prop("disabled", true);
        //    document.getElementById("btnConfirmFullPaymentCollectionLine").innerHTML = "<i class='fa fa-spinner fa-spin fa-fw'></i> Updating"

        //    var collectionLinesObject = new Object();
        //    collectionLinesObject.CollectionId = getUrlParameter("id");
        //    collectionLinesObject.LoanId = cboCollectionApplicantLoanNumber.selectedItem["Id"];
        //    var collectionLinesData = JSON.stringify(collectionLinesObject);

        //    $.ajax({
        //        type: "POST",
        //        url: '/api/collectionLines/fullPayment',
        //        contentType: "application/json; charset=utf-8",
        //        data: collectionLinesData,
        //        statusCode: {
        //            200: function () {
        //                toastr.success("Successfully Paid", "Successfully Paid");
        //                $("#btnConfirmFullPaymentCollectionLine").prop("disabled", false);
        //                document.getElementById("btnConfirmFullPaymentCollectionLine").innerHTML = "<i class'fa fa-check fa-fw'></i> Confirm";

        //                $("#fullPaymentConfirmationCollectionLineModal").modal('hide');

        //                collectionLinesCollectionView = new wijmo.collections.CollectionView(getCollectionLinesByCollectionId());
        //                collectionLinesCollectionView.pageSize = 15;

        //                collectionLinesCollectionView.collectionChanged.addHandler(function (sender, args) {
        //                    updateNavigateButtons();
        //                });

        //                collectionLinesFlexgrid.itemsSource = collectionLinesCollectionView;
        //                collectionLinesFlexgrid.trackChanges = true;
        //            },
        //            404: function (message) {
        //                toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Not Found");
        //                $("#btnConfirmFullPaymentCollectionLine").prop("disabled", false);
        //                document.getElementById("btnConfirmFullPaymentCollectionLine").innerHTML = "<i class'fa fa-check fa-fw'></i> Confirm";

        //                $("#fullPaymentConfirmationCollectionLineModal").modal('hide');
        //            },
        //            400: function (message) {
        //                toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Bad Request");
        //                $("#btnConfirmFullPaymentCollectionLine").prop("disabled", false);
        //                document.getElementById("btnConfirmFullPaymentCollectionLine").innerHTML = "<i class'fa fa-check fa-fw'></i> Confirm";

        //                $("#fullPaymentConfirmationCollectionLineModal").modal('hide');
        //            }
        //        }
        //    });
        //}

        // create collection Date
        function createCollectionDate() {
            cboCollectionDate.dispose();
            cboCollectionDate = new wijmo.input.InputDate('#cboCollectionDate', {
                format: 'MM-dd-yyyy',
                value: new Date(collectionDateValue),
                mask: '99-99-9999',
                onValueChanged: function () {
                    var thisDateValue = [this.value.getMonth() + 1, this.value.getDate(), this.value.getFullYear()].join('-');
                    collectionDateValue = thisDateValue;
                }
            });

            cboCollectionApplicant = new wijmo.input.ComboBox('#cboCollectionApplicant');
            getApplicant();
        }

        function createPayDate() {
            cboPayDate.dispose();
            cboPayDate = new wijmo.input.InputDate('#cboPayDate', {
                format: 'MM-dd-yyyy dddd',
                value: new Date(),
                mask: '99-99-9999'
            });
        }

        // get applicant
        function getApplicant() {
            var applicantArray = new Array();
            $.ajax({
                url: '/api/loan/list/loanApplicants',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (applicantResults) {
                    var disabled = true;
                    if (applicantResults.length > 0) {
                        for (i = 0; i < applicantResults.length; i++) {
                            applicantArray.push({
                                ApplicantId: applicantResults[i]["ApplicantId"],
                                Applicant: applicantResults[i]["Applicant"],
                                ApplicantNumber: "AP-" + applicantResults[i]["ApplicantNumber"],
                                Area: applicantResults[i]["Area"],
                            });
                        }

                        disabled = false;
                    }

                    var template = '<table style="table-layout:fixed; width:650px; margin-top: 10px; margin-bottom: 10px;" border="0"> ' +
                                        '<col style="width: 120px;"/>' +
                                        '<col style="width: 200px;"/>' +
                                        '<col style="width: 150px;"/>' +
                                        '<thead>' +
                                            '<th style="word-wrap:break-word; padding-right: 50px;" valign="top"> Applicant No. </td>' +
                                            '<th style="word-wrap:break-word; padding-right: 50px;" valign="top"> Name </td>' +
                                            '<th style="word-wrap:break-word; padding-right: 50px;" valign="top"> Area </td>' +
                                        '</thead>' +
                                         '<tbody>' +
                                            '<tr>' +
                                                '<td style="word-wrap:break-word; padding-right: 50px;" valign="top">{ApplicantNumber}</td>' +
                                                '<td style="word-wrap:break-word; padding-right: 50px;" valign="top">{Applicant}</td>' +
                                                '<td style="word-wrap:break-word; padding-right: 50px;" valign="top">{Area}</td>' +
                                            '</tr>' +
                                        '</tbody>' +
                                   '</table>';

                    cboCollectionApplicant.dispose();
                    cboCollectionApplicant = new wijmo.input.ComboBox('#cboCollectionApplicant', {
                        isDisabled: disabled,
                        itemsSource: applicantArray,
                        isEditable: false,
                        isRequired: true,
                        displayMemberPath: "Applicant",
                        selectedValuePath: "Applicant",
                        headerPath: 'Applicant',
                        formatItem: function (s, e) {
                            var html = wijmo.format(template, e.data);
                            e.item.innerHTML = html;
                        },
                        onSelectedIndexChanged: function () {
                            getApplicantLoanNumber();
                        }
                    });

                    cboCollectionApplicantLoanNumber = new wijmo.input.ComboBox('#cboCollectionApplicantLoanNumber');
                    getApplicantLoanNumber();

                    //;
                    //getCollectionStatus();
                    cboCollectionStatus = new wijmo.input.ComboBox('#cboCollectionStatus');
                    getCollectionStatus();;
                }
            });
        }

        // get applicant
        function getApplicantLoanNumber() {
            var applicantLoanNumberArray = new Array();
            $.ajax({
                url: '/api/loan/list/byApplicantId/' + cboCollectionApplicant.selectedItem["ApplicantId"],
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (applicantLoanNumberResults) {
                    var disabled = true;
                    if (applicantLoanNumberResults.length > 0) {
                        for (i = 0; i < applicantLoanNumberResults.length; i++) {
                            applicantLoanNumberArray.push({
                                Id: applicantLoanNumberResults[i]["Id"],
                                LoanNumberDetail: applicantLoanNumberResults[i]["LoanNumberDetail"],
                                MaturityDate: applicantLoanNumberResults[i]["MaturityDate"],
                                CollectibleAmount: applicantLoanNumberResults[i]["CollectibleAmount"].toLocaleString(),
                                TotalPaidAmount: applicantLoanNumberResults[i]["TotalPaidAmount"].toLocaleString(),
                                TotalBalanceAmount: applicantLoanNumberResults[i]["TotalBalanceAmount"].toLocaleString(),
                                TotalPenaltyAmount: applicantLoanNumberResults[i]["TotalPenaltyAmount"].toLocaleString(),
                                IsLoanApplication: applicantLoanNumberResults[i]["IsLoanApplication"],
                                IsLoanRenew: applicantLoanNumberResults[i]["IsLoanRenew"],
                                IsLoanReconstruct: applicantLoanNumberResults[i]["IsLoanReconstruct"],
                                Particulars: applicantLoanNumberResults[i]["Particulars"]
                            });
                        }

                        disabled = false;
                    }

                    var disabledLoanNumber = false;
                    if (isLocked) {
                        disabledLoanNumber = true;;
                    }

                    var template = '<table style="table-layout:fixed; width:850px; margin-top: 10px; margin-bottom: 10px;" border="0"> ' +
                                        '<col style="width: 120px;"/>' +
                                        '<col style="width: 100px;"/>' +
                                        '<col style="width: 150px;"/>' +
                                        '<col style="width: 10px;"/>' +
                                        '<col style="width: 150px;"/>' +
                                        '<col style="width: 10px;"/>' +
                                        '<col style="width: 120px;"/>' +
                                        '<thead>' +
                                            '<th style="word-wrap:break-word; padding-right: 50px;" valign="top"> Loan No. </td>' +
                                            '<th style="word-wrap:break-word; padding-right: 50px;" valign="top"> Due Date </td>' +
                                            '<th style="word-wrap:break-word; padding-right: 50px;" valign="top"> Particulars </td>' +
                                            '<th style="word-wrap:break-word; padding-right: 30px;" valign="top" colspan="2"> Collectible </th>' +
                                            '<th style="word-wrap:break-word;" valign="top" colspan="2"> Balance </th>' +
                                        '</thead>' +
                                         '<tbody>' +
                                            '<tr>' +
                                                '<td style="word-wrap:break-word; padding-right: 50px;" valign="top">{LoanNumberDetail}</td>' +
                                                '<td style="word-wrap:break-word; padding-right: 50px;" valign="top">{MaturityDate}</td>' +
                                                '<td style="word-wrap:break-word; padding-right: 50px;" valign="top">{Particulars}</td>' +
                                                '<td style="padding: 0px; margin: 0px;" valign="top"> &#8369 </td>' +
                                                '<td style="text-align: right; word-wrap:break-word; padding-right: 30px;" valign="top"> {CollectibleAmount}</td>' +
                                                '<td style="padding: 0px; margin: 0px;" valign="top"> &#8369 </td>' +
                                                '<td style="text-align: right; word-wrap:break-word;" valign="top"> {TotalBalanceAmount}</td>' +
                                            '</tr>' +
                                        '</tbody>' +
                                   '</table>';

                    cboCollectionApplicantLoanNumber.dispose();
                    cboCollectionApplicantLoanNumber = new wijmo.input.ComboBox('#cboCollectionApplicantLoanNumber', {
                        isDisabled: disabledLoanNumber,
                        itemsSource: applicantLoanNumberArray,
                        isEditable: false,
                        isRequired: true,
                        displayMemberPath: "LoanNumberDetail",
                        selectedValuePath: "LoanNumberDetail",
                        headerPath: 'LoanNumberDetail',
                        formatItem: function (s, e) {
                            var html = wijmo.format(template, e.data);
                            e.item.innerHTML = html;
                        },
                        selectedValue: applicantloanunmberselectedvalue.toString(),
                        onSelectedIndexChanged: function () {
                            //recentCollectionLinesCollectionView = new wijmo.collections.CollectionView(getRecentCollectionLinesByLoanId());
                            //recentCollectionLinesFlexgrid.itemsSource = recentCollectionLinesCollectionView;
                            //recentCollectionLinesFlexgrid.trackChanges = true;

                            //document.getElementById("payBalance").value = this.selectedItem["TotalBalanceAmount"].toLocaleString();
                            //document.getElementById("payBalance2").value = this.selectedItem["TotalBalanceAmount"].toLocaleString();
                            //document.getElementById("payCollectible").value = this.selectedItem["CollectibleAmount"].toLocaleString();
                            //document.getElementById("payCollectible2").value = this.selectedItem["CollectibleAmount"].toLocaleString();

                            //document.getElementById("payTotalPaid").value = this.selectedItem["TotalPaidAmount"].toLocaleString();
                            //document.getElementById("payTotalPenalty").value = this.selectedItem["TotalPenaltyAmount"].toLocaleString();

                            //if (this.selectedItem["TotalBalanceAmount"] >= this.selectedItem["CollectibleAmount"]) {
                            //    document.getElementById("payPaidAmount").value = this.selectedItem["CollectibleAmount"].toLocaleString();
                            //} else {
                            //    document.getElementById("payPaidAmount").value = this.selectedItem["TotalBalanceAmount"].toLocaleString();
                            //}
                        }
                    });


                    //document.getElementById("payBalance").value = cboCollectionApplicantLoanNumber.selectedItem["TotalBalanceAmount"].toLocaleString();
                    //document.getElementById("payBalance2").value = cboCollectionApplicantLoanNumber.selectedItem["TotalBalanceAmount"].toLocaleString();
                    //document.getElementById("payCollectible").value = cboCollectionApplicantLoanNumber.selectedItem["CollectibleAmount"].toLocaleString();
                    //document.getElementById("payCollectible2").value = cboCollectionApplicantLoanNumber.selectedItem["CollectibleAmount"].toLocaleString();

                    //document.getElementById("payTotalPaid").value = cboCollectionApplicantLoanNumber.selectedItem["TotalPaidAmount"].toLocaleString();
                    //document.getElementById("payTotalPenalty").value = cboCollectionApplicantLoanNumber.selectedItem["TotalPenaltyAmount"].toLocaleString();

                    //if (cboCollectionApplicantLoanNumber.selectedItem["TotalBalanceAmount"] >= cboCollectionApplicantLoanNumber.selectedItem["CollectibleAmount"]) {
                    //    document.getElementById("payPaidAmount").value = cboCollectionApplicantLoanNumber.selectedItem["CollectibleAmount"].toLocaleString();
                    //} else {
                    //    document.getElementById("payPaidAmount").value = cboCollectionApplicantLoanNumber.selectedItem["TotalBalanceAmount"].toLocaleString();
                    //}

                    createRecentCollectionFlexgrid();
                    window.createRecentCollectionFlexgrid = function () {
                        return true;
                    }
                }
            });
        }

        // get collection Status
        function getCollectionStatus() {
            var collectionStatusArray = new Array();
            $.ajax({
                url: '/api/collectionStatus/list',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (collectionStatusResults) {
                    var disabled = true;
                    if (collectionStatusResults.length > 0) {
                        for (i = 0; i < collectionStatusResults.length; i++) {
                            collectionStatusArray.push({
                                Id: collectionStatusResults[i]["Id"],
                                Status: collectionStatusResults[i]["Status"],
                            });
                        }

                        disabled = false;

                    } else {
                    }


                    cboCollectionPreparedBy = new wijmo.input.ComboBox('#cboCollectionPreparedBy');
                    getUser();

                    cboCollectionStatus.dispose();
                    cboCollectionStatus = new wijmo.input.ComboBox('#cboCollectionStatus', {
                        isDisabled: disabled,
                        itemsSource: collectionStatusArray,
                        isEditable: false,
                        isRequired: true,
                        displayMemberPath: "Status",
                        selectedValuePath: "Status",
                        onSelectedIndexChanged: function () {

                        }
                    });
                }
            });
        }

        // get users
        function getStaff() {
            var staffArray = new Array();
            $.ajax({
                url: '/api/staff/list',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (staffResults) {
                    var disabled = true;
                    if (staffResults.length > 0) {
                        for (i = 0; i < staffResults.length; i++) {
                            staffArray.push({
                                Id: staffResults[i]["Id"],
                                StaffNumber: "ST-" + staffResults[i]["StaffNumber"],
                                Staff: staffResults[i]["Staff"],
                            });
                        }

                        disabled = false;
                    }


                    var template = '<table border="0">' +
                                       //'<thead>' +
                                       //     '<th style="width: 150px;"> Staff No. </td>' +
                                       //     '<th style="width: 300px;"> Staff </td>' +
                                       //'</thead>' +
                                       '<tr>' +
                                           '<td style="width: 150px;">{StaffNumber}</td>' +
                                           '<td style="width: 300px;">{Staff}</td>' +
                                       '</tr>' +
                                   '</table>';


                    cboCollectionCollectorStaff.dispose();
                    cboCollectionCollectorStaff = new wijmo.input.ComboBox('#cboCollectionCollectorStaff', {
                        isDisabled: disabled,
                        itemsSource: staffArray,
                        isEditable: false,
                        isRequired: true,
                        displayMemberPath: "Staff",
                        selectedValuePath: "Staff",
                        headerPath: 'Staff',
                        formatItem: function (s, e) {
                            var html = wijmo.format(template, e.data);
                            e.item.innerHTML = html;
                        },
                    });
                }
            });
        }

        // get users
        function getUser() {
            var userArray = new Array();
            $.ajax({
                url: '/api/user/list',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (userrResults) {
                    var disabled = true;
                    if (userrResults.length > 0) {
                        for (i = 0; i < userrResults.length; i++) {
                            userArray.push({
                                Id: userrResults[i]["Id"],
                                FullName: userrResults[i]["FullName"],
                            });
                        }

                        disabled = false;
                    }

                    cboCollectionPreparedBy.dispose();
                    cboCollectionPreparedBy = new wijmo.input.ComboBox('#cboCollectionPreparedBy', {
                        isDisabled: true,
                        itemsSource: userArray,
                        isEditable: false,
                        isRequired: true,
                        displayMemberPath: "FullName",
                        selectedValuePath: "FullName"
                    });

                    getCollectionById();
                }
            });
        }

        // get collection by id
        function getCollectionById() {
            $.ajax({
                url: '/api/collection/getById/' + getUrlParameter("id"),
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (collectionResult) {
                    if (collectionResult != null) {
                        document.getElementById("collectionNumber").disabled = true;
                        cboCollectionPreparedBy.disabled = true;

                        document.getElementById("collectionNumber").value = "CL-" + collectionResult.CollectionNumber;
                        cboCollectionDate.value = new Date(collectionResult.CollectionDate);
                        applicantloanunmberselectedvalue = collectionResult.LoanNumberDetail;
                        cboCollectionApplicant.selectedValue = collectionResult.Applicant;
                        cboCollectionApplicantLoanNumber.selectedValue = collectionResult.LoanNumberDetail;
                        //cboCollectionCollectorStaff.selectedValue = collectionResult.CollectorStaff;
                        cboCollectionStatus.selectedValue = collectionResult.CollectionStatus;
                        document.getElementById("collectionParticulars").value = collectionResult.Particulars;
                        cboCollectionPreparedBy.selectedValue = collectionResult.PreparedByUser;
                        document.getElementById("collectionTotalPaidAmount").value = collectionResult.TotalPaidAmount.toLocaleString();
                        document.getElementById("collectionTotalPenaltyAmount").value = collectionResult.TotalPenaltyAmount.toLocaleString();
                        document.getElementById('stampCreatedBy').innerHTML = collectionResult.CreatedByUser;
                        document.getElementById('stampCreatedDate').innerHTML = collectionResult.CreatedDateTime;
                        document.getElementById('stampUpdatedBy').innerHTML = collectionResult.UpdatedByUser;
                        document.getElementById('stampUpdatedDate').innerHTML = collectionResult.UpdatedDateTime;

                        if (collectionResult.IsLocked == true) {
                            $("#btnLock").prop("disabled", true);

                            cboCollectionDate.isDisabled = true;
                            cboCollectionApplicant.isDisabled = true;
                            cboCollectionApplicantLoanNumber.isDisabled = true;
                            document.getElementById("collectionParticulars").disabled = true;
                            //cboCollectionCollectorStaff.isDisabled = true;
                            cboCollectionStatus.isDisabled = true;

                            document.getElementById("collectionTotalPaidAmount").disabled = true;
                            document.getElementById("collectionTotalPenaltyAmount").disabled = true;
                            $("#btnFullPayment").prop("disabled", true);
                            $("#btnAddCollectionLines").prop("disabled", true);
                            isLocked = true;
                        } else {
                            $("#btnUnlock").prop("disabled", true);
                            $("#btnPrint").prop("disabled", true);
                        }
                    } else {
                        alert("The record you'd requested has no data");
                        window.history.back();
                    }

                    NProgress.done();
                    //createCollectionLineFlexgrid();
                }
            });
        }

        // form input validation
        function inputValidationForCollection() {
            var isValid = true;
            $('.requiredCollection').each(function () {
                if ($.trim($(this).val()) == '') {
                    isValid = false;
                    $(this).css({
                        "border": "1px solid red"
                    });
                } else {
                    $(this).css({
                        "border": "",
                    });
                }
            });

            return isValid;
        }

        // lock collection
        function btnLockOnClick() {
            if (inputValidationForCollection()) {
                $("#btnLock").prop("disabled", true);
                $("#btnOptions").prop("disabled", true);
                document.getElementById("btnLock").innerHTML = "<i class='fa fa-spinner fa-spin fa-fw'></i> Locking";
                $("#btnClose").prop("disabled", true);

                var collectionObject = new Object();
                collectionObject.CollectionDate = cboCollectionDate.value;
                collectionObject.LoanId = cboCollectionApplicantLoanNumber.selectedItem["Id"];
                collectionObject.CollectionStatusId = cboCollectionStatus.selectedItem["Id"];
                collectionObject.Particulars = document.getElementById("collectionParticulars").value;
                //collectionObject.CollectorStaffId = cboCollectionCollectorStaff.selectedItem["Id"];
                collectionObject.PreparedByUserId = cboCollectionPreparedBy.selectedItem["Id"];
                collectionObject.TotalPaidAmount = document.getElementById("collectionTotalPaidAmount").value;
                collectionObject.TotalPenaltyAmount = document.getElementById("collectionTotalPenaltyAmount").value;
                var collectionData = JSON.stringify(collectionObject);

                $.ajax({
                    type: "PUT",
                    url: '/api/collection/lock/' + getUrlParameter("id"),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    data: collectionData,
                    statusCode: {
                        200: function () {
                            toastr.success("Reloading the page", "Lock Successful");
                            window.setTimeout(function () {
                                location.reload();
                            }, 1500);
                        },
                        404: function (message) {
                            toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Not Found");
                            $("#btnLock").prop("disabled", false);
                            document.getElementById("btnLock").innerHTML = "<i class='fa fa-lock fa-fw'></i> Lock";
                            $("#btnClose").prop("disabled", false);
                        },
                        400: function (message) {
                            toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Bad Request");
                            $("#btnLock").prop("disabled", false);
                            document.getElementById("btnLock").innerHTML = "<i class='fa fa-lock fa-fw'></i> Lock";
                            $("#btnClose").prop("disabled", false);
                        }
                    }
                });
            } else {
                toastr.error("Invalid Entry");
            }
        }

        // unlock collection
        function btnUnlockOnClick() {
            $("#btnUnlock").prop("disabled", true);
            $("#btnPrint").prop("disabled", true);
            $("#btnClose").prop("disabled", true);
            $("#btnOptions").prop("disabled", true);
            document.getElementById("btnUnlock").innerHTML = "<i class='fa fa-spinner fa-spin fa-fw'></i> Unlocking";

            $.ajax({
                type: "PUT",
                url: '/api/collection/unlock/' + getUrlParameter("id"),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                statusCode: {
                    200: function () {
                        toastr.success("Reloading the page", "Unlock Successful");
                        window.setTimeout(function () {
                            location.reload();
                        }, 1500);
                    },
                    404: function (message) {
                        toastr.error(message.responseText.replace(/"/g, ""), "Error 404 - Not Found");
                        $("#btnUnlock").prop("disabled", false);
                        $("#btnPrint").prop("disabled", false);
                        $("#btnClose").prop("disabled", false);
                        document.getElementById("btnUnlock").innerHTML = "<i class='fa fa-unlock fa-fw'></i> Unlock";
                    },
                    400: function (message) {
                        toastr.error(message.responseText.replace(/"/g, ""), "Error 400 - Bad Request");
                        $("#btnUnlock").prop("disabled", false);
                        $("#btnPrint").prop("disabled", false);
                        $("#btnClose").prop("disabled", false);
                        document.getElementById("btnUnlock").innerHTML = "<i class='fa fa-unlock fa-fw'></i> Unlock";
                    },
                    500: function (message) {
                        toastr.error(message.responseText.replace(/"/g, ""), "Error 500 - Internal Server Error");
                        $("#btnUnlock").prop("disabled", false);
                        $("#btnPrint").prop("disabled", false);
                        $("#btnClose").prop("disabled", false);
                        document.getElementById("btnUnlock").innerHTML = "<i class='fa fa-unlock fa-fw'></i> Unlock";
                    }
                }
            });
        }

        // collection lines
        function getCollectionLinesByCollectionId() {
            var collectionLinesArray = new wijmo.collections.ObservableArray;
            $.ajax({
                url: '/api/collectionLines/listByCollectionId/' + getUrlParameter("id"),
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (collectionLinesResults) {
                    var totalPaidAmount = 0;
                    var totalPenaltyAmount = 0;

                    if (collectionLinesResults.length > 0) {
                        for (i = 0; i < collectionLinesResults.length; i++) {
                            var btnEditButton = "<button class='btn btn-primary btn-xs btn-block' onclick='btnEditCollectionLineOnclick()'><i class='fa fa-edit fa-fw'></i> Edit</button>";
                            var btnDeleteButton = "<button class='btn btn-danger btn-xs btn-block' onclick='btnDeleteCollectionLineOnclick()'><i class='fa fa-trash fa-fw'></i> Delete</button>";

                            var canPerformActions = "@ViewData["CanPerformActions"]";
                            if (canPerformActions == 1) {
                                if (isLocked) {
                                    btnEditButton = "<button class='btn btn-primary btn-xs btn-block' onclick='btnEditCollectionLineOnclick()' disabled><i class='fa fa-edit fa-fw'></i> Edit</button>";
                                    btnDeleteButton = "<button class='btn btn-danger btn-xs btn-block' onclick='btnDeleteCollectionLineOnclick()' disabled><i class='fa fa-trash fa-fw'></i> Delete</button>";
                                } else {
                                    btnEditButton = "<button class='btn btn-primary btn-xs btn-block' onclick='btnEditCollectionLineOnclick()'><i class='fa fa-edit fa-fw'></i> Edit</button>";
                                    btnDeleteButton = "<button class='btn btn-danger btn-xs btn-block' onclick='btnDeleteCollectionLineOnclick()'><i class='fa fa-trash fa-fw'></i> Delete</button>";
                                }
                            } else {
                                btnEditButton = "<button class='btn btn-primary btn-xs btn-block' onclick='btnEditCollectionLineOnclick()' disabled><i class='fa fa-edit fa-fw'></i> Edit</button>";
                                btnDeleteButton = "<button class='btn btn-danger btn-xs btn-block' onclick='btnDeleteCollectionLineOnclick()' disabled><i class='fa fa-trash fa-fw'></i> Delete</button>";
                            }

                            var thisDate = new Date(collectionLinesResults[i]["PayDate"]);

                            var weekday = new Array(7);
                            var day = "";

                            if (thisDate.getDay() == 0) {
                                day = "Sunday";
                            } else {
                                if (thisDate.getDay() == 1) {
                                    day = "Monday";
                                } else {
                                    if (thisDate.getDay() == 2) {
                                        day = "Tuesday";
                                    } else {
                                        if (thisDate.getDay() == 3) {
                                            day = "Wednesday";
                                        } else {
                                            if (thisDate.getDay() == 4) {
                                                day = "Thursday";
                                            } else {
                                                if (thisDate.getDay() == 5) {
                                                    day = "Friday";
                                                } else {
                                                    if (thisDate.getDay() == 6) {
                                                        day = "Saturday";
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }

                            var thisDateValue = [thisDate.getMonth() + 1, thisDate.getDate(), thisDate.getFullYear()].join('-') + " " + day;
                            collectionLinesArray.push({
                                EditButton: btnEditButton,
                                DeleteButton: btnDeleteButton,
                                Id: collectionLinesResults[i]["Id"],
                                PayDate: thisDateValue,
                                PayDateValue: [thisDate.getMonth() + 1, thisDate.getDate(), thisDate.getFullYear()].join('-'),
                                Particulars: collectionLinesResults[i]["Particulars"],
                                Status: collectionLinesResults[i]["Status"],
                                PenaltyAmount: collectionLinesResults[i]["PenaltyAmount"],
                                PaidAmount: collectionLinesResults[i]["PaidAmount"]
                            });

                            totalPaidAmount += collectionLinesResults[i]["PaidAmount"];
                            totalPenaltyAmount += collectionLinesResults[i]["PenaltyAmount"];
                        }
                    }

                    document.getElementById("collectionTotalPaidAmount").value = totalPaidAmount.toLocaleString();
                    document.getElementById("collectionTotalPenaltyAmount").value = totalPenaltyAmount.toLocaleString();

                    NProgress.done();
                }
            });

            return collectionLinesArray;
        }

        // Navigation Buttons for loan application
        function updateNavigateButtons() {
            if (collectionLinesCollectionView.pageSize <= 0) {
                document.getElementById('naviagtionPageGrid').style.display = 'none';
                return;
            }
            document.getElementById('naviagtionPageGrid').style.display = 'block';
            btnCurrentPageGrid.innerHTML = (collectionLinesCollectionView.pageIndex + 1) + ' / ' + collectionLinesCollectionView.pageCount;
        }

        // create collection line flexgrid
        function createCollectionLineFlexgrid() {
            collectionLinesCollectionView = new wijmo.collections.CollectionView(getCollectionLinesByCollectionId());
            collectionLinesCollectionView.pageSize = 15;

            collectionLinesCollectionView.collectionChanged.addHandler(function (sender, args) {
                updateNavigateButtons();
            });

            collectionLinesFlexgrid = new wijmo.grid.FlexGrid('#collectionLinesFlexgrid');
            collectionLinesFlexgrid.initialize({
                columns: [
                            {
                                "header": "Edit",
                                "binding": "EditButton",
                                "width": 80,
                                "align": "center",
                                "allowResizing": false,
                                "isContentHtml": true
                            },
                            {
                                "header": "Delete",
                                "binding": "DeleteButton",
                                "width": 80,
                                "align": "center",
                                "allowResizing": false,
                                "isContentHtml": true
                            },
                            {
                                "header": "Date",
                                "binding": "PayDate",
                                "allowSorting": true,
                                "width": 250,
                            },
                            {
                                "header": "Status",
                                "binding": "Status",
                                "allowSorting": true,
                                "width": 200,
                            },
                            {
                                "header": "Paid",
                                "binding": "PaidAmount",
                                "allowSorting": true,
                                "width": 150,
                            },
                            {
                                "header": "Penalty",
                                "binding": "PenaltyAmount",
                                "allowSorting": true,
                                "width": 150,
                            },
                            {
                                "header": "Particulars",
                                "binding": "Particulars",
                                "allowSorting": true,
                                "width": 300,
                            },
                ],
                autoGenerateColumns: false,
                itemsSource: collectionLinesCollectionView,
                isReadOnly: true,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            collectionLinesFlexgrid.trackChanges = true;

            //Navigation button
            btnFirstPageGrid = document.getElementById('btnMoveToFirstPageGrid');
            btnPreviousPageGrid = document.getElementById('btnMoveToPreviousPageGrid');
            btnNextPageGrid = document.getElementById('btnMoveToNextPageGrid');
            btnLastPageGrid = document.getElementById('btnMoveToLastPageGrid');
            btnCurrentPageGrid = document.getElementById('btnCurrentPageGrid');

            updateNavigateButtons();

            btnFirstPageGrid.addEventListener('click', function () {
                collectionLinesCollectionView.moveToFirstPage();
                updateNavigateButtons();
            });
            btnPreviousPageGrid.addEventListener('click', function () {
                collectionLinesCollectionView.moveToPreviousPage();
                updateNavigateButtons();
            });
            btnNextPageGrid.addEventListener('click', function () {
                collectionLinesCollectionView.moveToNextPage();
                updateNavigateButtons();
            });
            btnLastPageGrid.addEventListener('click', function () {
                collectionLinesCollectionView.moveToLastPage();
                updateNavigateButtons();
            });
        }

        // cbo loan line
        function getLoanLinesByLoanId() {
            var loanLineArray = new wijmo.collections.ObservableArray;
            $.ajax({
                url: '/api/loanLines/listByLoanId/byNotRenew/byNotReconstruct/' + cboCollectionApplicantLoanNumber.selectedItem["Id"],
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (loanLineResults) {
                    var disabled = true;
                    if (loanLineResults.length > 0) {
                        for (i = 0; i < loanLineResults.length; i++) {
                            var isClearedLabel = "Not Cleared";
                            if (loanLineResults[i]["IsCleared"]) {
                                var isClearedLabel = "Cleared";
                            }

                            var pickButton = "<button class='btn btn-primary btn-xs btn-block' onclick='btnPickButtonOnclick()'><i class='fa fa-hand-o-right fa-fw'></i> Pick</button>";
                            var penaltyButton = "<button class='btn btn-warning btn-xs btn-block' onclick='btnPenaltyButtonOnclick()'><i class='fa fa-hand-o-right fa-fw'></i> Penalty</button>";

                            var canPerformActions = "@ViewData["CanPerformActions"]";
                            if (canPerformActions == 1) {
                                if (isLocked) {
                                    pickButton = "<button class='btn btn-primary btn-xs btn-block' onclick='btnPickButtonOnclick()' disabled>Pick</button>";
                                    penaltyButton = "<button class='btn btn-warning btn-xs btn-block' onclick='btnPenaltyButtonOnclick()' disabled>Penalty</button>";
                                } else {
                                    pickButton = "<button class='btn btn-primary btn-xs btn-block' onclick='btnPickButtonOnclick()'>Pick</button>";
                                    penaltyButton = "<button class='btn btn-warning btn-xs btn-block' onclick='btnPenaltyButtonOnclick()'>Penalty</button>";
                                    //if (loanLineResults[i]["BalanceAmount"] == 0) {
                                    //    pickButton = "<button class='btn btn-primary btn-xs btn-block' onclick='btnPickButtonOnclick()' disabled><i class='fa fa-hand-o-right fa-fw'></i> Pick</button>";
                                    //    penaltyButton = "<button class='btn btn-warning btn-xs btn-block' onclick='btnPenaltyButtonOnclick()' disabled><i class='fa fa-hand-o-right fa-fw'></i> Penalty</button>";
                                    //} else {
                                    //    if (loanLineResults[i]["TermNoOfDays"] == 0) {
                                    //        pickButton = "<button class='btn btn-primary btn-xs btn-block' onclick='btnPickButtonOnclick()'><i class='fa fa-hand-o-right fa-fw'></i> Pick</button>";
                                    //        penaltyButton = "<button class='btn btn-warning btn-xs btn-block' onclick='btnPenaltyButtonOnclick()'><i class='fa fa-hand-o-right fa-fw'></i> Penalty</button>";
                                    //    } else {
                                    //        if ((loanLineResults[i]["PaidAmount"] > 0) || (loanLineResults[i]["PenaltyAmount"] > 0)) {
                                    //            pickButton = "<button class='btn btn-primary btn-xs btn-block' onclick='btnPickButtonOnclick()' disabled><i class='fa fa-hand-o-right fa-fw'></i> Pick</button>";
                                    //            penaltyButton = "<button class='btn btn-warning btn-xs btn-block' onclick='btnPenaltyButtonOnclick()' disabled><i class='fa fa-hand-o-right fa-fw'></i> Penalty</button>";
                                    //        } else {

                                    //        }
                                    //    }
                                    //}
                                }
                            } else {
                                pickButton = "<button class='btn btn-primary btn-xs btn-block' onclick='btnPickButtonOnclick()' disabled>Pick</button>";
                                penaltyButton = "<button class='btn btn-warning btn-xs btn-block' onclick='btnPenaltyButtonOnclick()' disabled>Penalty</button>";
                            }

                            var newDate = new Date(loanLineResults[i]["CollectibleDate"]);
                            var collectibleDate = ('0' + (newDate.getMonth() + 1)).slice(-2) + '-' + ('0' + newDate.getDate()).slice(-2) + '-' + newDate.getFullYear();

                            loanLineArray.push({
                                BtnPick: pickButton,
                                BtnPenalty: penaltyButton,
                                Id: loanLineResults[i]["Id"],
                                DayReference: loanLineResults[i]["DayReference"],
                                CollectibleDate: collectibleDate,
                                CollectibleAmount: loanLineResults[i]["CollectibleAmount"],
                                PaidAmount: loanLineResults[i]["PaidAmount"],
                                PenaltyAmount: loanLineResults[i]["PenaltyAmount"],
                                TotalBalanceAmount: loanLineResults[i]["TotalBalanceAmount"]
                            });
                        }
                    }

                    NProgress.done();
                }
            });

            return loanLineArray;
        }

        // pick button
        var loanLinesId = 0;
        var isPenalty = false;
        function btnPickButtonOnclick() {
            $("#paymentModal").modal({
                "show": true,
                "backdrop": "static"
            });

            currentCollectionsCollectionView.editItem(currentCollectionsCollectionView.currentItem);
            var currentItem = currentCollectionsCollectionView.currentEditItem;

            loanLinesId = currentItem.Id;
            isPenalty = false;

            document.getElementById("TotalBalanceAmount").value = currentItem.TotalBalanceAmount.toLocaleString();
            document.getElementById("collectionLinesCollectibleAmount").value = currentItem.CollectibleAmount.toLocaleString();

            var totalBalance = parseFloat(currentItem.TotalBalanceAmount);
            var collectionLineCollectibleAmount = parseFloat(currentItem.CollectibleAmount);

            if (totalBalance <= collectionLineCollectibleAmount) {
                document.getElementById('collectionLinesPaidAmount').value = currentItem.TotalBalanceAmount.toLocaleString();
            } else {
                document.getElementById('collectionLinesPaidAmount').value = currentItem.CollectibleAmount.toLocaleString();
            }

            createCboPenalty();

            document.getElementById("btnSaveCollectionLine").innerHTML = "<i class='fa fa-save fa-fw'></i> Save";
            $("#btnSaveCollectionLine").prop("disabled", false);
            $("#btnCloseCollectionLine").prop("disabled", false);

            document.getElementById("btnSaveCollectionLineForPenalty").innerHTML = "<i class='fa fa-save fa-fw'></i> Save";
            $("#btnSaveCollectionLineForPenalty").prop("disabled", false);
            $("#btnCloseCollectionLineForPenalty").prop("disabled", false);
        }

        // pick button
        function btnPenaltyButtonOnclick() {
            $("#penaltyModal").modal({
                "show": true,
                "backdrop": "static"
            });

            currentCollectionsCollectionView.editItem(currentCollectionsCollectionView.currentItem);
            var currentItem = currentCollectionsCollectionView.currentEditItem;

            loanLinesId = currentItem.Id;
            isPenalty = true;
            document.getElementById("TotalBalanceAmount").value = currentItem.TotalBalanceAmount.toLocaleString();
            document.getElementById("TotalBalanceAmount").value = currentItem.TotalBalanceAmount.toLocaleString();
            document.getElementById("collectionLinesCollectibleAmount").value = currentItem.CollectibleAmount.toLocaleString();
            document.getElementById('collectionLinesPaidAmount').value = 0;
            createCboPenalty();

            document.getElementById("btnSaveCollectionLine").innerHTML = "<i class='fa fa-save fa-fw'></i> Save";
            $("#btnSaveCollectionLine").prop("disabled", false);
            $("#btnCloseCollectionLine").prop("disabled", false);

            document.getElementById("btnSaveCollectionLineForPenalty").innerHTML = "<i class='fa fa-save fa-fw'></i> Save";
            $("#btnSaveCollectionLineForPenalty").prop("disabled", false);
            $("#btnCloseCollectionLineForPenalty").prop("disabled", false);

        }

        var collectionLinesId;

        // add collection line
        function btnAddCollectionLinesOnclick() {
            $("#collectionLineDetailModal").modal({
                "show": true,
                "backdrop": "static"
            });

            $('.requiredPayment').each(function () {
                $(this).css({
                    "border": "",
                });
            });

            document.getElementById("btnSaveCollectionLine").innerHTML = "<i class='fa fa-save fa-fw'></i> Save";
            $("#btnSaveCollectionLine").prop("disabled", false);
            $("#btnCloseCollectionLine").prop("disabled", false);

            getCollectionStatus();
            setTimeout(function () {
                recentCollectionLinesCollectionView = new wijmo.collections.CollectionView(getRecentCollectionLinesByLoanId());
                recentCollectionLinesFlexgrid.itemsSource = recentCollectionLinesCollectionView;
                recentCollectionLinesFlexgrid.trackChanges = true;
            }, 500);

            collectionLinesId = 0;
            createPayDate();
            getCollectionStatus();

            var balance = parseFloat(document.getElementById('payBalance').value.replace(/\,/g, ''));
            var collectible = parseFloat(document.getElementById('payCollectible').value.replace(/\,/g, ''));

            if (balance >= collectible) {
                document.getElementById('payPaidAmount').value = collectible;
            } else {
                document.getElementById('payPaidAmount').value = balance;
            }

            document.getElementById('payParticulars').value = "NA";
            document.getElementById('payPenaltyAmount').value = "0";
        }

        function btnEditCollectionLineOnclick() {
            $("#collectionLineDetailModal").modal({
                "show": true,
                "backdrop": "static"
            });

            $('.requiredPayment').each(function () {
                $(this).css({
                    "border": "",
                });
            });

            document.getElementById("btnSaveCollectionLine").innerHTML = "<i class='fa fa-save fa-fw'></i> Save";
            $("#btnSaveCollectionLine").prop("disabled", false);
            $("#btnCloseCollectionLine").prop("disabled", false);

            setTimeout(function () {
                recentCollectionLinesCollectionView = new wijmo.collections.CollectionView(getRecentCollectionLinesByLoanId());
                recentCollectionLinesFlexgrid.itemsSource = recentCollectionLinesCollectionView;
                recentCollectionLinesFlexgrid.trackChanges = true;
            }, 500);

            collectionLinesCollectionView.editItem(collectionLinesCollectionView.currentItem);
            var currentItem = collectionLinesCollectionView.currentEditItem;

            collectionLinesId = currentItem.Id;
            cboPayDate.value = new Date(currentItem.PayDateValue);
            document.getElementById('payParticulars').value = currentItem.Particulars;
            cboCollectionStatus.selectedValue = currentItem.Status;
            document.getElementById('payPaidAmount').value = currentItem.PaidAmount;
            document.getElementById('payPenaltyAmount').value = currentItem.PenaltyAmount;
        }

        // form input validation
        function inputValidationForCollectionLine() {
            var isValid = true;
            $('.requiredPayment').each(function () {
                if ($.trim($(this).val()) == '') {
                    isValid = false;
                    $(this).css({
                        "border": "1px solid red"
                    });
                } else {
                    $(this).css({
                        "border": "",
                    });
                }
            });

            return isValid;
        }

        // save collection line
        function btnSaveCollectionLineOnclick() {
            if (inputValidationForCollectionLine()) {
                var PayDate = cboPayDate.value;
                var Particulars = document.getElementById('payParticulars').value;
                var StatusId = cboCollectionStatus.selectedItem["Id"];
                var PaidAmount = document.getElementById('payPaidAmount').value;
                var PenaltyAmount = document.getElementById('payPenaltyAmount').value;

                document.getElementById("btnSaveCollectionLine").innerHTML = "<i class='fa fa-spinner fa-spin fa-fw'></i> Saving";
                $("#btnSaveCollectionLine").prop("disabled", true);
                $("#btnCloseCollectionLine").prop("disabled", true);

                var collectionLineObject = new Object();
                collectionLineObject.LoanId = cboCollectionApplicantLoanNumber.selectedItem["Id"];
                collectionLineObject.CollectionId = getUrlParameter("id");
                collectionLineObject.PayDate = PayDate;
                collectionLineObject.Particulars = Particulars;
                collectionLineObject.StatusId = StatusId;
                collectionLineObject.PaidAmount = PaidAmount;
                collectionLineObject.PenaltyAmount = PenaltyAmount;
                var collectionLineData = JSON.stringify(collectionLineObject);

                if (collectionLinesId == 0) {
                    $.ajax({
                        type: "POST",
                        url: '/api/collectionLines/add',
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: collectionLineData,
                        statusCode: {
                            200: function () {
                                toastr.success("Save Successful");

                                $("#collectionLineDetailModal").modal("hide");

                                collectionLinesCollectionView = new wijmo.collections.CollectionView(getCollectionLinesByCollectionId());
                                collectionLinesCollectionView.pageSize = 15;

                                collectionLinesCollectionView.collectionChanged.addHandler(function (sender, args) {
                                    updateNavigateButtons();
                                });

                                collectionLinesFlexgrid.itemsSource = collectionLinesCollectionView;
                                collectionLinesFlexgrid.trackChanges = true;
                            },
                            404: function (message) {
                                toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Not Found");

                                $("#collectionLineDetailModal").modal("hide");

                                document.getElementById("btnSaveCollectionLine").innerHTML = "<i class='fa fa-save fa-fw'></i> Save";
                                $("#btnSaveCollectionLine").prop("disabled", false);
                                $("#btnCloseCollectionLine").prop("disabled", false);
                            },
                            400: function (message) {
                                toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Bad Request");

                                $("#collectionLineDetailModal").modal("hide");

                                document.getElementById("btnSaveCollectionLine").innerHTML = "<i class='fa fa-save fa-fw'></i> Save";
                                $("#btnSaveCollectionLine").prop("disabled", false);
                                $("#btnCloseCollectionLine").prop("disabled", false);
                            }
                        }
                    });
                } else {
                    $.ajax({
                        type: "PUT",
                        url: '/api/collectionLines/update/' + collectionLinesId,
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: collectionLineData,
                        statusCode: {
                            200: function () {
                                toastr.success("Update Successful");

                                $("#collectionLineDetailModal").modal("hide");

                                collectionLinesCollectionView = new wijmo.collections.CollectionView(getCollectionLinesByCollectionId());
                                collectionLinesCollectionView.pageSize = 15;

                                collectionLinesCollectionView.collectionChanged.addHandler(function (sender, args) {
                                    updateNavigateButtons();
                                });

                                collectionLinesFlexgrid.itemsSource = collectionLinesCollectionView;
                                collectionLinesFlexgrid.trackChanges = true;
                            },
                            404: function (message) {
                                toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Not Found");

                                $("#collectionLineDetailModal").modal("hide");

                                document.getElementById("btnSaveCollectionLine").innerHTML = "<i class='fa fa-save fa-fw'></i> Save";
                                $("#btnSaveCollectionLine").prop("disabled", false);
                                $("#btnCloseCollectionLine").prop("disabled", false);
                            },
                            400: function (message) {
                                toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Bad Request");

                                $("#collectionLineDetailModal").modal("hide");

                                document.getElementById("btnSaveCollectionLine").innerHTML = "<i class='fa fa-save fa-fw'></i> Save";
                                $("#btnSaveCollectionLine").prop("disabled", false);
                                $("#btnCloseCollectionLine").prop("disabled", false);
                            }
                        }
                    });
                }


            } else {
                toastr.error("Invalid Entry");
            }
        }

        // delete loan application deduction
        function btnDeleteCollectionLineOnclick() {
            $("#deleteConfirmationCollectionLineModal").modal({
                "show": true,
                "backdrop": "static"
            });

            document.getElementById("btnConfirmDeleteCollectionLine").innerHTML = "Delete";
            $("#btnConfirmDeleteCollectionLine").prop("disabled", false);
            $("#btnCloseDeleteCollectionLineModal").prop("disabled", false);
        }
        function btnConfirmDeleteCollectionLineOnclick() {
            document.getElementById("btnConfirmDeleteCollectionLine").innerHTML = "<i class='fa fa-spinner fa-spin fa-fw'></i> Deleting";
            $("#btnConfirmDeleteCollectionLine").prop("disabled", true);
            $("#btnCloseDeleteCollectionLineModal").prop("disabled", true);

            collectionLinesCollectionView.editItem(collectionLinesCollectionView.currentItem);
            var currentItem = collectionLinesCollectionView.currentEditItem;

            $.ajax({
                type: "DELETE",
                url: '/api/collectionLines/delete/' + currentItem.Id + '/' + getUrlParameter("id"),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                statusCode: {
                    200: function () {
                        toastr.success("Delete Successful");

                        $("#deleteConfirmationCollectionLineModal").modal("hide");

                        collectionLinesCollectionView = new wijmo.collections.CollectionView(getCollectionLinesByCollectionId());
                        collectionLinesCollectionView.pageSize = 15;

                        collectionLinesCollectionView.collectionChanged.addHandler(function (sender, args) {
                            updateNavigateButtons();
                        });

                        collectionLinesFlexgrid.itemsSource = collectionLinesCollectionView;
                        collectionLinesFlexgrid.trackChanges = true;
                    },
                    404: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Not Found");

                        $("#deleteConfirmationCollectionLineModal").modal("hide");

                        document.getElementById("btnConfirmDeleteCollectionLine").innerHTML = "Delete";
                        $("#btnConfirmDeleteCollectionLine").prop("disabled", false);
                        $("#btnCloseDeleteCollectionLineModal").prop("disabled", false);
                    },
                    400: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Bad Request");

                        $("#deleteConfirmationCollectionLineModal").modal("hide");

                        document.getElementById("btnConfirmDeleteCollectionLine").innerHTML = "Delete";
                        $("#btnConfirmDeleteCollectionLine").prop("disabled", false);
                        $("#btnCloseDeleteCollectionLineModal").prop("disabled", false);
                    }
                }
            });
        }

        // collection recent lines
        function getRecentCollectionLinesByLoanId() {
            var recentCollectionLinesArray = new wijmo.collections.ObservableArray;
            $.ajax({
                url: '/api/collections/list/ByLoanId/' + cboCollectionApplicantLoanNumber.selectedItem["Id"],
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (collectionListResult) {
                    var totalPaidAmount = 0;
                    if (collectionListResult.length > 0) {
                        for (i = 0; i < collectionListResult.length; i++) {
                            var btnRecentCollection = "<button class='btn btn-primary btn-xs btn-block' onclick='btnViewRecentCollectionOnclick()'><i class='fa fa-edit fa-fw'></i> Detail</button>";

                            var thisDate = new Date(collectionListResult[i]["LoanLinesCollectibleDate"]);
                            var thisDateValue = [thisDate.getMonth() + 1, thisDate.getDate(), thisDate.getFullYear()].join('-');

                            var thisCollectionDate = new Date(collectionListResult[i]["PayDate"]);

                            var weekday = new Array(7);
                            var day = "";

                            if (thisCollectionDate.getDay() == 0) {
                                day = "Sunday";
                            } else {
                                if (thisCollectionDate.getDay() == 1) {
                                    day = "Monday";
                                } else {
                                    if (thisCollectionDate.getDay() == 2) {
                                        day = "Tuesday";
                                    } else {
                                        if (thisCollectionDate.getDay() == 3) {
                                            day = "Wednesday";
                                        } else {
                                            if (thisCollectionDate.getDay() == 4) {
                                                day = "Thursday";
                                            } else {
                                                if (thisCollectionDate.getDay() == 5) {
                                                    day = "Friday";
                                                } else {
                                                    if (thisCollectionDate.getDay() == 6) {
                                                        day = "Saturday";
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }

                            var thisCollectionDateValue = [thisCollectionDate.getMonth() + 1, thisCollectionDate.getDate(), thisCollectionDate.getFullYear()].join('-') + " " + day;

                            var newDate = new Date(collectionListResult[i]["CollectionDate"]);
                            var collectionDateValue = ('0' + (newDate.getMonth() + 1)).slice(-2) + '-' + ('0' + newDate.getDate()).slice(-2) + '-' + newDate.getFullYear();

                            recentCollectionLinesArray.push({
                                RecentCollectionButton: btnRecentCollection,
                                Id: collectionListResult[i]["Id"],
                                CollectionNumber: "CL-" + collectionListResult[i]["CollectionNumber"],
                                CollectionDate: collectionDateValue,
                                Applicant: collectionListResult[i]["Applicant"],
                                Particulars: collectionListResult[i]["Particulars"],
                                LoanId: collectionListResult[i]["LoanId"],
                                LoanNumberDetail: collectionListResult[i]["LoanNumberDetail"],
                                LoanId: collectionListResult[i]["LoanId"],
                                LoanNumber: collectionListResult[i]["LoanNumber"],
                                CollectionStatus: collectionListResult[i]["CollectionStatus"],
                                Particulars: collectionListResult[i]["Particulars"],
                                TotalPaidAmount: collectionListResult[i]["TotalPaidAmount"],
                                TotalPenaltyAmount: collectionListResult[i]["TotalPenaltyAmount"],
                                PreparedByUserId: collectionListResult[i]["PreparedByUserId"],
                                PreparedByUser: collectionListResult[i]["PreparedByUser"],
                                IsReconstruct: collectionListResult[i]["IsReconstruct"],
                                IsRenew: collectionListResult[i]["IsRenew"],
                                IsLoanApplication: collectionListResult[i]["IsLoanApplication"],
                                IsLoanReconstruct: collectionListResult[i]["IsLoanReconstruct"],
                                IsLoanRenew: collectionListResult[i]["IsLoanRenew"],
                                IsLocked: collectionListResult[i]["IsLocked"],
                                CreatedByUserId: collectionListResult[i]["CreatedByUserId"],
                                CreatedByUser: collectionListResult[i]["CreatedByUser"],
                                CreatedDateTime: collectionListResult[i]["CreatedDateTime"],
                                UpdatedByUserId: collectionListResult[i]["UpdatedByUserId"],
                                UpdatedByUser: collectionListResult[i]["UpdatedByUser"],
                                UpdatedDateTime: collectionListResult[i]["UpdatedDateTime"]
                            });
                        }
                    }

                    NProgress.done();
                }
            });

            return recentCollectionLinesArray;
        }

        // view recent collection
        function btnViewRecentCollectionOnclick() {
            recentCollectionLinesCollectionView.editItem(recentCollectionLinesCollectionView.currentItem);
            var currentItem = recentCollectionLinesCollectionView.currentEditItem;

            var link = '/Software/CollectionDetail?id=' + currentItem.Id;
            window.open(link, "_blank");
        }

        // createRecentCollectionFlexgrid
        function createRecentCollectionFlexgrid() {
            recentCollectionLinesCollectionView = new wijmo.collections.CollectionView(getRecentCollectionLinesByLoanId());

            recentCollectionLinesFlexgrid = new wijmo.grid.FlexGrid('#recentCollectionLinesFlexgrid');
            recentCollectionLinesFlexgrid.initialize({
                columns: [
                            {
                                "header": "Detail",
                                "binding": "RecentCollectionButton",
                                "width": 100,
                                "align": "center",
                                "allowResizing": false,
                                "isContentHtml": true
                            },
                            {
                                "header": "Date",
                                "binding": "CollectionDate",
                                "allowSorting": true,
                                "width": 100,
                            },
                            {
                                "header": "Collection No.",
                                "binding": "CollectionNumber",
                                "allowSorting": true,
                                "width": 150,
                            },
                            {
                                "header": "Status",
                                "binding": "CollectionStatus",
                                "allowSorting": true,
                                "width": 200,
                            },
                            {
                                "header": "Paid",
                                "binding": "TotalPaidAmount",
                                "allowSorting": true,
                                "width": 130
                            },
                            {
                                "header": "Penalty",
                                "binding": "TotalPenaltyAmount",
                                "allowSorting": true,
                                "width": 130
                            },
                            {
                                "header": "Particulars",
                                "binding": "Particulars",
                                "allowSorting": true,
                                "width": 300,
                            },
                ],
                autoGenerateColumns: false,
                itemsSource: recentCollectionLinesCollectionView,
                isReadOnly: true,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            recentCollectionLinesFlexgrid.trackChanges = true;
        }

        // tab
        $('#currentCollectionsTab').click(function () {
            $("#currentCollections").show();
            $("#recentCollections").hide();


        });

        // tab
        $('#recentCollectionsTab').click(function () {
            NProgress.start();
            $("#currentCollections").hide();
            $("#recentCollections").show();

        });

        function btnRecentCollections() {
            $("#collectionLineDetailModal").modal({
                "show": true,
                "backdrop": "static"
            });

            setTimeout(function () {
                recentCollectionLinesCollectionView = new wijmo.collections.CollectionView(getRecentCollectionLinesByLoanId());
                recentCollectionLinesFlexgrid.itemsSource = recentCollectionLinesCollectionView;
                recentCollectionLinesFlexgrid.trackChanges = true;
            }, 300);
        }


        // on load page
        window.onload = function () {
            NProgress.start();
            toastrModification();
            doubleModal();

            cboPenalty = new wijmo.input.ComboBox('#cboPenalty');

            cboCollectionDate = new wijmo.input.InputDate('#cboCollectionDate');
            createCollectionDate();

            cboPayDate = new wijmo.input.InputDate('#cboPayDate');
            createPayDate();
        }


        // add new collection
        function btnAddCollectionOnclick() {
            $("#btnLock").prop("disabled", true);
            $("#btnUnlock").prop("disabled", true);
            $("#btnOptions").prop("disabled", true);
            $("#btnClose").prop("disabled", true);
            document.getElementById("btnOptions").innerHTML = "<i class='fa fa-spinner fa-spin fa-fw'></i> Adding";

            $.ajax({
                type: "POST",
                url: '/api/collection/add',
                contentType: "application/json; charset=utf-8",
                success: function (id) {
                    if (id > 0) {
                        toastr.success("Adding Successful");
                        window.setTimeout(function () {
                            window.location = '/Software/CollectionDetail?id=' + id;
                        }, 1500);
                    } else {
                        toastr.error("Bad Request");
                    }
                }
            });
        }


        // delete loan application
        function btnDeleteCollectionOnclick() {
            if (isLocked) {
                toastr.info("Record Locked");
            } else {
                $("#deleteConfirmationCollectionModal").modal({
                    "show": true,
                    "backdrop": "static"
                });

                document.getElementById("btnConfirmDeleteCollection").innerHTML = "Delete";
                $("#btnConfirmDeleteCollection").prop("disabled", false);
                $("#btnCloseDeleteCollectionModal").prop("disabled", false);
            }
        }
        function btnConfirmDeleteCollectionOnclick() {
            document.getElementById("btnConfirmDeleteCollection").innerHTML = "<i class='fa fa-spinner fa-spin fa-fw'></i> Deleting";
            $("#btnConfirmDeleteCollection").prop("disabled", true);
            $("#btnCloseDeleteCollectionModal").prop("disabled", true);

            $.ajax({
                url: '/api/collection/delete/' + getUrlParameter("id"),
                type: "DELETE",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                statusCode: {
                    200: function () {
                        toastr.success("Delete Successful");
                        window.setTimeout(function () {
                            window.location = "/Software/CollectionList";
                        }, 1500);
                    },
                    404: function () {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Not Found");
                        $('#deleteConfirmationCollectionModal').modal('hide');
                        document.getElementById("btnConfirmDeleteCollection").innerHTML = "Delete";
                        $("#btnConfirmDeleteCollection").prop("disabled", false);
                        $("#btnCloseDeleteCollectionModal").prop("disabled", false);
                    },
                    400: function () {
                        toastr.error("Bad Request");
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Bad Request");
                        document.getElementById("btnConfirmDeleteCollection").innerHTML = "Delete";
                        $("#btnConfirmDeleteCollection").prop("disabled", false);
                        $("#btnCloseDeleteCollectionModal").prop("disabled", false);
                    }
                }
            });
        }

        function btnApplicantDetailOnClick() {
            var link = '/Software/ApplicantDetail?id=' + cboCollectionApplicant.selectedItem["ApplicantId"];
            window.open(link, "_blank");
        }

        function btnLoanNumberDetailOnClick() {
            if (cboCollectionApplicantLoanNumber.selectedItem["IsLoanApplication"]) {
                var link = '/Software/LoanApplicationDetail?id=' + cboCollectionApplicantLoanNumber.selectedItem["Id"];
                window.open(link, "_blank");
            } else {
                if (cboCollectionApplicantLoanNumber.selectedItem["IsLoanRenew"]) {
                    var link = '/Software/RenewDetail?id=' + cboCollectionApplicantLoanNumber.selectedItem["Id"];
                    window.open(link, "_blank");
                } else {
                    if (cboCollectionApplicantLoanNumber.selectedItem["IsLoanReconstruct"]) {
                        var link = '/Software/ReconstructDetail?id=' + cboCollectionApplicantLoanNumber.selectedItem["Id"];
                        window.open(link, "_blank");
                    }
                }
            }
        }

        function btnStaffDetailOnClick() {
            var link = '/Software/StaffDetail?id=' + cboCollectionCollectorStaff.selectedItem["Id"];
            window.open(link, "_blank");
        }

    </script>
</body>
</html>