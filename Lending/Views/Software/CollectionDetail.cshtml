<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <!-- Title -->
    <title>Collection Detail</title>

    <!-- Styles -->
    @Styles.Render("~/Content/css")
</head>
<body>
    <div id="wrapper">
        <!-- Header -->
        @Html.Partial("SoftwareHeader")

        <div id="page-wrapper">
            <div class="container-fluid">
                <div class="row">
                    <div class="col-lg-12">
                        <h3 class="">
                            <i class="fa fa-user fa-fw"></i>  Collection Detail <small>Edit detail page</small>
                        </h3>
                        <ol class="breadcrumb">
                            <li>
                                <a href="/Software">Dashboard</a>
                            </li>
                            <li>
                                <a href="/Software/CollectionList">Collections</a>
                            </li>
                            <li class="active">
                                Collection Detail
                            </li>
                        </ol>
                    </div>
                </div>
                <div class="panel panel-default">
                    <div class="panel-heading" align="right">
                        <button class="btn btn-primary" id="btnLock" onclick="btnLockOnClick()">
                            <i class="fa fa-lock fa-fw"></i> Lock
                        </button>
                        <button class="btn btn-primary" id="btnUnlock" onclick="btnUnlockOnClick()">
                            <i class="fa fa-unlock fa-fw"></i> Unlock
                        </button>
                        <button class="btn btn-danger" id="btnClose" onclick="window.location = '/Software/CollectionList'">
                            <i class="fa fa-close fa-fw"></i> Close
                        </button>
                    </div>
                    <div class="panel-body">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="panel panel-default">
                                    <div class="panel-body">
                                        <div class="form-group">
                                            <label>Collection Number</label><br />
                                            <input type="text" class="form-control requiredCollection" id="collectionNumber" placeholder="Collection Number" disabled />
                                        </div>
                                        <div class="form-group">
                                            <label>Collection Date</label><br />
                                            <div id="cboCollectionDate"></div>
                                        </div>
                                        <div class="form-group">
                                            <label>Applicant</label><br />
                                            <div id="cboCollectionApplicant"></div>
                                        </div>
                                        <div class="form-group">
                                            <label>Loan Number</label><br />
                                            <div id="cboCollectionLoanNumber" class="requiredCollectionLoanNumber"></div>
                                        </div>
                                        <div class="form-group">
                                            <label>Status</label><br />
                                            <div id="cboCollectionStatus"></div>
                                        </div>
                                        <div class="form-group">
                                            <label>Particulars</label><br />
                                            <textarea class="form-control requiredCollection" rows="5" id="collectionParticulars" placeholder="Particulars"></textarea>
                                        </div>
                                        <div class="form-group">
                                            <label>Prepared by</label><br />
                                            <div id="cboCollectionPreparedBy"></div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="panel panel-default">
                                    <div class="panel-body">
                                        <div class="form-group">
                                            <label>Total Paid Amount</label><br />
                                            <div class="input-group numberField">
                                                <span class="input-group-addon">&#8369;</span>
                                                <input type="text" class="form-control numberField requiredCollection" id="collectionTotalPaidAmount" placeholder="0.00" disabled />
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="panel panel-default">
                                    <div class="panel-body">
                                        <p>Created by:</p>
                                        <div style="padding-left: 10px;">
                                            <i class="fa fa-key fa-fw"></i> <label id="stampCreatedBy">NA</label>
                                            <br />
                                            <small><i class="fa fa-calendar fa-fw"></i> &nbsp;<span id="stampCreatedDate">mm/dd/yyyy</span></small>
                                        </div>
                                        <br />
                                        <p>Updated by:</p>
                                        <div style="padding-left: 10px;">
                                            <i class="fa fa-key fa-fw"></i> <label id="stampUpdatedBy">NA</label>
                                            <br />
                                            <small><i class="fa fa-calendar fa-fw"></i> &nbsp;<span id="stampUpdatedDate">mm/dd/yyyy</span></small>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="panel panel-default">
                            <div class="panel-heading">
                                <table style="width: 100%">
                                    <tr>
                                        <td>
                                            Collection Lines
                                        </td>
                                        <td align="right">
                                            <button class="btn btn-primary btn-sm" id="btnAddCollectionLines" onclick="btnAddCollectionLinesOnclick()">
                                                <i class="fa fa-plus fa-fw"></i> Add
                                            </button>
                                        </td>
                                    </tr>
                                </table>
                            </div>
                            <div class="panel-body">
                                <div id="collectionLinesFlexgrid" class="grid"></div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Scripts -->
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    <script type="text/javascript">
        var newDate = new Date();
        var collectionDateValue = [newDate.getMonth() + 1, newDate.getDate(), newDate.getFullYear()].join('-');
        var cboCollectionDate;
        var cboCollectionApplicant;
        var cboCollectionLoanNumber;
        var cboCollectionStatus;
        var cboCollectionPreparedBy;
        var isLocked = false;

        // create collection Date
        function createCollectionDate() {
            cboCollectionDate.dispose();
            cboCollectionDate = new wijmo.input.InputDate('#cboCollectionDate', {
                format: 'MM-dd-yyyy',
                value: new Date(collectionDateValue),
                mask: '99-99-9999',
                onValueChanged: function () {
                    var thisDateValue = [this.value.getMonth() + 1, this.value.getDate(), this.value.getFullYear()].join('-');
                    collectionDateValue = thisDateValue;
                }
            });

            cboCollectionApplicant = new wijmo.input.ComboBox('#cboCollectionApplicant');
            getApplicant();
        }

        // get applicant
        function getApplicant() {
            var applicantArray = new Array();
            $.ajax({
                url: '/api/applicant/list',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (applicantResults) {
                    var disabled = true;
                    if (applicantResults.length > 0) {
                        for (i = 0; i < applicantResults.length; i++) {
                            applicantArray.push({
                                Id: applicantResults[i]["Id"],
                                ApplicantFullName: applicantResults[i]["ApplicantFullName"],
                            });
                        }

                        disabled = false;
                    }

                    cboCollectionApplicant.dispose();
                    cboCollectionApplicant = new wijmo.input.ComboBox('#cboCollectionApplicant', {
                        disabled: disabled,
                        itemsSource: applicantArray,
                        isEditable: false,
                        required: true,
                        displayMemberPath: "ApplicantFullName",
                        selectedValuePath: "ApplicantFullName",
                        onSelectedIndexChanged: function () {

                            var loanNumberArray = new Array();
                            $.ajax({
                                url: '/api/loan/listByApplicantId/' + this.selectedItem["Id"],
                                cache: false,
                                type: 'GET',
                                contentType: 'application/json; charset=utf-8',
                                data: {},
                                success: function (loanNumberResults) {
                                    var disabled = true;
                                    if (loanNumberResults.length > 0) {
                                        for (i = 0; i < loanNumberResults.length; i++) {
                                            loanNumberArray.push({
                                                Id: loanNumberResults[i]["Id"],
                                                LoanNumber: loanNumberResults[i]["LoanNumber"],
                                            });
                                        }

                                        disabled = false;
                                        if (isLocked) {
                                            disabled = true;
                                        }
                                    }

                                    cboCollectionLoanNumber.dispose();
                                    cboCollectionLoanNumber = new wijmo.input.ComboBox('#cboCollectionLoanNumber', {
                                        disabled: disabled,
                                        itemsSource: loanNumberArray,
                                        isEditable: false,
                                        required: true,
                                        displayMemberPath: "LoanNumber",
                                        selectedValuePath: "LoanNumber",
                                        onSelectedIndexChanged: function () {

                                        }
                                    });
                                }
                            });
                        }
                    });

                    cboCollectionLoanNumber = new wijmo.input.ComboBox('#cboCollectionLoanNumber');
                    getLoanNumber();
                }
            });
        }

        // get loan number
        function getLoanNumber() {
            var loanNumberArray = new Array();
            $.ajax({
                url: '/api/loan/listByApplicantId/' + cboCollectionApplicant.selectedItem["Id"],
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (loanNumberResults) {
                    var disabled = true;
                    if (loanNumberResults.length > 0) {
                        for (i = 0; i < loanNumberResults.length; i++) {
                            loanNumberArray.push({
                                Id: loanNumberResults[i]["Id"],
                                LoanNumber: loanNumberResults[i]["LoanNumber"],
                            });
                        }

                        disabled = false;

                        cboCollectionStatus = new wijmo.input.ComboBox('#cboCollectionStatus');
                        getCollectionStatus();
                    } else {
                        cboCollectionStatus = new wijmo.input.ComboBox('#cboCollectionStatus');
                        getCollectionStatus();
                    }

                    cboCollectionLoanNumber.dispose();
                    cboCollectionLoanNumber = new wijmo.input.ComboBox('#cboCollectionLoanNumber', {
                        disabled: disabled,
                        itemsSource: loanNumberArray,
                        isEditable: false,
                        required: true,
                        displayMemberPath: "LoanNumber",
                        selectedValuePath: "LoanNumber",
                        onSelectedIndexChanged: function () {

                        }
                    });
                }
            });
        }

        // get collection Status
        function getCollectionStatus() {
            var collectionStatusArray = new Array();
            $.ajax({
                url: '/api/collectionStatus/list',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (collectionStatusResults) {
                    var disabled = true;
                    if (collectionStatusResults.length > 0) {
                        for (i = 0; i < collectionStatusResults.length; i++) {
                            collectionStatusArray.push({
                                Id: collectionStatusResults[i]["Id"],
                                Status: collectionStatusResults[i]["Status"],
                            });
                        }

                        disabled = false;

                        cboCollectionPreparedBy = new wijmo.input.ComboBox('#cboCollectionPreparedBy');
                        getUser();
                    } else {
                        cboCollectionPreparedBy = new wijmo.input.ComboBox('#cboCollectionPreparedBy');
                        getUser();
                    }

                    cboCollectionStatus.dispose();
                    cboCollectionStatus = new wijmo.input.ComboBox('#cboCollectionStatus', {
                        disabled: disabled,
                        itemsSource: collectionStatusArray,
                        isEditable: false,
                        required: true,
                        displayMemberPath: "Status",
                        selectedValuePath: "Status",
                        onSelectedIndexChanged: function () {

                        }
                    });
                }
            });
        }

        // get users
        function getUser() {
            var userArray = new Array();
            $.ajax({
                url: '/api/user/list',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (userrResults) {
                    var disabled = true;
                    if (userrResults.length > 0) {
                        for (i = 0; i < userrResults.length; i++) {
                            userArray.push({
                                Id: userrResults[i]["Id"],
                                FullName: userrResults[i]["FullName"],
                            });
                        }

                        disabled = false;
                    }

                    cboCollectionPreparedBy.dispose();
                    cboCollectionPreparedBy = new wijmo.input.ComboBox('#cboCollectionPreparedBy', {
                        disabled: disabled,
                        itemsSource: userArray,
                        isEditable: false,
                        required: true,
                        displayMemberPath: "FullName",
                        selectedValuePath: "FullName"
                    });

                    getCollectionById();
                }
            });
        }

        // get collection by id
        function getCollectionById() {
            $.ajax({
                url: '/api/collection/getById/' + getUrlParameter("id"),
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (collectionResult) {
                    if (collectionResult != null) {
                        document.getElementById("collectionNumber").disabled = true;
                        document.getElementById('collectionTotalPaidAmount').disabled = true;
                        document.getElementById("collectionNumber").value = collectionResult.CollectionNumber;
                        cboCollectionDate.value = new Date(collectionResult.CollectionDate);
                        cboCollectionApplicant.selectedValue = collectionResult.Applicant;
                        cboCollectionLoanNumber.selectedValue = collectionResult.LoanNumber;
                        cboCollectionStatus.selectedValue = collectionResult.Status;
                        document.getElementById("collectionParticulars").value = collectionResult.Particulars;
                        cboCollectionPreparedBy.selectedValue = collectionResult.PreparedByUser;
                        document.getElementById("collectionTotalPaidAmount").value = collectionResult.TotalPaidAmount;
                        document.getElementById('stampCreatedBy').innerHTML = collectionResult.CreatedByUser;
                        document.getElementById('stampCreatedDate').innerHTML = collectionResult.CreatedDateTime;
                        document.getElementById('stampUpdatedBy').innerHTML = collectionResult.UpdatedByUser;
                        document.getElementById('stampUpdatedDate').innerHTML = collectionResult.UpdatedDateTime;

                        if (collectionResult.IsLocked == true) {
                            $("#btnLock").prop("disabled", true);

                            cboCollectionDate.disabled = true;
                            cboCollectionApplicant.disabled = true;
                            cboCollectionLoanNumber.disabled = true;
                            cboCollectionStatus.disabled = true;
                            document.getElementById("collectionParticulars").disabled = true;
                            cboCollectionPreparedBy.disabled = true;

                            $("#btnAddCollectionLines").prop("disabled", true);
                            isLocked = true;
                        } else {
                            $("#btnUnlock").prop("disabled", true);
                            $("#btnPrint").prop("disabled", true);
                        }
                    } else {
                        alert("The record you'd requested has no data");
                        window.history.back();
                    }

                    NProgress.done();
                    //createFlexGridForLoanApplicationDeduction();
                }
            });
        }

        // form input validation
        function inputValidationForCollection() {
            var isValid = true;
            $('.requiredCollection').each(function () {
                if ($.trim($(this).val()) == '') {
                    isValid = false;
                    $(this).css({
                        "border": "1px solid red"
                    });
                } else {
                    $(this).css({
                        "border": "",
                    });
                }
            });

            return isValid;
        }

        // lock loan
        function btnLockOnClick() {
            if (inputValidationForCollection()) {
                $("#btnLock").prop("disabled", true);
                document.getElementById("btnLock").innerHTML = "<i class='fa fa-spinner fa-spin fa-fw'></i> Locking";
                $("#btnClose").prop("disabled", true);

                if (cboCollectionLoanNumber.itemsSource == 0) {
                    $('.requiredCollectionLoanNumber').each(function () {
                        $(this).css({
                            "border": "1px solid red"
                        });
                    });
                    toastr.error("No Loan Number");

                    $("#btnLock").prop("disabled", false);
                    document.getElementById("btnLock").innerHTML = "<i class='fa fa-lock fa-fw'></i> Lock";
                    $("#btnClose").prop("disabled", false);
                } else {
                    var collectionObject = new Object();
                    collectionObject.CollectionDate = cboCollectionDate.value;
                    collectionObject.LoanId = cboCollectionLoanNumber.selectedItem["Id"];
                    collectionObject.StatusId = cboCollectionStatus.selectedItem["Id"];
                    collectionObject.Particulars = document.getElementById("collectionParticulars").value;
                    collectionObject.PreparedByUserId = cboCollectionPreparedBy.selectedItem["Id"];
                    var collectionData = JSON.stringify(collectionObject);

                    $.ajax({
                        type: "PUT",
                        url: '/api/collection/lock/' + getUrlParameter("id"),
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: collectionData,
                        statusCode: {
                            200: function () {
                                toastr.success("Reloading the page", "Lock Successful");
                                window.setTimeout(function () {
                                    location.reload();
                                }, 1500);
                            },
                            404: function () {
                                toastr.error("Not Found");
                                $("#btnLock").prop("disabled", false);
                                document.getElementById("btnLock").innerHTML = "<i class='fa fa-lock fa-fw'></i> Lock";
                                $("#btnClose").prop("disabled", false);
                            },
                            400: function () {
                                toastr.error("Bad Request");
                                $("#btnLock").prop("disabled", false);
                                document.getElementById("btnLock").innerHTML = "<i class='fa fa-lock fa-fw'></i> Lock";
                                $("#btnClose").prop("disabled", false);
                            }
                        }
                    });
                }
            } else {
                toastr.error("Invalid Entry");
            }
        }

        // unlock loan
        function btnUnlockOnClick() {
            $("#btnUnlock").prop("disabled", true);
            $("#btnPrint").prop("disabled", true);
            $("#btnClose").prop("disabled", true);
            document.getElementById("btnUnlock").innerHTML = "<i class='fa fa-spinner fa-spin fa-fw'></i> Unlocking";

            $.ajax({
                type: "PUT",
                url: '/api/collection/unlock/' + getUrlParameter("id"),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                statusCode: {
                    200: function () {
                        toastr.success("Reloading the page", "Unlock Successful");
                        window.setTimeout(function () {
                            location.reload();
                        }, 1500);
                    },
                    404: function (message) {
                        toastr.error(message.responseText.replace(/"/g, ""), "Error 404 - Not Found");
                        $("#btnUnlock").prop("disabled", false);
                        $("#btnPrint").prop("disabled", false);
                        $("#btnClose").prop("disabled", false);
                        document.getElementById("btnUnlock").innerHTML = "<i class='fa fa-unlock fa-fw'></i> Unlock";
                    },
                    400: function (message) {
                        toastr.error(message.responseText.replace(/"/g, ""), "Error 400 - Bad Request");
                        $("#btnUnlock").prop("disabled", false);
                        $("#btnPrint").prop("disabled", false);
                        $("#btnClose").prop("disabled", false);
                        document.getElementById("btnUnlock").innerHTML = "<i class='fa fa-unlock fa-fw'></i> Unlock";
                    },
                    500: function (message) {
                        toastr.error(message.responseText.replace(/"/g, ""), "Error 500 - Internal Server Error");
                        $("#btnUnlock").prop("disabled", false);
                        $("#btnPrint").prop("disabled", false);
                        $("#btnClose").prop("disabled", false);
                        document.getElementById("btnUnlock").innerHTML = "<i class='fa fa-unlock fa-fw'></i> Unlock";
                    }
                }
            });
        }


        // on load page
        window.onload = function () {
            NProgress.start();
            toastrModification();

            cboCollectionDate = new wijmo.input.InputDate('#cboCollectionDate');
            createCollectionDate();
        }
    </script>
</body>
</html>