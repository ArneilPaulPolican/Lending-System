<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <!-- Title -->
    <title>Collection List</title>

    <!-- Styles -->
    @Styles.Render("~/Content/css")
</head>
<body>
    <!-- Header -->
    @Html.Partial("HomeHeader")

    <section class="software-section">
        <div class="container">
            <div class="btn-group">
                <div class="btn-group">
                    <a href="/Software" class="btn btn-info">
                        Dashboard
                    </a>
                </div>
                <div class="btn-group">
                    <button type="button" class="btn btn-info dropdown-toggle" data-toggle="dropdown">
                        Set Ups <span class="caret"></span>
                    </button>
                    <ul class="dropdown-menu" role="menu">
                        <li><a href="/Software/ApplicantList"><i class="fa fa-users fa-fw"></i> Applicants</a></li>
                        <li><a href="/Software/Tables"><i class="fa fa-table fa-fw"></i> Tables</a></li>
                    </ul>
                </div>
                <div class="btn-group">
                    <button type="button" class="btn btn-info dropdown-toggle" data-toggle="dropdown">
                        Activities <span class="caret"></span>
                    </button>
                    <ul class="dropdown-menu" role="menu">
                        <li><a href="/Software/LoanApplicationList"><i class="fa fa-file-text-o fa-fw"></i> Loan Application</a></li>
                        <li><a href="/Software/CollectionList"><i class="fa fa-money fa-fw"></i> Collection</a></li>
                        <li><a href="/Software/DisbursementList"><i class="fa fa-credit-card fa-fw"></i> Disbursement</a></li>
                    </ul>
                </div>
                <div class="btn-group">
                    <button type="button" class="btn btn-info dropdown-toggle" data-toggle="dropdown">
                        System <span class="caret"></span>
                    </button>
                    <ul class="dropdown-menu" role="menu">
                        <li><a href="/Software/CompanyList"><i class="fa fa-building fa-fw"></i> Company</a></li>
                        <li><a href="/Software/UserList"><i class="fa fa-key fa-fw"></i> Users</a></li>
                        <li class="divider"></li>
                        <li><a href="/Manage/Index"><i class="fa fa-gears fa-fw"></i> Settings</a></li>
                    </ul>
                </div>
                <div class="btn-group">
                    <button type="button" class="btn btn-info dropdown-toggle" data-toggle="dropdown">
                        Reports <span class="caret"></span>
                    </button>
                    <ul class="dropdown-menu" role="menu">
                        <li><a href="/Software/Reports"><i class="fa fa-print fa-fw"></i> Generate Reports</a></li>
                    </ul>
                </div>
            </div>
            <br /><br />
            <div class="panel panel-default">
                <div class="panel-heading">
                    <h4><i class="fa fa-money fa-fw"></i> Collections</h4>
                </div>
                <div class="panel-heading">
                    <div class="input-group">
                        <span class="input-group-addon"><i class="fa fa-search fa-fw"></i> </span>
                        <input type="text" id="searchCollection" class="form-control" placeholder="Search" />
                    </div>
                </div>
                <div class="panel-heading">
                    <table>
                        <tr>
                            <td>
                                <div class="input-group">
                                    <span class="input-group-addon"><i class="fa fa-calendar fa-fw"></i> Collection Date</span>
                                    <div id="cboCollectionDate"></div>
                                </div>
                            </td>
                            <td>
                                &nbsp; &nbsp; &nbsp;
                            </td>
                            <td>
                                <div class="input-group">
                                    <div class="input-group-addon"><i class="fa fa-map-pin fa-fw"></i> Area</div>
                                    <div id="cboArea"></div>
                                </div>
                            </td>
                            <td>
                                &nbsp; &nbsp; &nbsp;
                            </td>
                            <td>
                                <button class="btn btn-default btn-sm"> <i class="fa fa-check fa-fw"></i> Mark all as Clear</button>
                                <button class="btn btn-default btn-sm"> <i class="fa fa-check fa-fw"></i> Mark all as Absent (Penalty) </button>
                                <button class="btn btn-primary btn-sm"> <i class="fa fa-print fa-fw"></i> Print </button>
                            </td>
                        </tr>
                    </table>
                </div>
                <div class="panel-body">
                    <div class="flexgridHeight">
                        <div id="collectionListFlexGrid" class=""></div>
                    </div>
                </div>
                <div class="panel-footer">
                    <div class="row">
                        <div class="btn-group col-md-7" id="navigationPageGrid">
                            <button type="button" class="btn btn-default border-custom" id="btnMoveToFirstPageGrid">
                                <span class="glyphicon glyphicon-fast-backward"></span>
                            </button>
                            <button type="button" class="btn btn-default border-custom" id="btnMoveToPreviousPageGrid">
                                <span class="glyphicon glyphicon-step-backward"></span>
                            </button>
                            <button type="button" class="btn btn-default border-custom" disabled style="width: 100px" id="btnCurrentPageGrid"></button>
                            <button type="button" class="btn btn-default border-custom" id="btnMoveToNextPageGrid">
                                <span class="glyphicon glyphicon-step-forward"></span>
                            </button>
                            <button type="button" class="btn btn-default border-custom" id="btnMoveToLastPageGrid">
                                <span class="glyphicon glyphicon-fast-forward"></span>
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- Option Modal -->
    <div class="modal fade" id="optionModal" role="dialog">
        <div class="modal-dialog">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title"> Options</h4>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col-sm-7">
                            <div class="panel-group" id="accordion">
                                <div class="panel panel-default">
                                    <div class="panel-heading">
                                        <a data-toggle="collapse" data-parent="#accordion" href="#collapse1">
                                            <table style="width: 100%">
                                                <tr>
                                                    <td>
                                                        Partial Payment
                                                    </td>
                                                    <td align="right">
                                                        <i class="fa fa-caret-down fa-fw"></i>
                                                    </td>
                                                </tr>
                                            </table>
                                        </a>
                                    </div>
                                    <div id="collapse1" class="panel-collapse collapse in">
                                        <div class="panel-body">
                                            <div class="form-group">
                                                <label>Current amount to be paid</label><br />
                                                <span id="currentAmountToBePaid"></span>
                                            </div>
                                            <div class="form-group">
                                                <label>Partial Amount</label><br />
                                                <div class="input-group numberField">
                                                    <span class="input-group-addon">&#8369;</span>
                                                    <input type="text" class="form-control numberField" id="collectionPartialPayment" value="0" placeholder="0.00" />
                                                </div>
                                            </div>
                                        </div>
                                        <div class="panel-footer" align="right">
                                            <button class="btn btn-primary btn-sm" id="btnUpdatePartialPayment" onclick="btnUpdatePartialPaymentOnclick()"><i class="fa fa-check fa-fw"></i> Update </button>
                                        </div>
                                    </div>
                                </div>
                                <div class="panel panel-default">
                                    <div class="panel-heading">
                                        <a data-toggle="collapse" data-parent="#accordion" href="#collapse2">
                                            <table style="width: 100%">
                                                <tr>
                                                    <td>
                                                        Advance Payment
                                                    </td>
                                                    <td align="right">
                                                        <i class="fa fa-caret-down fa-fw"></i>
                                                    </td>
                                                </tr>
                                            </table>
                                        </a>
                                    </div>
                                    <div id="collapse2" class="panel-collapse collapse">
                                        <div class="panel-body">
                                            <div class="form-group">
                                                <label>Amount</label><br />
                                                <div class="input-group numberField">
                                                    <span class="input-group-addon">&#8369;</span>
                                                    <input type="text" class="form-control numberField" id="" placeholder="0.00" />
                                                </div>
                                            </div>
                                        </div>
                                        <div class="panel-footer" align="right">
                                            <button class="btn btn-primary btn-sm"><i class="fa fa-check fa-fw"></i> Update </button>
                                        </div>
                                    </div>
                                </div>
                                <div class="panel panel-default">
                                    <div class="panel-heading">
                                        <a data-toggle="collapse" data-parent="#accordion" href="#collapse3">
                                            <table style="width: 100%">
                                                <tr>
                                                    <td>
                                                        Full Payment
                                                    </td>
                                                    <td align="right">
                                                        <i class="fa fa-caret-down fa-fw"></i>
                                                    </td>
                                                </tr>
                                            </table>
                                        </a>
                                    </div>
                                    <div id="collapse3" class="panel-collapse collapse">
                                        <div class="panel-body">
                                            <div class="form-group">
                                                <label>Amount</label><br />
                                                <div class="input-group numberField">
                                                    <span class="input-group-addon">&#8369;</span>
                                                    <input type="text" class="form-control numberField" id="" placeholder="0.00" />
                                                </div>
                                            </div>
                                        </div>
                                        <div class="panel-footer" align="right">
                                            <button class="btn btn-primary btn-sm"><i class="fa fa-check fa-fw"></i> Update </button>
                                        </div>
                                    </div>
                                </div>
                                <div class="panel panel-default">
                                    <div class="panel-heading">
                                        <a data-toggle="collapse" data-parent="#accordion" href="#collapse4">
                                            <table style="width: 100%">
                                                <tr>
                                                    <td>
                                                        Extend Payment
                                                    </td>
                                                    <td align="right">
                                                        <i class="fa fa-caret-down fa-fw"></i>
                                                    </td>
                                                </tr>
                                            </table>
                                        </a>
                                    </div>
                                    <div id="collapse4" class="panel-collapse collapse">
                                        <div class="panel-body">
                                            <div class="form-group">
                                                <label>Days</label><br />
                                                <div class="input-group numberField">
                                                    <span class="input-group-addon">&#8369;</span>
                                                    <input type="text" class="form-control numberField" id="" placeholder="0.00" />
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label>Penalty</label><br />
                                                <div class="input-group numberField">
                                                    <span class="input-group-addon">&#8369;</span>
                                                    <input type="text" class="form-control numberField" id="" placeholder="0.00" />
                                                </div>
                                            </div>
                                        </div>
                                        <div class="panel-footer" align="right">
                                            <button class="btn btn-primary btn-sm"><i class="fa fa-check fa-fw"></i> Update </button>
                                        </div>
                                    </div>
                                </div>
                                <div class="panel panel-default">
                                    <div class="panel-heading">
                                        <a data-toggle="collapse" data-parent="#accordion" href="#collapse5">
                                            <table style="width: 100%">
                                                <tr>
                                                    <td>
                                                        Overdue
                                                    </td>
                                                    <td align="right">
                                                        <i class="fa fa-caret-down fa-fw"></i>
                                                    </td>
                                                </tr>
                                            </table>
                                        </a>
                                    </div>
                                    <div id="collapse5" class="panel-collapse collapse">
                                        <div class="panel-body">
                                            Are you sure that you want to make this collection as overdue?
                                        </div>
                                        <div class="panel-footer" align="right">
                                            <button class="btn btn-default btn-sm"> Yes </button>
                                            <a class="btn btn-default btn-sm" data-toggle="collapse" data-parent="#accordion" href="#collapse5"> No </a>
                                        </div>
                                    </div>
                                </div>
                                <div class="panel panel-default">
                                    <div class="panel-heading">
                                        <a data-toggle="collapse" data-parent="#accordion" href="#collapse6">
                                            <table style="width: 100%">
                                                <tr>
                                                    <td>
                                                        Change Collector
                                                    </td>
                                                    <td align="right">
                                                        <i class="fa fa-caret-down fa-fw"></i>
                                                    </td>
                                                </tr>
                                            </table>
                                        </a>
                                    </div>
                                    <div id="collapse6" class="panel-collapse collapse">
                                        <div class="panel-body">
                                            <div class="form-group">
                                                <label>Collector</label><br />
                                                <input type="text" class="form-control" id="" placeholder="0.00" />
                                            </div>
                                        </div>
                                        <div class="panel-footer" align="right">
                                            <button class="btn btn-primary btn-sm"><i class="fa fa-check fa-fw"></i> Update </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-5">
                            <div class="panel panel-default">
                                <div class="panel-heading">
                                    <table style="width: 100%">
                                        <tr>
                                            <td>
                                                More Actions
                                            </td>
                                            <td>&nbsp;&nbsp;&nbsp;</td>
                                            <td align="right">
                                                <button type="button" class="btn btn-default btn-xs" data-toggle="tooltip" data-placement="top" title="Undo Actions and Changes" onclick="btnUndoChangesOnclick()">
                                                    <i class="fa fa-undo fa-fw"></i>
                                                </button>
                                            </td>
                                        </tr>
                                    </table>
                                </div>
                                <div class="panel-body">
                                    <div class="panel panel-default">
                                        <div class="panel-body">
                                            <button class="btn btn-success btn-block" onclick="btnClearOnclick()"> Clear</button>
                                            <button class="btn btn-danger btn-block" onclick="btnAbsentOnclick()"> Absent</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <button class="btn btn-info btn-block" onclick="btnLoanApplicationDetailOnclick()"> Loan Application Detail</button>
                            <button class="btn btn-info btn-block"> Collection Detail</button>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-danger" id="" data-dismiss="modal"><i class="fa fa-close fa-fw"></i> Close</button>
                </div>
            </div>
        </div>
    </div>

    <!-- overdue or extension modal -->
    <div class="modal fade" id="overdueExtensionModal" role="dialog">
        <div class="modal-dialog modal-sm">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Delete Company</h4>
                </div>
                <div class="modal-body">
                    The current collection is in due date. What would you like to do? Extend or Overdue?
                    <br /><br />
                    <div class="panel-group" id="accordion2">
                        <div class="panel panel-default">
                            <div class="panel-heading">
                                <a data-toggle="collapse" data-parent="#accordion2" href="#collapse7">
                                    <table style="width: 100%">
                                        <tr>
                                            <td>
                                                Overdue
                                            </td>
                                            <td align="right">
                                                <i class="fa fa-caret-down fa-fw"></i>
                                            </td>
                                        </tr>
                                    </table>
                                </a>
                            </div>
                            <div id="collapse7" class="panel-collapse collapse">
                                <div class="panel-body">
                                    Are you sure that you want to make this collection as overdue?
                                </div>
                                <div class="panel-footer" align="right">
                                    <button class="btn btn-default btn-sm"> Yes </button>
                                    <a class="btn btn-default btn-sm" data-toggle="collapse" data-parent="#accordion2" href="#collapse7"> No </a>
                                </div>
                            </div>
                        </div>
                        <div class="panel panel-default">
                            <div class="panel-heading">
                                <a data-toggle="collapse" data-parent="#accordion2" href="#collapse8">
                                    <table style="width: 100%">
                                        <tr>
                                            <td>
                                                Extend Payment Process
                                            </td>
                                            <td align="right">
                                                <i class="fa fa-caret-down fa-fw"></i>
                                            </td>
                                        </tr>
                                    </table>
                                </a>
                            </div>
                            <div id="collapse8" class="panel-collapse collapse">
                                <div class="panel-body">
                                    <div class="form-group">
                                        <label>Amount</label><br />
                                        <div class="input-group numberField">
                                            <span class="input-group-addon">&#8369;</span>
                                            <input type="text" class="form-control numberField" id="" placeholder="0.00" />
                                        </div>
                                    </div>
                                </div>
                                <div class="panel-footer" align="right">
                                    <button class="btn btn-primary btn-sm"><i class="fa fa-check fa-fw"></i> Update </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-danger" id="" data-dismiss="modal"><i class="fa fa-close fa-fw"></i> Close</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Footer -->
    @Html.Partial("HomeFooter")

    <!-- Scripts -->
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    <script type="text/javascript">
        // global variables
        var cboCollectionDate;
        var collectionCollectionView;
        var collectionFlexGrid;
        var btnFirstPageGrid;
        var btnPreviousPageGrid;
        var btnNextPageGrid;
        var btnLastPageGrid;
        var btnCurrentPageGrid;
        var isCollectionDateClicked = false;
        var cboArea;

        // create cbo date for collection date
        function createCboCollectionDate() {
            cboCollectionDate.dispose();
            cboCollectionDate = new wijmo.input.InputDate('#cboCollectionDate', {
                format: 'MM-dd-yyyy',
                value: new Date(),
                mask: '99-99-9999',
                onValueChanged: function () {
                    if (isCollectionDateClicked == true) {
                        NProgress.start();
                        collectionCollectionView = new wijmo.collections.CollectionView(getLoanLogHistoryByCollectionDateAndAreaIdList());
                        collectionCollectionView.canFilter = true;
                        collectionCollectionView.pageSize = 15;

                        var filterText = '';
                        $('#searchCollection').keyup(function () {
                            filterText = this.value.toLowerCase();
                            collectionCollectionView.refresh();
                        });

                        collectionCollectionView.filter = function (item) {
                            return !filterText || (item.Applicant.toLowerCase().indexOf(filterText) > -1);
                        }

                        collectionCollectionView.collectionChanged.addHandler(function (sender, args) {
                            updateNavigateButtons();
                        });

                        // Flex Grid
                        collectionFlexGrid.itemsSource = collectionCollectionView;
                        collectionFlexGrid.trackChanges = true;
                    } else {
                        isCollectionDateClicked = true;
                    }
                }
            });

            cboArea = new wijmo.input.ComboBox('#cboArea');
            createCboArea();
        }

        // get loan log history list by collection date and area id
        function getLoanLogHistoryByCollectionDateAndAreaIdList() {
            var loanLogHistoryListArray = new wijmo.collections.ObservableArray;
            $.ajax({
                url: '/api/loanLogHistory/listByCollectionDateAndByAreaId/' + [cboCollectionDate.value.getMonth() + 1, cboCollectionDate.value.getDate(), cboCollectionDate.value.getFullYear()].join('-') + "/" + cboArea.selectedItem["Id"],
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (collectionListResult) {
                    if (collectionListResult.length > 0) {
                        for (i = 0; i < collectionListResult.length; i++) {
                            var isLocked = false;
                            if (collectionListResult[i]["IsLocked"]) {
                                isLocked = true;
                            }

                            var btnClearClass = "btn btn-default btn-xs btn-block";
                            if (collectionListResult[i]["IsCleared"]) {
                                btnClearClass = "btn btn-success btn-xs btn-block";
                            }

                            var btnAbsentClass = "btn btn-default btn-xs btn-block";
                            if (collectionListResult[i]["IsPenalty"]) {
                                btnAbsentClass = "btn btn-danger btn-xs btn-block";
                            }

                            var disableButton = ""
                            if (!collectionListResult[i]["IsAction"]) {
                                disableButton = "disabled"
                            }

                            loanLogHistoryListArray.push({
                                OptionButton: "<button class='btn btn-primary btn-xs btn-block' onclick='btnOptionOnclick()'" + disableButton + "><i class='fa fa-wrench fa-fw'></i> Option</button>",
                                ClearButton: "<button class='" + btnClearClass + "' onclick='btnClearOnclick()'" + disableButton + "><i class='fa fa-check fa-fw'></i> Clear</button>",
                                AbsentButton: "<button class='" + btnAbsentClass + "' onclick='btnAbsentOnclick()'" + disableButton + "><i class='fa fa-circle fa-fw'></i> Absent</button>",
                                UndoChangesButton: "<button class='btn btn-default btn-xs btn-block' data-toggle='tooltip' data-placement='top' title='Undo Actions and Changes' onclick='btnUndoChangesOnclick()'" + disableButton + "><i class='fa fa-undo fa-fw'></i></button>",
                                Id: collectionListResult[i]["Id"],
                                LoanId: collectionListResult[i]["LoanId"],
                                LoanNumber: collectionListResult[i]["LoanNumber"],
                                Applicant: collectionListResult[i]["Applicant"],
                                Area: collectionListResult[i]["Area"],
                                CollectionDate: collectionListResult[i]["CollectionDate"],
                                NetAmount: collectionListResult[i]["NetAmount"],
                                CollectibleAmount: collectionListResult[i]["CollectibleAmount"],
                                PenaltyAmount: collectionListResult[i]["PenaltyAmount"],
                                PaidAmount: collectionListResult[i]["PaidAmount"],
                                PreviousBalanceAmount: collectionListResult[i]["PreviousBalanceAmount"],
                                CurrentBalanceAmount: collectionListResult[i]["CurrentBalanceAmount"],
                                IsCleared: collectionListResult[i]["IsCleared"],
                                IsPenalty: collectionListResult[i]["IsPenalty"],
                                IsOverdue: collectionListResult[i]["IsOverdue"],
                                IsFullyPaid: collectionListResult[i]["IsFullyPaid"],
                                IsDueDate: collectionListResult[i]["IsDueDate"]
                            });
                        }
                    }

                    NProgress.done();
                }
            });
            return loanLogHistoryListArray;
        }

        // option collection
        function btnOptionOnclick() {
            $("#optionModal").modal({
                "show": true,
                "backdrop": "static"
            });
            collectionCollectionView.editItem(collectionCollectionView.currentItem);
            var collectionItem = collectionCollectionView.currentEditItem;

            document.getElementById("currentAmountToBePaid").innerHTML = "&#8369; " + collectionItem.CurrentBalanceAmount;
        }

        // clear collection
        function btnClearOnclick() {
            NProgress.start();
            collectionCollectionView.editItem(collectionCollectionView.currentItem);
            var collectionItem = collectionCollectionView.currentEditItem;
            if (!collectionItem.IsCleared) {
                if (collectionItem.CurrentBalanceAmount > 0) {
                    $.ajax({
                        type: "PUT",
                        url: '/api/loanLogHistory/cleared/updateByIdAndByLoanId/' + collectionItem.Id + '/' + collectionItem.LoanId,
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        statusCode: {
                            200: function () {
                                $.ajax({
                                    type: "GET",
                                    url: '/api/loanLogHistory/getIsFullyPaid/' + collectionItem.LoanId,
                                    contentType: "application/json; charset=utf-8",
                                    dataType: "json",
                                    success: function (isFullyPaidResult) {
                                        NProgress.done();
                                        toastr.success("Successfully Cleared");

                                        collectionItem.PenaltyAmount = 0;
                                        collectionItem.PaidAmount = collectionItem.CollectibleAmount + collectionItem.PreviousBalanceAmount;
                                        collectionItem.CurrentBalanceAmount = 0;
                                        collectionItem.IsCleared = true;
                                        collectionItem.IsFullyPaid = isFullyPaidResult;
                                        collectionItem.IsPenalty = false;
                                        collectionItem.AbsentButton = "<button class='btn btn-default btn-xs btn-block' onclick='btnAbsentOnclick()'><i class='fa fa-circle fa-fw'></i> Absent</button>";
                                        collectionItem.ClearButton = "<button class='btn btn-success btn-xs btn-block' onclick='btnClearOnclick()'><i class='fa fa-check fa-fw'></i> Clear</button>";

                                        collectionCollectionView.onCollectionChanged(function () {
                                            collectionCollectionView.refresh();
                                        });
                                    }
                                });
                            },
                            404: function (message) {
                                NProgress.done();
                                toastr.error(message.responseText.replace(/"/g, ""), "Error 404 - Not Found");
                            },
                            400: function (message) {
                                NProgress.done();
                                toastr.error(message.responseText.replace(/"/g, ""), "Error 400 - Bad Request");
                            },
                            500: function (message) {
                                NProgress.done();
                                toastr.error(message.responseText.replace(/"/g, ""), "Error 500 - Internal Server Error");
                            }
                        }
                    });
                } else {
                    NProgress.done();
                    toastr.info("No Current Balance to be cleared");
                }
            } else {
                NProgress.done();
                toastr.info("Already Cleared");
            }
        }

        // absent collection
        function btnAbsentOnclick() {
            NProgress.start();
            collectionCollectionView.editItem(collectionCollectionView.currentItem);
            var collectionItem = collectionCollectionView.currentEditItem;
            if (collectionItem.IsDueDate) {
                NProgress.done();
                $("#overdueExtensionModal").modal({
                    "show": true,
                    "backdrop": "static"
                });
            } else {
                if (!collectionItem.IsPenalty) {
                    $.ajax({
                        type: "PUT",
                        url: '/api/loanLogHistory/absent/updateByIdAndByLoanId/' + collectionItem.Id + '/' + collectionItem.LoanId,
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        statusCode: {
                            200: function () {
                                var newDate = new Date(collectionItem.CollectionDate);
                                var collectionDateValue = [newDate.getMonth() + 1, newDate.getDate(), newDate.getFullYear()].join('-');
                                $.ajax({
                                    type: "GET",
                                    url: '/api/loanLogHistory/getPenaltyValue/' + collectionItem.LoanId + '/' + collectionDateValue,
                                    contentType: "application/json; charset=utf-8",
                                    dataType: "json",
                                    success: function (penaltyValueResult) {
                                        $.ajax({
                                            type: "GET",
                                            url: '/api/loanLogHistory/getIsFullyPaid/' + collectionItem.LoanId,
                                            contentType: "application/json; charset=utf-8",
                                            dataType: "json",
                                            success: function (isFullyPaidResult) {
                                                NProgress.done();
                                                toastr.info("Absent / Penalty");

                                                collectionItem.PenaltyAmount = penaltyValueResult;
                                                collectionItem.PaidAmount = 0;
                                                collectionItem.CurrentBalanceAmount = collectionItem.CollectibleAmount + collectionItem.PenaltyAmount + collectionItem.PreviousBalanceAmount;
                                                collectionItem.IsCleared = false;
                                                collectionItem.IsFullyPaid = isFullyPaidResult;
                                                collectionItem.IsPenalty = true;
                                                collectionItem.AbsentButton = "<button class='btn btn-danger btn-xs btn-block' onclick='btnAbsentOnclick()'><i class='fa fa-circle fa-fw'></i> Absent</button>";
                                                collectionItem.ClearButton = "<button class='btn btn-default btn-xs btn-block' onclick='btnClearOnclick()'><i class='fa fa-check fa-fw'></i> Clear</button>";

                                                collectionCollectionView.onCollectionChanged(function () {
                                                    collectionCollectionView.refresh();
                                                });
                                            }
                                        });
                                    }
                                });
                            },
                            404: function (message) {
                                NProgress.done();
                                toastr.error(message.responseText.replace(/"/g, ""), "Error 404 - Not Found");
                            },
                            400: function (message) {
                                NProgress.done();
                                toastr.error(message.responseText.replace(/"/g, ""), "Error 400 - Bad Request");
                            },
                            500: function (message) {
                                NProgress.done();
                                toastr.error(message.responseText.replace(/"/g, ""), "Error 500 - Internal Server Error");
                            }
                        }
                    });
                } else {
                    NProgress.done();
                    toastr.info("Already Absent");
                }
            }
        }

        // undo changes collection
        function btnUndoChangesOnclick() {
            NProgress.start();
            collectionCollectionView.editItem(collectionCollectionView.currentItem);
            var collectionItem = collectionCollectionView.currentEditItem;
            $.ajax({
                type: "PUT",
                url: '/api/loanLogHistory/undoChanges/updateByIdAndByLoanId/' + collectionItem.Id + '/' + collectionItem.LoanId,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                statusCode: {
                    200: function () {
                        var newDate = new Date(collectionItem.CollectionDate);
                        var collectionDateValue = [newDate.getMonth() + 1, newDate.getDate(), newDate.getFullYear()].join('-');
                        $.ajax({
                            type: "GET",
                            url: '/api/loanLogHistory/getPreviousBalance/' + collectionItem.LoanId + '/' + collectionDateValue,
                            contentType: "application/json; charset=utf-8",
                            dataType: "json",
                            success: function (previousBalanceValueResult) {
                                $.ajax({
                                    type: "GET",
                                    url: '/api/loanLogHistory/getIsFullyPaid/' + collectionItem.LoanId,
                                    contentType: "application/json; charset=utf-8",
                                    dataType: "json",
                                    success: function (isFullyPaidResult) {
                                        NProgress.done();
                                        toastr.success("Undo Changes Done");

                                        collectionItem.PenaltyAmount = 0;
                                        collectionItem.PaidAmount = 0;
                                        collectionItem.PreviousBalanceAmount = previousBalanceValueResult;
                                        collectionItem.CurrentBalanceAmount = collectionItem.CollectibleAmount + previousBalanceValueResult;
                                        collectionItem.IsCleared = false;
                                        collectionItem.IsFullyPaid = isFullyPaidResult;
                                        collectionItem.IsPenalty = false;
                                        collectionItem.AbsentButton = "<button class='btn btn-default btn-xs btn-block' onclick='btnAbsentOnclick()'><i class='fa fa-circle fa-fw'></i> Absent</button>";
                                        collectionItem.ClearButton = "<button class='btn btn-default btn-xs btn-block' onclick='btnClearOnclick()'><i class='fa fa-check fa-fw'></i> Clear</button>";

                                        collectionCollectionView.onCollectionChanged(function () {
                                            collectionCollectionView.refresh();
                                        });
                                    }
                                });
                            }
                        });
                    },
                    404: function (message) {
                        NProgress.done();
                        toastr.error(message.responseText.replace(/"/g, ""), "Error 404 - Not Found");
                    },
                    400: function (message) {
                        NProgress.done();
                        toastr.error(message.responseText.replace(/"/g, ""), "Error 400 - Bad Request");
                    },
                    500: function (message) {
                        NProgress.done();
                        toastr.error(message.responseText.replace(/"/g, ""), "Error 500 - Internal Server Error");
                    }
                }
            });
        }

        // navigation button for flexgrid
        function updateNavigateButtons() {
            if (collectionCollectionView.pageSize <= 0) {
                document.getElementById('navigationPageGrid').style.display = 'none';
                return;
            }
            document.getElementById('navigationPageGrid').style.display = 'block';
            if (collectionCollectionView.pageIndex === 0) {
                btnFirstPageGrid.setAttribute('disabled', 'disabled');
                btnPreviousPageGrid.setAttribute('disabled', 'disabled');
                btnNextPageGrid.removeAttribute('disabled');
                btnLastPageGrid.removeAttribute('disabled');
            } else if (collectionCollectionView.pageIndex === (collectionCollectionView.pageCount - 1)) {
                btnFirstPageGrid.removeAttribute('disabled');
                btnPreviousPageGrid.removeAttribute('disabled');
                btnLastPageGrid.setAttribute('disabled', 'disabled');
                btnNextPageGrid.setAttribute('disabled', 'disabled');
            } else {
                btnFirstPageGrid.removeAttribute('disabled');
                btnPreviousPageGrid.removeAttribute('disabled');
                btnNextPageGrid.removeAttribute('disabled');
                btnLastPageGrid.removeAttribute('disabled');
            }
            btnCurrentPageGrid.innerHTML = (collectionCollectionView.pageIndex + 1) + ' / ' + collectionCollectionView.pageCount;
        }

        // create collection flexgrid
        function createCollectionFlexGrid() {
            collectionCollectionView = new wijmo.collections.CollectionView(getLoanLogHistoryByCollectionDateAndAreaIdList());
            collectionCollectionView.canFilter = true;
            collectionCollectionView.pageSize = 15;

            var filterText = '';
            $('#searchCollection').keyup(function () {
                filterText = this.value.toLowerCase();
                collectionCollectionView.refresh();
            });

            collectionCollectionView.filter = function (item) {
                return !filterText || (item.Applicant.toLowerCase().indexOf(filterText) > -1);
            }

            collectionCollectionView.collectionChanged.addHandler(function (sender, args) {
                updateNavigateButtons();
            });

            // Flex Grid
            collectionFlexGrid = new wijmo.grid.FlexGrid('#collectionListFlexGrid');
            collectionFlexGrid.initialize({
                columns: [
                            {
                                "header": "Option",
                                "binding": "OptionButton",
                                "width": 80,
                                "align": "center",
                                "allowResizing": false,
                                "isContentHtml": true
                            },
                            {
                                "header": "Date",
                                "binding": "CollectionDate",
                                "allowSorting": true,
                                "width": "1.7*",
                            },
                            {
                                "header": "Applicant",
                                "binding": "Applicant",
                                "allowSorting": true,
                                "width": "2.5*",
                            },
                            {
                                "header": "Collectible",
                                "binding": "CollectibleAmount",
                                "allowSorting": true,
                                "width": "2*",
                            },
                            {
                                "header": "P",
                                "binding": "IsPenalty",
                                "allowSorting": true,
                                "width": "0.6*",
                            },
                            {
                                "header": "Penalty",
                                "binding": "PenaltyAmount",
                                "allowSorting": true,
                                "width": "2*",
                            },
                            {
                                "header": "O",
                                "binding": "IsOverdue",
                                "allowSorting": true,
                                "width": "0.6*",
                            },
                            {
                                "header": "F",
                                "binding": "IsFullyPaid",
                                "allowSorting": true,
                                "width": "0.6*",
                            },
                            {
                                "header": "Previous",
                                "binding": "PreviousBalanceAmount",
                                "allowSorting": true,
                                "width": "2*",
                            },
                            {
                                "header": "Current",
                                "binding": "CurrentBalanceAmount",
                                "allowSorting": true,
                                "width": "2*",
                            },
                            {
                                "header": "Paid",
                                "binding": "PaidAmount",
                                "allowSorting": true,
                                "width": "2*",
                            },
                            {
                                "header": "C",
                                "binding": "IsCleared",
                                "allowSorting": true,
                                "width": "0.6*",
                            },
                            {
                                "header": "Absent",
                                "binding": "AbsentButton",
                                "width": 80,
                                "align": "center",
                                "allowResizing": false,
                                "isContentHtml": true
                            },
                            {
                                "header": "Clear",
                                "binding": "ClearButton",
                                "width": 80,
                                "align": "center",
                                "allowResizing": false,
                                "isContentHtml": true
                            },
                            {
                                "header": "U",
                                "binding": "UndoChangesButton",
                                "width": 30,
                                "align": "center",
                                "allowResizing": false,
                                "isContentHtml": true
                            },
                ],
                autoGenerateColumns: false,
                itemsSource: collectionCollectionView,
                isReadOnly: true,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            collectionFlexGrid.trackChanges = true;

            var hr = new wijmo.grid.Row();
            collectionFlexGrid.allowMerging = wijmo.grid.AllowMerging.AllHeaders;
            collectionFlexGrid.columnHeaders.rows.push(hr);
            collectionFlexGrid.columnHeaders.rows[0].allowMerging = true;

            collectionFlexGrid.columnHeaders.columns[0].allowMerging = true;
            collectionFlexGrid.columnHeaders.setCellData(0, 0, 'Option');

            collectionFlexGrid.columnHeaders.columns[1].allowMerging = true;
            collectionFlexGrid.columnHeaders.setCellData(0, 1, 'Date');

            collectionFlexGrid.columnHeaders.columns[2].allowMerging = true;
            collectionFlexGrid.columnHeaders.setCellData(0, 2, 'Applicant');

            collectionFlexGrid.columnHeaders.columns[3].allowMerging = true;
            collectionFlexGrid.columnHeaders.setCellData(0, 3, 'Collectible');

            collectionFlexGrid.columnHeaders.columns[4].allowMerging = true;
            collectionFlexGrid.columnHeaders.setCellData(0, 4, 'P');

            collectionFlexGrid.columnHeaders.columns[5].allowMerging = true;
            collectionFlexGrid.columnHeaders.setCellData(0, 5, 'Penalty');

            collectionFlexGrid.columnHeaders.columns[6].allowMerging = true;
            collectionFlexGrid.columnHeaders.setCellData(0, 6, 'O');

            collectionFlexGrid.columnHeaders.columns[7].allowMerging = true;
            collectionFlexGrid.columnHeaders.setCellData(0, 7, 'F');

            for (var balancesColumn = 8; balancesColumn <= 9; balancesColumn++) {
                collectionFlexGrid.columnHeaders.setCellData(0, balancesColumn, 'Balances (Amount)');
            }

            collectionFlexGrid.columnHeaders.columns[10].allowMerging = true;
            collectionFlexGrid.columnHeaders.setCellData(0, 10, 'Paid');

            collectionFlexGrid.columnHeaders.columns[11].allowMerging = true;
            collectionFlexGrid.columnHeaders.setCellData(0, 11, 'C');

            for (var actionsColumn = 12; actionsColumn <= 14; actionsColumn++) {
                collectionFlexGrid.columnHeaders.setCellData(0, actionsColumn, 'Actions');
            }

            //Navigation button
            btnFirstPageGrid = document.getElementById('btnMoveToFirstPageGrid');
            btnPreviousPageGrid = document.getElementById('btnMoveToPreviousPageGrid');
            btnNextPageGrid = document.getElementById('btnMoveToNextPageGrid');
            btnLastPageGrid = document.getElementById('btnMoveToLastPageGrid');
            btnCurrentPageGrid = document.getElementById('btnCurrentPageGrid');

            updateNavigateButtons();

            btnFirstPageGrid.addEventListener('click', function () {
                collectionCollectionView.moveToFirstPage();
                updateNavigateButtons();
            });
            btnPreviousPageGrid.addEventListener('click', function () {
                collectionCollectionView.moveToPreviousPage();
                updateNavigateButtons();
            });
            btnNextPageGrid.addEventListener('click', function () {
                collectionCollectionView.moveToNextPage();
                updateNavigateButtons();
            });
            btnLastPageGrid.addEventListener('click', function () {
                collectionCollectionView.moveToLastPage();
                updateNavigateButtons();
            });
        }

        // cbo Area
        function createCboArea() {
            var areaArray = new Array();
            $.ajax({
                url: '/api/area/list',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (areaResults) {
                    var disabled = true;
                    if (areaResults.length > 0) {
                        for (i = 0; i < areaResults.length; i++) {
                            areaArray.push({
                                Id: areaResults[i]["Id"],
                                Area: areaResults[i]["Area"],
                            });
                        }

                        disabled = false;
                    }

                    // applicant
                    cboArea.dispose();
                    cboArea = new wijmo.input.ComboBox('#cboArea', {
                        disabled: disabled,
                        placeholder: "Select",
                        itemsSource: areaArray,
                        isEditable: false,
                        required: true,
                        displayMemberPath: "Area",
                        selectedValuePath: "Area",
                        onSelectedIndexChanged: function () {
                            NProgress.start();
                            collectionCollectionView = new wijmo.collections.CollectionView(getLoanLogHistoryByCollectionDateAndAreaIdList());
                            collectionCollectionView.canFilter = true;
                            collectionCollectionView.pageSize = 15;

                            var filterText = '';
                            $('#searchCollection').keyup(function () {
                                filterText = this.value.toLowerCase();
                                collectionCollectionView.refresh();
                            });

                            collectionCollectionView.filter = function (item) {
                                return !filterText || (item.Applicant.toLowerCase().indexOf(filterText) > -1);
                            }

                            collectionCollectionView.collectionChanged.addHandler(function (sender, args) {
                                updateNavigateButtons();
                            });

                            // Flex Grid
                            collectionFlexGrid.itemsSource = collectionCollectionView;
                            collectionFlexGrid.trackChanges = true;
                        }
                    });

                    createCollectionFlexGrid();
                }
            });
        }

        // loan applicaion detail onclick
        function btnLoanApplicationDetailOnclick() {
            collectionCollectionView.editItem(collectionCollectionView.currentItem);
            var collectionItem = collectionCollectionView.currentEditItem;
            window.open('/Software/LoanApplicationDetail?id=' + collectionItem.LoanId, '_blank');
        }

        // partial payment validation
        function partialPaymentValidation() {
            var isValid = true;
            $('#collectionPartialPayment').each(function () {
                if ($.trim($(this).val()) == '') {
                    isValid = false;
                    $(this).css({
                        "border": "1px solid red"
                    });
                } else {
                    $(this).css({
                        "border": "",
                    });
                }
            });

            return isValid;
        }

        // partial payment
        function btnUpdatePartialPaymentOnclick() {
            NProgress.start();
            if (partialPaymentValidation()) {
                collectionCollectionView.editItem(collectionCollectionView.currentItem);
                var collectionItem = collectionCollectionView.currentEditItem;
                var collectionPartialAmount = document.getElementById("collectionPartialPayment").value;
                if (parseFloat(collectionItem.CurrentBalanceAmount) >= parseFloat(collectionPartialAmount.replace(/[^\d\.]/g, ''))) {
                    var loanLogHistoryObject = new Object();
                    loanLogHistoryObject.PaidAmount = parseFloat(collectionPartialAmount.replace(/[^\d\.]/g, ''));
                    var loanLogHistoryData = JSON.stringify(loanLogHistoryObject);

                    $('#collectionPartialPayment').each(function () {
                        $(this).css({
                            "border": "",
                        });
                    });

                    $("#btnUpdatePartialPayment").prop("disabled", true);
                    document.getElementById("btnUpdatePartialPayment").innerHTML = "<i class='fa fa-spinner fa-spin fa-fw'></i> Updating";
                    $.ajax({
                        type: "PUT",
                        url: '/api/loanLogHistory/partialPayment/updateByIdAndByLoanId/' + collectionItem.Id + '/' + collectionItem.LoanId,
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: loanLogHistoryData,
                        statusCode: {
                            200: function () {
                                $.ajax({
                                    type: "GET",
                                    url: '/api/loanLogHistory/getIsFullyPaid/' + collectionItem.LoanId,
                                    contentType: "application/json; charset=utf-8",
                                    dataType: "json",
                                    success: function (isFullyPaidResult) {
                                        $("#btnUpdatePartialPayment").prop("disabled", false);
                                        document.getElementById("btnUpdatePartialPayment").innerHTML = "<i class='fa fa-check fa-fw'></i> Update";
                                        NProgress.done();
                                        toastr.success("Partial Payment Done");

                                        collectionItem.PenaltyAmount = 0;
                                        collectionItem.PaidAmount = document.getElementById("collectionPartialPayment").value;
                                        collectionItem.CurrentBalanceAmount = (collectionItem.CollectibleAmount + collectionItem.PreviousBalanceAmount) - parseFloat(collectionPartialAmount.replace(/[^\d\.]/g, ''));
                                        var currentAmountToBeDisplayed = (collectionItem.CollectibleAmount + collectionItem.PreviousBalanceAmount) - parseFloat(collectionPartialAmount.replace(/[^\d\.]/g, ''));

                                        document.getElementById("currentAmountToBePaid").innerHTML = "&#8369; " + (Math.round(currentAmountToBeDisplayed * 100) / 100).toString();

                                        var isClearedValue = false;
                                        var buttonClear = "<button class='btn btn-default btn-xs btn-block' onclick='btnClearOnclick()'><i class='fa fa-check fa-fw'></i> Clear</button>";
                                        if ((collectionItem.CollectibleAmount + collectionItem.PreviousBalanceAmount) - parseFloat(collectionPartialAmount.replace(/[^\d\.]/g, '')) == 0) {
                                            isClearedValue = true;
                                            buttonClear = "<button class='btn btn-success btn-xs btn-block' onclick='btnClearOnclick()'><i class='fa fa-check fa-fw'></i> Clear</button>";
                                        }

                                        collectionItem.IsCleared = isClearedValue;
                                        collectionItem.IsFullyPaid = isFullyPaidResult;
                                        collectionItem.IsPenalty = false;

                                        collectionItem.AbsentButton = "<button class='btn btn-default btn-xs btn-block' onclick='btnAbsentOnclick()'><i class='fa fa-circle fa-fw'></i> Absent</button>";
                                        collectionItem.ClearButton = buttonClear;

                                        collectionCollectionView.onCollectionChanged(function () {
                                            collectionCollectionView.refresh();
                                        });
                                    }
                                });
                            },
                            404: function (message) {
                                NProgress.done();
                                toastr.error(message.responseText.replace(/"/g, ""), "Error 404 - Not Found");
                            },
                            400: function (message) {
                                NProgress.done();
                                toastr.error(message.responseText.replace(/"/g, ""), "Error 400 - Bad Request");
                            },
                            500: function (message) {
                                NProgress.done();
                                toastr.error(message.responseText.replace(/"/g, ""), "Error 500 - Internal Server Error");
                            }
                        }
                    });
                } else {
                    NProgress.done();
                    $('#collectionPartialPayment').each(function () {
                        $(this).css({
                            "border": "1px solid red"
                        });
                    });

                    toastr.error("The amount to be paid must not be greater than the current balance which is to be collected (Paid).");
                }
            } else {
                toastr.error("Invalid Entry");
            }
        }

        // on load page
        window.onload = function () {
            NProgress.start();
            toastrModification();
            cboCollectionDate = new wijmo.input.InputDate('#cboCollectionDate');
            createCboCollectionDate();
            $(function () { $("[data-toggle='tooltip']").tooltip(); });
            doubleModal();
        }
    </script>
</body>
</html>