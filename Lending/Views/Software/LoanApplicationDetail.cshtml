<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <!-- Title -->
    <title>Loan Application Detail</title>

    <!-- Styles -->
    @Styles.Render("~/Content/css")
</head>
<body>
    <!-- Header -->
    @Html.Partial("HomeHeader")

    <section class="software-section">
        <div class="container">

            <div class="btn-group">
                <div class="btn-group">
                    <a href="/Software" class="btn btn-info">
                        Dashboard
                    </a>
                </div>
                <div class="btn-group">
                    <button type="button" class="btn btn-info dropdown-toggle" data-toggle="dropdown">
                        Set Ups <span class="caret"></span>
                    </button>
                    <ul class="dropdown-menu" role="menu">
                        <li><a href="/Software/ApplicantList"><i class="fa fa-users fa-fw"></i> Applicants</a></li>
                        <li><a href="/Software/Tables"><i class="fa fa-table fa-fw"></i> Tables</a></li>
                    </ul>
                </div>
                <div class="btn-group">
                    <button type="button" class="btn btn-info dropdown-toggle" data-toggle="dropdown">
                        Activities <span class="caret"></span>
                    </button>
                    <ul class="dropdown-menu" role="menu">
                        <li><a href="/Software/LoanApplicationList"><i class="fa fa-file-text-o fa-fw"></i> Loan Application</a></li>
                        <li><a href="/Software/CollectionList"><i class="fa fa-money fa-fw"></i> Collection</a></li>
                        <li><a href="/Software/DisbursementList"><i class="fa fa-credit-card fa-fw"></i> Disbursement</a></li>
                    </ul>
                </div>
                <div class="btn-group">
                    <button type="button" class="btn btn-info dropdown-toggle" data-toggle="dropdown">
                        System <span class="caret"></span>
                    </button>
                    <ul class="dropdown-menu" role="menu">
                        <li><a href="/Software/CompanyList"><i class="fa fa-building fa-fw"></i> Company</a></li>
                        <li><a href="/Software/UserList"><i class="fa fa-key fa-fw"></i> Users</a></li>
                        <li class="divider"></li>
                        <li><a href="/Manage/Index"><i class="fa fa-gears fa-fw"></i> Settings</a></li>
                    </ul>
                </div>
                <div class="btn-group">
                    <button type="button" class="btn btn-info dropdown-toggle" data-toggle="dropdown">
                        Reports <span class="caret"></span>
                    </button>
                    <ul class="dropdown-menu" role="menu">
                        <li><a href="/Software/Reports"><i class="fa fa-print fa-fw"></i> Generate Reports</a></li>
                    </ul>
                </div>
            </div>
            <br /><br />
            <div class="panel panel-default">
                <div class="panel-heading">
                    <table style="width: 100%">
                        <tr>
                            <td>
                                <h4><i class="fa fa-file-text-o fa-fw"></i> Loan Application Detail</h4>
                            </td>
                            <td align="right">
                                <button class="btn btn-primary" id="btnLock" onclick="btnLockOnClick()">
                                    <i class="fa fa-lock fa-fw"></i> Lock
                                </button>
                                <button class="btn btn-primary" id="btnUnlock" onclick="btnUnlockOnClick()">
                                    <i class="fa fa-unlock fa-fw"></i> Unlock
                                </button>
                                <button class="btn btn-primary" id="btnPrint" onclick="btnPrintOnClick()">
                                    <i class="fa fa-file-pdf-o fa-fw"></i> Cash Voucher
                                </button>
                                <button class="btn btn-danger" id="btnClose" onclick="window.location = '/Software/LoanApplicationList'">
                                    <i class="fa fa-close fa-fw"></i> Close
                                </button>
                            </td>
                        </tr>
                    </table>
                </div>
                <div class="panel-body">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="panel panel-default">
                                <div class="panel-heading">
                                    Loan Detail
                                </div>
                                <div class="panel-body">
                                    <div class="form-group">
                                        <label>Loan Number</label><br />
                                        <input type="text" class="form-control requiredLoanApplication" id="loanApplicationNumber" placeholder="Loan Number" />
                                    </div>
                                    <div class="form-group">
                                        <label>Loan Date</label><br />
                                        <div id="loanApplicationLoanDate"></div>
                                    </div>
                                    <div class="form-group">
                                        <label>Maturity Date</label><br />
                                        <div id="loanApplicationMaturityDate"></div>
                                    </div>
                                    <div class="form-group">
                                        <label>Account</label><br />
                                        <div id="cboLoanApplicationAccount"></div>
                                    </div>
                                    <div class="form-group">
                                        <label>Applicant</label><br />
                                        <div id="loanApplicationApplicant"></div> <button class="btn btn-primary btn-sm"><i class="fa fa-eye fa-fw"></i> View Loan History</button>
                                    </div>
                                    <div class="form-group">
                                        <label>Particulars</label><br />
                                        <textarea class="form-control requiredLoanApplication" rows="6" id="loanApplicationParticulars" placeholder="Particulars"></textarea>
                                    </div>
                                    <div class="form-group">
                                        <label>Prepared by</label><br />
                                        <div id="loanApplicationPreparedBy"></div>
                                    </div>
                                </div>
                            </div>
                            <div class="panel panel-default">
                                <div class="panel-body">
                                    <p>Created by:</p>
                                    <div style="padding-left: 10px;">
                                        <i class="fa fa-key fa-fw"></i> <label id="stampCreatedBy">NA</label>
                                        <br />
                                        <small><i class="fa fa-calendar fa-fw"></i> &nbsp;<span id="stampCreatedDate">mm/dd/yyyy</span></small>
                                    </div>
                                    <br />
                                    <p>Updated by:</p>
                                    <div style="padding-left: 10px;">
                                        <i class="fa fa-key fa-fw"></i> <label id="stampUpdatedBy">NA</label>
                                        <br />
                                        <small><i class="fa fa-calendar fa-fw"></i> &nbsp;<span id="stampUpdatedDate">mm/dd/yyyy</span></small>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="panel panel-default">
                                <div class="panel-heading">
                                    Principal Amount, Deductions and total Net Amount
                                </div>
                                <div class="panel-body">
                                    <div class="form-group">
                                        <label>Principal</label><br />
                                        <div class="input-group numberField">
                                            <span class="input-group-addon">&#8369;</span>
                                            <input type="text" class="form-control numberField requiredLoanApplication" id="loanApplicationPrincipalAmount" placeholder="0.00" />
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label>3% Processing Fee</label><br />
                                        <div class="input-group numberField">
                                            <span class="input-group-addon">&#8369;</span>
                                            <input type="text" class="form-control numberField requiredLoanApplication" id="loanApplicationProcessingFee" placeholder="0.00" />
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label>Passbook</label><br />
                                        <div class="input-group numberField">
                                            <span class="input-group-addon">&#8369;</span>
                                            <input type="text" class="form-control numberField requiredLoanApplication" id="loanApplicationPassbook" placeholder="0.00" />
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label>Balance</label><br />
                                        <div class="input-group numberField">
                                            <span class="input-group-addon">&#8369;</span>
                                            <input type="text" class="form-control numberField requiredLoanApplication" id="loanApplicationBalance" placeholder="0.00" />
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label>Penalty</label><br />
                                        <div class="input-group numberField">
                                            <span class="input-group-addon">&#8369;</span>
                                            <input type="text" class="form-control numberField requiredLoanApplication" id="loanApplicationPenalty" placeholder="0.00" />
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label>Late Int.</label><br />
                                        <div class="input-group numberField">
                                            <span class="input-group-addon">&#8369;</span>
                                            <input type="text" class="form-control numberField requiredLoanApplication" id="loanApplicationLateInt" placeholder="0.00" />
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label>Advance</label><br />
                                        <div class="input-group numberField">
                                            <span class="input-group-addon">&#8369;</span>
                                            <input type="text" class="form-control numberField requiredLoanApplication" id="loanApplicationAdvance" placeholder="0.00" />
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label>Requirements</label><br />
                                        <div class="input-group numberField">
                                            <span class="input-group-addon">&#8369;</span>
                                            <input type="text" class="form-control numberField requiredLoanApplication" id="loanApplicationRequirements" placeholder="0.00" />
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label>Insurance IPI / PPI</label><br />
                                        <div class="input-group numberField">
                                            <span class="input-group-addon">&#8369;</span>
                                            <input type="text" class="form-control numberField requiredLoanApplication" id="loanApplicationInsuranceIPIorPPI" placeholder="0.00" />
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label>Total / Net Amount</label><br />
                                        <div class="input-group numberField">
                                            <span class="input-group-addon">&#8369;</span>
                                            <input type="text" class="form-control numberField requiredLoanApplication" id="loanApplicationTotalNetAmount" placeholder="0.00" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <br />
                    <ul id="myTab" class="nav nav-tabs">
                        <li class="active">
                            <a href="#loanApplicationCollateral" data-toggle="tab" id="loanApplicationCollateralTab">
                                Collateral
                            </a>
                        </li>
                        <li>
                            <a href="#applicantRequirements" data-toggle="tab" id="applicantRequirementTab">
                                Applicant Requirements
                            </a>
                        </li>
                    </ul>
                    <br />
                    <div id="myTabContent" class="tab-content">
                        <div class="tab-pane fade in active" id="loanApplicationCollateral">
                            <div class="panel panel-default">
                                <div class="panel-heading">
                                    <table style="width: 100%">
                                        <tr>
                                            <td>
                                                Collateral
                                            </td>
                                            <td align="right">
                                                <button class="btn btn-primary btn-sm" id="btnAddLoanApplicationCollateral" onclick="btnAddLoanApplicationCollateralOnclick()">
                                                    <i class="fa fa-plus fa-fw"></i> Add
                                                </button>
                                            </td>
                                        </tr>
                                    </table>
                                </div>
                                <div class="panel-body">
                                    <div id="loanApplicationCollateralFlexGrid" class="grid"></div>
                                </div>
                            </div>
                        </div>
                        <div class="tab-pane fade in" id="applicantRequirements">
                            <div class="panel panel-default">
                                <div class="panel-heading">
                                    <table style="width: 100%">
                                        <tr>
                                            <td>
                                                Applicant Requirements
                                            </td>
                                            <td align="right">
                                                <button class="btn btn-primary btn-sm" id="btnAddLoanRequirements" onclick="btnAddLoanRequirementsOnclick()">
                                                    <i class="fa fa-plus fa-fw"></i> Add
                                                </button>
                                            </td>
                                        </tr>
                                    </table>
                                </div>
                                <div class="panel-body">
                                    <div id="loanRequirementsFlexGrid" class="grid"></div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- loan requirement Detail Modal -->
    <div class="modal fade" id="loanRequirementsEditDetailModal" role="dialog">
        <div class="modal-dialog">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Loan Applicant's Requirement Detail</h4>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        <label>Requirement</label><br />
                        <div id="loanRequiremenstName"></div>
                    </div>
                    <div class="form-group">
                        <label>Note</label><br />
                        <textarea class="form-control requiredLoanRequirements" rows="5" id="loanRequirementsNote"></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-primary" id="btnSaveLoanRequirement" onclick="saveLoanRequirementOnclick()"><i class="fa fa-save fa-fw"></i> Save</button>
                    <button class="btn btn-danger" id="btnCloseLoanRequirement" data-dismiss="modal"><i class="fa fa-close fa-fw"></i> Close</button>
                </div>
            </div>
        </div>
    </div>

    <!-- delete confirmation Loan Requirement modal -->
    <div class="modal fade" id="deleteConfirmationLoanRequirementModal" role="dialog">
        <div class="modal-dialog modal-sm">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Delete Loan Requirement</h4>
                </div>
                <div class="modal-body">
                    Are you sure that you want to delete this Applicant's Requirement?
                </div>
                <div class="modal-footer">
                    <button class="btn btn-default" id="btnConfirmDeleteLoanRequirement" onclick="btnConfirmDeleteLoanRequirementOnclick()">Yes</button>
                    <button class="btn btn-default" id="btnCloseDeleteLoanRequirementModal" data-dismiss="modal">No</button>
                </div>
            </div>
        </div>
    </div>

    <!-- loan applciation collateral Detail Modal -->
    <div class="modal fade" id="loanApplicationCollateralEditDetailModal" role="dialog">
        <div class="modal-dialog">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Loan Applicant's Collateral Detail</h4>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        <label>Type</label><br />
                        <input type="text" class="form-control requiredLoanApplicationCollateral" id="loanApplicationCollateralType" placeholder="Type" />
                    </div>
                    <div class="form-group">
                        <label>Brand</label><br />
                        <input type="text" class="form-control requiredLoanApplicationCollateral" id="loanApplicationCollateralBrand" placeholder="Brand" />
                    </div>
                    <div class="form-group">
                        <label>Model Number</label><br />
                        <input type="text" class="form-control requiredLoanApplicationCollateral" id="loanApplicationCollateralModelNumber" placeholder="Model Number" />
                    </div>
                    <div class="form-group">
                        <label>Serial Number</label><br />
                        <input type="text" class="form-control requiredLoanApplicationCollateral" id="loanApplicationCollateralSerialNumber" placeholder="Serial Number" />
                    </div>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-primary" id="btnSaveLoanApplicationCollateral" onclick="btnSaveLoanApplicationCollateralOnclick()"><i class="fa fa-save fa-fw"></i> Save</button>
                    <button class="btn btn-danger" id="btnCloseLoanApplicationCollateral" data-dismiss="modal"><i class="fa fa-close fa-fw"></i> Close</button>
                </div>
            </div>
        </div>
    </div>

    <!-- delete confirmation Loan Application Collateral modal -->
    <div class="modal fade" id="deleteConfirmationLoanApplicationCollateralModal" role="dialog">
        <div class="modal-dialog modal-sm">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Delete Collateral</h4>
                </div>
                <div class="modal-body">
                    Are you sure that you want to delete this Applicant's Collateral?
                </div>
                <div class="modal-footer">
                    <button class="btn btn-default" id="btnConfirmDeleteLoanApplicationCollateral" onclick="btnConfirmDeleteLoanApplicationCollateralOnclick()">Yes</button>
                    <button class="btn btn-default" id="btnCloseDeleteLoanApplicationCollateralModal" data-dismiss="modal">No</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Footer -->
    @Html.Partial("HomeFooter")

    <!-- Scripts -->
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    <script type="text/javascript">
        // Global Variables
        var loanApplicationLoanDate;
        var loanApplicationMaturityDate;
        var cboLoanApplicationAccount;
        var cboloanApplicationApplicant;
        var cboloanApplicationCollector;
        var cboloanApplicationPreparedBy;
        var loanApplicationCollectionView;
        var loanApplicationsFlexGrid;
        var isLocked = false;
        var loanApplicationId = 0;
        var loanRequirementCollectionView;
        var loanRequirementFlexGrid;
        var expirationDate;
        var cboRequirementName;
        var loanRequirementId = 0;
        var loanApplicationCollateralCollectionView;
        var loanApplicationCollateralFlexGrid;
        var loanApplicationCollateralId = 0;

        // create loan Application Loan Date
        function createloanApplicationLoanDate() {
            loanApplicationLoanDate = new wijmo.input.InputDate('#loanApplicationLoanDate', {
                format: 'MM-dd-yyyy',
                value: new Date(),
                mask: '99-99-9999'
            });

            createloanApplicationMaturityDate();
        }

        // create loan Application Maturity Date
        function createloanApplicationMaturityDate() {
            loanApplicationMaturityDate = new wijmo.input.InputDate('#loanApplicationMaturityDate', {
                format: 'MM-dd-yyyy',
                value: new Date(),
                mask: '99-99-9999'
            });

            cboloanApplicationApplicant = new wijmo.input.ComboBox('#loanApplicationApplicant');
            getApplicant();
        }

        // get applicant
        function getApplicant() {
            var applicantArray = new Array();
            $.ajax({
                url: '/api/applicant/list',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (applicantResults) {
                    var disabled = true;
                    if (applicantResults.length > 0) {
                        for (i = 0; i < applicantResults.length; i++) {
                            applicantArray.push({
                                Id: applicantResults[i]["Id"],
                                ApplicantFullName: applicantResults[i]["ApplicantFullName"],
                            });
                        }

                        disabled = false;

                        cboLoanApplicationAccount = new wijmo.input.ComboBox('#cboLoanApplicationAccount');
                        getAccount();
                    } else {
                        cboLoanApplicationAccount = new wijmo.input.ComboBox('#cboLoanApplicationAccount');
                        getAccount();
                    }

                    cboloanApplicationApplicant.dispose();
                    cboloanApplicationApplicant = new wijmo.input.ComboBox('#loanApplicationApplicant', {
                        disabled: disabled,
                        placeholder: "Select",
                        itemsSource: applicantArray,
                        isEditable: false,
                        required: true,
                        displayMemberPath: "ApplicantFullName",
                        selectedValuePath: "ApplicantFullName"
                    });
                }
            });
        }

        // get account
        function getAccount() {
            var accountArray = new Array();
            $.ajax({
                url: '/api/account/listAccountTransactionTypeId/1',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (accountResults) {
                    var disabled = true;
                    if (accountResults.length > 0) {
                        for (i = 0; i < accountResults.length; i++) {
                            accountArray.push({
                                Id: accountResults[i]["Id"],
                                Account: accountResults[i]["Account"],
                            });
                        }
                        disabled = false;

                        cboloanApplicationPreparedBy = new wijmo.input.ComboBox('#loanApplicationPreparedBy');
                        getUser();
                    } else {
                        cboloanApplicationPreparedBy = new wijmo.input.ComboBox('#loanApplicationPreparedBy');
                        getUser();
                    }

                    cboLoanApplicationAccount.dispose();
                    cboLoanApplicationAccount = new wijmo.input.ComboBox('#cboLoanApplicationAccount', {
                        disabled: disabled,
                        placeholder: "Select",
                        itemsSource: accountArray,
                        isEditable: false,
                        required: true,
                        displayMemberPath: "Account",
                        selectedValuePath: "Account"
                    });
                }
            });
        }

        // get users
        function getUser() {
            var userArray = new Array();
            $.ajax({
                url: '/api/user/list',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (userrResults) {
                    var disabled = true;
                    if (userrResults.length > 0) {
                        for (i = 0; i < userrResults.length; i++) {
                            userArray.push({
                                Id: userrResults[i]["Id"],
                                FullName: userrResults[i]["FullName"],
                            });
                        }

                        disabled = false;

                        getLoanApplicationById();
                    } else {
                        getLoanApplicationById();
                    }

                    cboloanApplicationPreparedBy.dispose();
                    cboloanApplicationPreparedBy = new wijmo.input.ComboBox('#loanApplicationPreparedBy', {
                        disabled: disabled,
                        placeholder: "Select",
                        itemsSource: userArray,
                        isEditable: false,
                        required: true,
                        displayMemberPath: "FullName",
                        selectedValuePath: "FullName"
                    });
                }
            });
        }

        // get loan application by id
        function getLoanApplicationById() {
            $.ajax({
                url: '/api/loanApplication/getById/' + getUrlParameter("id"),
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (loanApplicationResult) {
                    if (loanApplicationResult != null) {
                        document.getElementById("loanApplicationNumber").disabled = true;
                        document.getElementById('loanApplicationProcessingFee').disabled = true;
                        document.getElementById("loanApplicationNumber").value = loanApplicationResult.LoanNumber;
                        loanApplicationLoanDate.value = new Date(loanApplicationResult.LoanDate);
                        loanApplicationMaturityDate.value = new Date(loanApplicationResult.MaturityDate);
                        cboLoanApplicationAccount.selectedValue = loanApplicationResult.Account;
                        cboloanApplicationApplicant.selectedValue = loanApplicationResult.Applicant;
                        document.getElementById("loanApplicationParticulars").value = loanApplicationResult.Particulars;
                        cboloanApplicationPreparedBy.selectedValue = loanApplicationResult.PreparedByUser;
                        document.getElementById('loanApplicationPrincipalAmount').value = loanApplicationResult.Principal.toLocaleString();
                        document.getElementById('loanApplicationProcessingFee').value = loanApplicationResult.ProcessingFee.toLocaleString();
                        document.getElementById('loanApplicationPassbook').value = loanApplicationResult.Passbook.toLocaleString();
                        document.getElementById('loanApplicationBalance').value = loanApplicationResult.Balance.toLocaleString();
                        document.getElementById('loanApplicationPenalty').value = loanApplicationResult.Penalty.toLocaleString();
                        document.getElementById('loanApplicationLateInt').value = loanApplicationResult.LateInt.toLocaleString();
                        document.getElementById('loanApplicationAdvance').value = loanApplicationResult.Advance.toLocaleString();
                        document.getElementById('loanApplicationRequirements').value = loanApplicationResult.Requirements.toLocaleString();
                        document.getElementById('loanApplicationInsuranceIPIorPPI').value = loanApplicationResult.InsuranceIPIorPPI.toLocaleString();
                        document.getElementById('loanApplicationTotalNetAmount').value = loanApplicationResult.NetAmount.toLocaleString();
                        document.getElementById('stampCreatedBy').innerHTML = loanApplicationResult.CreatedByUser;
                        document.getElementById('stampCreatedDate').innerHTML = loanApplicationResult.CreatedDateTime;
                        document.getElementById('stampUpdatedBy').innerHTML = loanApplicationResult.UpdatedByUser;
                        document.getElementById('stampUpdatedDate').innerHTML = loanApplicationResult.UpdatedDateTime;

                        if (loanApplicationResult.IsLocked == true) {
                            $("#btnLock").prop("disabled", true);
                            loanApplicationLoanDate.disabled = true;
                            loanApplicationMaturityDate.disabled = true;
                            cboLoanApplicationAccount.disabled = true;
                            cboloanApplicationApplicant.disabled = true;
                            cboloanApplicationPreparedBy.disabled = true;
                            document.getElementById("loanApplicationParticulars").disabled = true;
                            document.getElementById('loanApplicationPrincipalAmount').disabled = true;
                            document.getElementById('loanApplicationProcessingFee').disabled = true;
                            document.getElementById('loanApplicationPassbook').disabled = true;
                            document.getElementById('loanApplicationBalance').disabled = true;
                            document.getElementById('loanApplicationPenalty').disabled = true;
                            document.getElementById('loanApplicationLateInt').disabled = true;
                            document.getElementById('loanApplicationAdvance').disabled = true;
                            document.getElementById('loanApplicationRequirements').disabled = true;
                            document.getElementById('loanApplicationInsuranceIPIorPPI').disabled = true;
                            document.getElementById('loanApplicationTotalNetAmount').disabled = true;
                            $("#btnAddLoanRequirements").prop("disabled", true);
                            $("#btnAddLoanApplicationCollateral").prop("disabled", true);
                            isLocked = true;
                        } else {
                            $("#btnUnlock").prop("disabled", true);
                            $("#btnPrint").prop("disabled", true);
                        }

                        createFlexGridForLoanApplicationCollateral();
                    } else {
                        alert("The record you'd requested has no data");
                        window.history.back();
                    }
                }
            });
        }

        // form input validation
        function inputValidationForLoanApplication() {
            var isValid = true;
            $('.requiredLoanApplication').each(function () {
                if ($.trim($(this).val()) == '') {
                    isValid = false;
                    $(this).css({
                        "border": "1px solid red"
                    });
                } else {
                    $(this).css({
                        "border": "",
                    });
                }
            });

            return isValid;
        }

        // lock loan
        function btnLockOnClick() {
            if (inputValidationForLoanApplication()) {
                $("#btnLock").prop("disabled", true);
                document.getElementById("btnLock").innerHTML = "<i class='fa fa-spinner fa-spin fa-fw'></i> Locking";
                $("#btnClose").prop("disabled", true);

                var loanApplicationObject = new Object();
                loanApplicationObject.LoanDate = loanApplicationLoanDate.value;
                loanApplicationObject.MaturityDate = loanApplicationMaturityDate.value;
                loanApplicationObject.AccountId = cboLoanApplicationAccount.selectedItem["Id"];
                loanApplicationObject.ApplicantId = cboloanApplicationApplicant.selectedItem["Id"];
                loanApplicationObject.Particulars = document.getElementById("loanApplicationParticulars").value;
                loanApplicationObject.PreparedByUserId = cboloanApplicationPreparedBy.selectedItem["Id"];
                loanApplicationObject.Principal = document.getElementById('loanApplicationPrincipalAmount').value;
                loanApplicationObject.ProcessingFee = document.getElementById('loanApplicationProcessingFee').value;
                loanApplicationObject.Passbook = document.getElementById('loanApplicationPassbook').value;
                loanApplicationObject.Balance = document.getElementById('loanApplicationBalance').value;
                loanApplicationObject.Penalty = document.getElementById('loanApplicationPenalty').value;
                loanApplicationObject.LateInt = document.getElementById('loanApplicationLateInt').value;
                loanApplicationObject.Advance = document.getElementById('loanApplicationAdvance').value;
                loanApplicationObject.Requirements = document.getElementById('loanApplicationRequirements').value;
                loanApplicationObject.InsuranceIPIorPPI = document.getElementById('loanApplicationInsuranceIPIorPPI').value;
                loanApplicationObject.NetAmount = document.getElementById('loanApplicationTotalNetAmount').value;
                var loanApplicationData = JSON.stringify(loanApplicationObject);

                $.ajax({
                    type: "PUT",
                    url: '/api/loanApplication/lock/' + getUrlParameter("id"),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    data: loanApplicationData,
                    statusCode: {
                        200: function () {
                            toastr.success("Reloading the page", "Lock Successful");
                            window.setTimeout(function () {
                                location.reload();
                            }, 1500);
                        },
                        404: function () {
                            toastr.error("Not Found");
                            $("#btnLock").prop("disabled", false);
                            document.getElementById("btnLock").innerHTML = "<i class='fa fa-lock fa-fw'></i> Lock";
                            $("#btnClose").prop("disabled", false);
                        },
                        400: function () {
                            toastr.error("Bad Request");
                            $("#btnLock").prop("disabled", false);
                            document.getElementById("btnLock").innerHTML = "<i class='fa fa-lock fa-fw'></i> Lock";
                            $("#btnClose").prop("disabled", false);
                        }
                    }
                });
            } else {
                toastr.error("Invalid Entry");
            }
        }

        // unlock loan
        function btnUnlockOnClick() {
            $("#btnUnlock").prop("disabled", true);
            $("#btnPrint").prop("disabled", true);
            $("#btnClose").prop("disabled", true);
            document.getElementById("btnUnlock").innerHTML = "<i class='fa fa-spinner fa-spin fa-fw'></i> Unlocking";

            $.ajax({
                type: "PUT",
                url: '/api/loanApplication/unlock/' + getUrlParameter("id"),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                statusCode: {
                    200: function () {
                        toastr.success("Reloading the page", "Unlock Successful");
                        window.setTimeout(function () {
                            location.reload();
                        }, 1500);
                    },
                    404: function () {
                        toastr.error("Not Found");
                        $("#btnUnlock").prop("disabled", false);
                        $("#btnPrint").prop("disabled", false);
                        $("#btnClose").prop("disabled", false);
                        document.getElementById("btnUnlock").innerHTML = "<i class='fa fa-unlock fa-fw'></i> Unlock";
                    },
                    400: function () {
                        toastr.error("Bad Request");
                        $("#btnLock").prop("disabled", false);
                        document.getElementById("btnLock").innerHTML = "<i class='fa fa-lock fa-fw'></i> Lock";
                        $("#btnClose").prop("disabled", false);
                    }
                }
            });
        }

        // get loan requirements by loan id
        function getLoanRequirementsByLoanId() {
            var loanRequirementArray = new wijmo.collections.ObservableArray;
            $.ajax({
                url: '/api/loanRequirements/listByLoanId/' + getUrlParameter("id"),
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (loanRequirementsResult) {
                    if (loanRequirementsResult.length > 0) {
                        for (i = 0; i < loanRequirementsResult.length; i++) {
                            var btnEditButton = "<button class='btn btn-primary btn-xs btn-block' onclick='btnEditLoanRequirementsOnclick()'><i class='fa fa-edit fa-fw'></i> Edit</button>";
                            var btnDeleteButton = "<button class='btn btn-danger btn-xs btn-block' onclick='btnDeleteLoanRequirementsOnclick()'><i class='fa fa-trash fa-fw'></i> Delete</button>";
                            if (isLocked) {
                                btnEditButton = "<button class='btn btn-primary btn-xs btn-block' onclick='btnEditLoanRequirementsOnclick()' disabled><i class='fa fa-edit fa-fw'></i> Edit</button>";
                                btnDeleteButton = "<button class='btn btn-danger btn-xs btn-block' onclick='btnDeleteLoanRequirementsOnclick()' disabled><i class='fa fa-trash fa-fw'></i> Delete</button>";
                            }

                            loanRequirementArray.push({
                                EditButton: btnEditButton,
                                DeleteButton: btnDeleteButton,
                                Id: loanRequirementsResult[i]["Id"],
                                LoanId: loanRequirementsResult[i]["LoanId"],
                                RequirementId: loanRequirementsResult[i]["RequirementId"],
                                Requirement: loanRequirementsResult[i]["Requirement"],
                                Note: loanRequirementsResult[i]["Note"]
                            });
                        }
                    }

                    NProgress.done();
                }
            });

            return loanRequirementArray;
        }

        // get requirements
        function getRequirements(requirementSelectedValue) {
            var requirementArray = new Array();
            $.ajax({
                url: '/api/requirements/list',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (requirementResults) {
                    var disabled = true;
                    if (requirementResults.length > 0) {
                        for (i = 0; i < requirementResults.length; i++) {
                            requirementArray.push({
                                Id: requirementResults[i]["Id"],
                                Requirement: requirementResults[i]["Requirement"],
                            });
                        }

                        disabled = false;
                    }

                    cboRequirementName.dispose();
                    cboRequirementName = new wijmo.input.ComboBox('#loanRequiremenstName', {
                        disabled: disabled,
                        placeholder: "Select",
                        itemsSource: requirementArray,
                        isEditable: false,
                        required: true,
                        displayMemberPath: "Requirement",
                        selectedValuePath: "Requirement",
                        selectedValue: requirementSelectedValue.toString()
                    });
                }
            });
        }

        // add loan requirement
        function btnAddLoanRequirementsOnclick() {
            $("#loanRequirementsEditDetailModal").modal({
                "show": true,
                "backdrop": "static"
            });

            $('.requiredLoanRequirements').each(function () {
                $(this).css({
                    "border": "",
                });
            });

            document.getElementById("btnSaveLoanRequirement").innerHTML = "<i class='fa fa-save fa-fw'></i> Save";
            $("#btnSaveLoanRequirement").prop("disabled", false);
            $("#btnCloseLoanRequirement").prop("disabled", false);

            loanRequirementId = 0;
            getRequirements("");
            document.getElementById("loanRequirementsNote").value = "NA";
        }

        // edit loan requirement
        function btnEditLoanRequirementsOnclick() {
            $("#loanRequirementsEditDetailModal").modal({
                "show": true,
                "backdrop": "static"
            });

            $('.requiredLoanRequirements').each(function () {
                $(this).css({
                    "border": "",
                });
            });

            document.getElementById("btnSaveLoanRequirement").innerHTML = "<i class='fa fa-save fa-fw'></i> Save";
            $("#btnSaveLoanRequirement").prop("disabled", false);
            $("#btnCloseLoanRequirement").prop("disabled", false);

            loanRequirementCollectionView.editItem(loanRequirementCollectionView.currentItem);
            var currentItem = loanRequirementCollectionView.currentEditItem;

            loanRequirementId = currentItem.Id;
            getRequirements(currentItem.Requirement);
            document.getElementById("loanRequirementsNote").value = currentItem.Note;
        }

        // form input validation
        function inputValidationForLoanRequirements() {
            var isValid = true;
            $('.requiredLoanRequirements').each(function () {
                if ($.trim($(this).val()) == '') {
                    isValid = false;
                    $(this).css({
                        "border": "1px solid red"
                    });
                } else {
                    $(this).css({
                        "border": "",
                    });
                }
            });

            return isValid;
        }

        // save loan requirements
        function saveLoanRequirementOnclick() {
            if (inputValidationForLoanRequirements()) {
                document.getElementById("btnSaveLoanRequirement").innerHTML = "<i class='fa fa-spinner fa-spin fa-fw'></i> Saving";
                $("#btnSaveLoanRequirement").prop("disabled", true);
                $("#btnCloseLoanRequirement").prop("disabled", true);

                var loanRequirementObject = new Object();
                loanRequirementObject.LoanId = getUrlParameter("id");
                loanRequirementObject.RequirementId = cboRequirementName.selectedItem["Id"];
                loanRequirementObject.Note = document.getElementById('loanRequirementsNote').value;
                var loanRequirementData = JSON.stringify(loanRequirementObject);

                if (loanRequirementId == 0) {
                    $.ajax({
                        type: "POST",
                        url: '/api/loanRequirements/add',
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: loanRequirementData,
                        statusCode: {
                            200: function () {
                                toastr.success("Save Successful");

                                $("#loanRequirementsEditDetailModal").modal("hide");

                                loanRequirementCollectionView = new wijmo.collections.CollectionView(getLoanRequirementsByLoanId());
                                loanRequirementFlexGrid.itemsSource = loanRequirementCollectionView;
                                loanRequirementFlexGrid.trackChanges = true;
                            },
                            404: function () {
                                toastr.error("Record Not Found");

                                $("#loanRequirementsEditDetailModal").modal("hide");

                                document.getElementById("btnSaveLoanRequirement").innerHTML = "<i class='fa fa-save fa-fw'></i> Save";
                                $("#btnSaveLoanRequirement").prop("disabled", false);
                                $("#btnCloseLoanRequirement").prop("disabled", false);
                            },
                            400: function () {
                                toastr.error("Bad Request");

                                $("#loanRequirementsEditDetailModal").modal("hide");

                                document.getElementById("btnSaveLoanRequirement").innerHTML = "<i class='fa fa-save fa-fw'></i> Save";
                                $("#btnSaveLoanRequirement").prop("disabled", false);
                                $("#btnCloseLoanRequirement").prop("disabled", false);
                            }
                        }
                    });
                } else {
                    $.ajax({
                        type: "PUT",
                        url: '/api/loanRequirements/update/' + loanRequirementId,
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: loanRequirementData,
                        statusCode: {
                            200: function () {
                                toastr.success("Update Successful");

                                $("#loanRequirementsEditDetailModal").modal("hide");

                                loanRequirementCollectionView = new wijmo.collections.CollectionView(getLoanRequirementsByLoanId());
                                loanRequirementFlexGrid.itemsSource = loanRequirementCollectionView;
                                loanRequirementFlexGrid.trackChanges = true;
                            },
                            404: function () {
                                toastr.error("Record Not Found");

                                $("#loanRequirementsEditDetailModal").modal("hide");

                                document.getElementById("btnSaveLoanRequirement").innerHTML = "<i class='fa fa-save fa-fw'></i> Save";
                                $("#btnSaveLoanRequirement").prop("disabled", false);
                                $("#btnCloseLoanRequirement").prop("disabled", false);
                            },
                            400: function () {
                                toastr.error("Bad Request");

                                $("#loanRequirementsEditDetailModal").modal("hide");

                                document.getElementById("btnSaveLoanRequirement").innerHTML = "<i class='fa fa-save fa-fw'></i> Save";
                                $("#btnSaveLoanRequirement").prop("disabled", false);
                                $("#btnCloseLoanRequirement").prop("disabled", false);
                            }
                        }
                    });
                }
            } else {
                toastr.error("Invalid Entry");
            }
        }

        // delete loan requirements
        function btnDeleteLoanRequirementsOnclick() {
            $("#deleteConfirmationLoanRequirementModal").modal({
                "show": true,
                "backdrop": "static"
            });

            document.getElementById("btnConfirmDeleteLoanRequirement").innerHTML = "Yes";
            $("#btnConfirmDeleteLoanRequirement").prop("disabled", false);
            $("#btnCloseDeleteLoanRequirementModal").prop("disabled", false);
        }
        function btnConfirmDeleteLoanRequirementOnclick() {
            document.getElementById("btnConfirmDeleteLoanRequirement").innerHTML = "<i class='fa fa-spinner fa-spin fa-fw'></i> Deleting";
            $("#btnConfirmDeleteLoanRequirement").prop("disabled", true);
            $("#btnCloseDeleteLoanRequirementModal").prop("disabled", true);

            loanRequirementCollectionView.editItem(loanRequirementCollectionView.currentItem);
            var currentItem = loanRequirementCollectionView.currentEditItem;

            $.ajax({
                type: "DELETE",
                url: '/api/loanRequirements/delete/' + currentItem.Id,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                statusCode: {
                    200: function () {
                        toastr.success("Delete Successful");

                        $("#deleteConfirmationLoanRequirementModal").modal("hide");

                        loanRequirementCollectionView = new wijmo.collections.CollectionView(getLoanRequirementsByLoanId());
                        loanRequirementFlexGrid.itemsSource = loanRequirementCollectionView;
                        loanRequirementFlexGrid.trackChanges = true;
                    },
                    404: function () {
                        toastr.error("Record Not Found");

                        $("#deleteConfirmationLoanRequirementModal").modal("hide");

                        document.getElementById("btnConfirmDeleteLoanRequirement").innerHTML = "Yes";
                        $("#btnConfirmDeleteLoanRequirement").prop("disabled", false);
                        $("#btnCloseDeleteLoanRequirementModal").prop("disabled", false);
                    },
                    400: function () {
                        toastr.error("Bad Request");

                        $("#deleteConfirmationLoanRequirementModal").modal("hide");

                        document.getElementById("btnConfirmDeleteLoanRequirement").innerHTML = "Yes";
                        $("#btnConfirmDeleteLoanRequirement").prop("disabled", false);
                        $("#btnCloseDeleteLoanRequirementModal").prop("disabled", false);
                    }
                }
            });
        }

        // create loan requirements flexgrid
        function createloanRequirementsFlexGrid() {
            cboRequirementName = new wijmo.input.ComboBox('#loanRequiremenstName');
            loanRequirementCollectionView = new wijmo.collections.CollectionView(getLoanRequirementsByLoanId());

            loanRequirementFlexGrid = new wijmo.grid.FlexGrid('#loanRequirementsFlexGrid');
            loanRequirementFlexGrid.initialize({
                columns: [
                            {
                                "header": "Edit",
                                "binding": "EditButton",
                                "width": 80,
                                "align": "center",
                                "allowResizing": false,
                                "isContentHtml": true
                            },
                            {
                                "header": "Delete",
                                "binding": "DeleteButton",
                                "width": 80,
                                "align": "center",
                                "allowResizing": false,
                                "isContentHtml": true
                            },
                            {
                                "header": "Requirement",
                                "binding": "Requirement",
                                "allowSorting": true,
                                "width": "2*",
                            },
                            {
                                "header": "Note",
                                "binding": "Note",
                                "allowSorting": true,
                                "width": "3*",
                            }
                ],
                autoGenerateColumns: false,
                itemsSource: loanRequirementCollectionView,
                isReadOnly: true,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            loanRequirementFlexGrid.trackChanges = true;
        }

        // pdf
        function btnPrintOnClick() {
            $("#btnPrint").prop("disabled", true);
            $("#btnUnlock").prop("disabled", true);
            $("#btnClose").prop("disabled", true);

            document.getElementById("btnPrint").innerHTML = "<i class='fa fa-spinner fa-spin fa-fw'></i> Generating PDF File";
            window.location = "/RepLoanApplicationCashVoucher/loanApplicationCashVoucher?loanId=" + getUrlParameter("id");
        }

        // loan application tab
        $('#loanApplicationCollateralTab').click(function () {
            NProgress.start();
            $("#loanApplicationCollateral").show();
            $("#applicantRequirements").hide();

            loanApplicationCollateralCollectionView = new wijmo.collections.CollectionView(getLoanApplicationCollateralByLoanId());
            loanApplicationCollateralFlexGrid.itemsSource = loanApplicationCollateralCollectionView;
            loanApplicationCollateralFlexGrid.trackChanges = true;
        });

        // applicant requirement tab
        $('#applicantRequirementTab').click(function () {
            NProgress.start();
            $("#loanApplicationCollateral").hide();
            $("#applicantRequirements").show();


            createloanRequirementsFlexGrid();
            window.createloanRequirementsFlexGrid = function () {
                return true;
            }

            loanRequirementCollectionView = new wijmo.collections.CollectionView(getLoanRequirementsByLoanId());
            loanRequirementFlexGrid.itemsSource = loanRequirementCollectionView;
            loanRequirementFlexGrid.trackChanges = true;
        });

        // get loan application collateral by loan id
        function getLoanApplicationCollateralByLoanId() {
            var loanApplicationCollateralArray = new wijmo.collections.ObservableArray;
            $.ajax({
                url: '/api/loanApplicationCollateral/listByLoanId/' + getUrlParameter("id"),
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (loanApplicationCollateralResults) {
                    if (loanApplicationCollateralResults.length > 0) {
                        for (i = 0; i < loanApplicationCollateralResults.length; i++) {
                            var btnEditButton = "<button class='btn btn-primary btn-xs btn-block' onclick='btnEditLoanApplicationCollateralOnclick()'><i class='fa fa-edit fa-fw'></i> Edit</button>";
                            var btnDeleteButton = "<button class='btn btn-danger btn-xs btn-block' onclick='btnDeleteLoanApplicationCollateralOnclick()'><i class='fa fa-trash fa-fw'></i> Delete</button>";
                            if (isLocked) {
                                btnEditButton = "<button class='btn btn-primary btn-xs btn-block' onclick='btnEditLoanApplicationCollateralOnclick()' disabled><i class='fa fa-edit fa-fw'></i> Edit</button>";
                                btnDeleteButton = "<button class='btn btn-danger btn-xs btn-block' onclick='btnDeleteLoanApplicationCollateralOnclick()' disabled><i class='fa fa-trash fa-fw'></i> Delete</button>";
                            }

                            loanApplicationCollateralArray.push({
                                EditButton: btnEditButton,
                                DeleteButton: btnDeleteButton,
                                Id: loanApplicationCollateralResults[i]["Id"],
                                LoanId: loanApplicationCollateralResults[i]["LoanId"],
                                Type: loanApplicationCollateralResults[i]["Type"],
                                Brand: loanApplicationCollateralResults[i]["Brand"],
                                ModelNumber: loanApplicationCollateralResults[i]["ModelNumber"],
                                SerialNumber: loanApplicationCollateralResults[i]["SerialNumber"]
                            });
                        }
                    }

                    NProgress.done();
                }
            });

            return loanApplicationCollateralArray;
        }

        // edit loan application collateral
        function btnEditLoanApplicationCollateralOnclick() {
            $("#loanApplicationCollateralEditDetailModal").modal({
                "show": true,
                "backdrop": "static"
            });

            $('.requiredLoanApplicationCollateral').each(function () {
                $(this).css({
                    "border": "",
                });
            });

            document.getElementById("btnSaveLoanApplicationCollateral").innerHTML = "<i class='fa fa-save fa-fw'></i> Save";
            $("#btnSaveLoanApplicationCollateral").prop("disabled", false);
            $("#btnCloseLoanApplicationCollateral").prop("disabled", false);

            loanApplicationCollateralCollectionView.editItem(loanApplicationCollateralCollectionView.currentItem);
            var currentItem = loanApplicationCollateralCollectionView.currentEditItem;

            loanApplicationCollateralId = currentItem.Id;
            document.getElementById('loanApplicationCollateralType').value = currentItem.Type;
            document.getElementById('loanApplicationCollateralBrand').value = currentItem.Brand;
            document.getElementById('loanApplicationCollateralModelNumber').value = currentItem.ModelNumber;
            document.getElementById('loanApplicationCollateralSerialNumber').value = currentItem.SerialNumber;
        }

        // add loan application ollateral
        function btnAddLoanApplicationCollateralOnclick() {
            $("#loanApplicationCollateralEditDetailModal").modal({
                "show": true,
                "backdrop": "static"
            });

            $('.requiredLoanApplicationCollateral').each(function () {
                $(this).css({
                    "border": "",
                });
            });

            document.getElementById("btnSaveLoanApplicationCollateral").innerHTML = "<i class='fa fa-save fa-fw'></i> Save";
            $("#btnSaveLoanApplicationCollateral").prop("disabled", false);
            $("#btnCloseLoanApplicationCollateral").prop("disabled", false);

            loanApplicationCollateralId = 0;
            document.getElementById('loanApplicationCollateralType').value = "NA";
            document.getElementById('loanApplicationCollateralBrand').value = "NA";
            document.getElementById('loanApplicationCollateralModelNumber').value = "NA";
            document.getElementById('loanApplicationCollateralSerialNumber').value = "NA";
        }

        // form input validation
        function inputValidationForLoanApplicationCollateral() {
            var isValid = true;
            $('.requiredLoanApplicationCollateral').each(function () {
                if ($.trim($(this).val()) == '') {
                    isValid = false;
                    $(this).css({
                        "border": "1px solid red"
                    });
                } else {
                    $(this).css({
                        "border": "",
                    });
                }
            });

            return isValid;
        }

        // save loan requirements
        function btnSaveLoanApplicationCollateralOnclick() {
            if (inputValidationForLoanApplicationCollateral()) {
                document.getElementById("btnSaveLoanApplicationCollateral").innerHTML = "<i class='fa fa-spinner fa-spin fa-fw'></i> Saving";
                $("#btnSaveLoanApplicationCollateral").prop("disabled", true);
                $("#btnCloseLoanApplicationCollateral").prop("disabled", true);

                var loanApplicationCollateralObject = new Object();
                loanApplicationCollateralObject.LoanId = getUrlParameter("id");
                loanApplicationCollateralObject.Type = document.getElementById('loanApplicationCollateralType').value;
                loanApplicationCollateralObject.Brand = document.getElementById('loanApplicationCollateralBrand').value;
                loanApplicationCollateralObject.ModelNumber = document.getElementById('loanApplicationCollateralModelNumber').value;
                loanApplicationCollateralObject.SerialNumber = document.getElementById('loanApplicationCollateralSerialNumber').value;
                var loanApplicationCollateralData = JSON.stringify(loanApplicationCollateralObject);

                if (loanApplicationCollateralId == 0) {
                    $.ajax({
                        type: "POST",
                        url: '/api/loanApplicationCollateral/add',
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: loanApplicationCollateralData,
                        statusCode: {
                            200: function () {
                                toastr.success("Save Successful");

                                $("#loanApplicationCollateralEditDetailModal").modal("hide");

                                loanApplicationCollateralCollectionView = new wijmo.collections.CollectionView(getLoanApplicationCollateralByLoanId());
                                loanApplicationCollateralFlexGrid.itemsSource = loanApplicationCollateralCollectionView;
                                loanApplicationCollateralFlexGrid.trackChanges = true;
                            },
                            404: function () {
                                toastr.error("Record Not Found");

                                $("#loanRequirementsEditDetailModal").modal("hide");

                                document.getElementById("btnSaveLoanApplicationCollateral").innerHTML = "<i class='fa fa-save fa-fw'></i> Save";
                                $("#btnSaveLoanApplicationCollateral").prop("disabled", false);
                                $("#btnCloseLoanApplicationCollateral").prop("disabled", false);
                            },
                            400: function () {
                                toastr.error("Bad Request");

                                $("#loanRequirementsEditDetailModal").modal("hide");

                                document.getElementById("btnSaveLoanApplicationCollateral").innerHTML = "<i class='fa fa-save fa-fw'></i> Save";
                                $("#btnSaveLoanApplicationCollateral").prop("disabled", false);
                                $("#btnCloseLoanApplicationCollateral").prop("disabled", false);
                            }
                        }
                    });
                } else {
                    $.ajax({
                        type: "PUT",
                        url: '/api/loanApplicationCollateral/update/' + loanApplicationCollateralId,
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: loanApplicationCollateralData,
                        statusCode: {
                            200: function () {
                                toastr.success("Update Successful");

                                $("#loanApplicationCollateralEditDetailModal").modal("hide");

                                loanApplicationCollateralCollectionView = new wijmo.collections.CollectionView(getLoanApplicationCollateralByLoanId());
                                loanApplicationCollateralFlexGrid.itemsSource = loanApplicationCollateralCollectionView;
                                loanApplicationCollateralFlexGrid.trackChanges = true;
                            },
                            404: function () {
                                toastr.error("Record Not Found");

                                $("#loanRequirementsEditDetailModal").modal("hide");

                                document.getElementById("btnSaveLoanApplicationCollateral").innerHTML = "<i class='fa fa-save fa-fw'></i> Save";
                                $("#btnSaveLoanApplicationCollateral").prop("disabled", false);
                                $("#btnCloseLoanApplicationCollateral").prop("disabled", false);
                            },
                            400: function () {
                                toastr.error("Bad Request");

                                $("#loanRequirementsEditDetailModal").modal("hide");

                                document.getElementById("btnSaveLoanApplicationCollateral").innerHTML = "<i class='fa fa-save fa-fw'></i> Save";
                                $("#btnSaveLoanApplicationCollateral").prop("disabled", false);
                                $("#btnCloseLoanApplicationCollateral").prop("disabled", false);
                            }
                        }
                    });
                }
            } else {
                toastr.error("Invalid Entry");
            }
        }

        // delete loan application collateral
        function btnDeleteLoanApplicationCollateralOnclick() {
            $("#deleteConfirmationLoanApplicationCollateralModal").modal({
                "show": true,
                "backdrop": "static"
            });

            document.getElementById("btnConfirmDeleteLoanApplicationCollateral").innerHTML = "Yes";
            $("#btnConfirmDeleteLoanApplicationCollateral").prop("disabled", false);
            $("#btnCloseDeleteLoanApplicationCollateralModal").prop("disabled", false);
        }
        function btnConfirmDeleteLoanApplicationCollateralOnclick() {
            document.getElementById("btnConfirmDeleteLoanApplicationCollateral").innerHTML = "<i class='fa fa-spinner fa-spin fa-fw'></i> Deleting";
            $("#btnConfirmDeleteLoanApplicationCollateral").prop("disabled", true);
            $("#btnCloseDeleteLoanApplicationCollateralModal").prop("disabled", true);

            loanApplicationCollateralCollectionView.editItem(loanApplicationCollateralCollectionView.currentItem);
            var currentItem = loanApplicationCollateralCollectionView.currentEditItem;

            $.ajax({
                type: "DELETE",
                url: '/api/loanApplicationCollateral/delete/' + currentItem.Id,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                statusCode: {
                    200: function () {
                        toastr.success("Delete Successful");

                        $("#deleteConfirmationLoanApplicationCollateralModal").modal("hide");

                        loanApplicationCollateralCollectionView = new wijmo.collections.CollectionView(getLoanApplicationCollateralByLoanId());
                        loanApplicationCollateralFlexGrid.itemsSource = loanApplicationCollateralCollectionView;
                        loanApplicationCollateralFlexGrid.trackChanges = true;
                    },
                    404: function () {
                        toastr.error("Record Not Found");

                        $("#deleteConfirmationLoanApplicationCollateralModal").modal("hide");

                        document.getElementById("btnConfirmDeleteLoanApplicationCollateral").innerHTML = "Yes";
                        $("#btnConfirmDeleteLoanApplicationCollateral").prop("disabled", false);
                        $("#btnCloseDeleteLoanApplicationCollateralModal").prop("disabled", false);
                    },
                    400: function () {
                        toastr.error("Bad Request");

                        $("#deleteConfirmationLoanApplicationCollateralModal").modal("hide");

                        document.getElementById("btnConfirmDeleteLoanApplicationCollateral").innerHTML = "Yes";
                        $("#btnConfirmDeleteLoanApplicationCollateral").prop("disabled", false);
                        $("#btnCloseDeleteLoanApplicationCollateralModal").prop("disabled", false);
                    }
                }
            });
        }

        // create flexgrid for loan application collateral
        function createFlexGridForLoanApplicationCollateral() {
            loanApplicationCollateralCollectionView = new wijmo.collections.CollectionView(getLoanApplicationCollateralByLoanId());

            loanApplicationCollateralFlexGrid = new wijmo.grid.FlexGrid('#loanApplicationCollateralFlexGrid');
            loanApplicationCollateralFlexGrid.initialize({
                columns: [
                            {
                                "header": "Edit",
                                "binding": "EditButton",
                                "width": 80,
                                "align": "center",
                                "allowResizing": false,
                                "isContentHtml": true
                            },
                            {
                                "header": "Delete",
                                "binding": "DeleteButton",
                                "width": 80,
                                "align": "center",
                                "allowResizing": false,
                                "isContentHtml": true
                            },
                            {
                                "header": "Type",
                                "binding": "Type",
                                "allowSorting": true,
                                "width": "3*",
                            },
                            {
                                "header": "Brand",
                                "binding": "Brand",
                                "allowSorting": true,
                                "width": "3*",
                            },
                            {
                                "header": "Model Number",
                                "binding": "ModelNumber",
                                "allowSorting": true,
                                "width": "2*",
                            },
                            {
                                "header": "Serial Number",
                                "binding": "SerialNumber",
                                "allowSorting": true,
                                "width": "2*",
                            }
                ],
                autoGenerateColumns: false,
                itemsSource: loanApplicationCollateralCollectionView,
                isReadOnly: true,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            loanApplicationCollateralFlexGrid.trackChanges = true;
        }

        // on load page
        window.onload = function () {
            NProgress.start();
            toastrModification();
            createloanApplicationLoanDate();
        }

        // jqueries codes
        $('#loanApplicationPrincipalAmount').keyup(function () {
            var principalAmountValue = document.getElementById('loanApplicationPrincipalAmount').value.replace(/\,/g, '');
            var passbookValue = document.getElementById('loanApplicationPassbook').value.replace(/\,/g, '');
            var balanceValue = document.getElementById('loanApplicationBalance').value.replace(/\,/g, '');
            var penaltyValue = document.getElementById('loanApplicationPenalty').value.replace(/\,/g, '');
            var lateIntValue = document.getElementById('loanApplicationLateInt').value.replace(/\,/g, '');
            var advanceValue = document.getElementById('loanApplicationAdvance').value.replace(/\,/g, '');
            var requirementsValue = document.getElementById('loanApplicationRequirements').value.replace(/\,/g, '');
            var insuranceIPIorPPIValue = document.getElementById('loanApplicationInsuranceIPIorPPI').value.replace(/\,/g, '');

            document.getElementById('loanApplicationProcessingFee').value = (principalAmountValue * 0.03).toLocaleString();

            setTimeout(function () {
                var totalLoanAmountDeductions = principalAmountValue - (principalAmountValue * 0.03) - passbookValue - balanceValue - penaltyValue - lateIntValue - advanceValue - requirementsValue - insuranceIPIorPPIValue;
                document.getElementById('loanApplicationTotalNetAmount').value = totalLoanAmountDeductions.toLocaleString();
            }, 500);
        });
    </script>
</body>
</html>