<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <!-- Title -->
    <title>DLH - Applicant Detail</title>

    <!-- Styles -->
    @Styles.Render("~/Content/css")
</head>
<body>
    <!-- Header -->
    @Html.Partial("HomeHeader")

    <section class="software-section">
        <div class="container">
            <div class="row">
                <div class="col-lg-3">
                    <div class="list-group">
                        <a href="/Software" class="list-group-item">
                            <i class="fa fa-dashboard fa-fw"></i> &nbsp; Dashboard
                        </a>
                        <a href="/Software/ApplicantList" class="list-group-item">
                            <i class="fa fa-users fa-fw"></i> &nbsp; Applicant
                        </a>
                        <a href="/Software/LoanApplicationList" class="list-group-item active">
                            <i class="fa fa-file-text-o fa-fw"></i> &nbsp; Loan
                        </a>
                        <a href="/Software/CollectionList" class="list-group-item">
                            <i class="fa fa-money fa-fw"></i> &nbsp; Collection
                        </a>
                        <a href="#" class="list-group-item"><i class="fa fa-credit-card fa-fw"></i> &nbsp; Disbursement</a>
                        <a href="/Software/Tables" class="list-group-item">
                            <i class="fa fa-table fa-fw"></i> &nbsp; Tables
                        </a>
                        <a href="#" class="list-group-item">
                            <i class="fa fa-print fa-fw"></i> &nbsp; Reports
                        </a>
                        <a href="/Software/CompanyList" class="list-group-item">
                            <i class="fa fa-building fa-fw"></i> &nbsp; Company
                        </a>
                        <a href="#" class="list-group-item"><i class="fa fa-key fa-fw"></i> &nbsp; Users</a>
                        <a href="#" class="list-group-item"><i class="fa fa-gears fa-fw"></i> &nbsp; Settings</a>
                    </div>
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            User security stamp
                        </div>
                        <div class="panel-body">
                            <p>Created by:</p>
                            <div style="padding-left: 10px;">
                                <i class="fa fa-key fa-fw"></i> <label id="stampCreatedBy">NA</label>
                                <br />
                                <small><i class="fa fa-calendar fa-fw"></i> &nbsp;<span id="stampCreatedDate">mm/dd/yyyy</span></small>
                            </div>
                            <hr />
                            <p>Updated by:</p>
                            <div style="padding-left: 10px;">
                                <i class="fa fa-key fa-fw"></i> <label id="stampUpdatedBy">NA</label>
                                <br />
                                <small><i class="fa fa-calendar fa-fw"></i> &nbsp;<span id="stampUpdatedDate">mm/dd/yyyy</span></small>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-lg-9">
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            <table style="width: 100%">
                                <tr>
                                    <td>
                                        <h4>Loan Detail</h4>
                                    </td>
                                    <td align="right">
                                        <button class="btn btn-primary" id="btnLock" onclick="btnLockOnClick()">
                                            <i class="fa fa-lock fa-fw"></i> Lock
                                        </button>
                                        <button class="btn btn-primary" id="btnUnlock" onclick="btnUnlockOnClick()">
                                            <i class="fa fa-unlock fa-fw"></i> Unlock
                                        </button>
                                        <button class="btn btn-primary" id="btnPrint" onclick="btnPrintOnClick()">
                                            <i class="fa fa-file-pdf-o fa-fw"></i> PDF
                                        </button>
                                        <button class="btn btn-danger" id="btnClose" onclick="window.location = '/Software/LoanApplicationList'">
                                            <i class="fa fa-close fa-fw"></i> Close
                                        </button>
                                    </td>
                                </tr>
                            </table>
                        </div>
                        <div class="panel-body">
                            <dl class="dl-horizontal">
                                <dt>Loan Number</dt>
                                <dd><input type="text" class="form-control requiredLoanApplication" id="loanApplicationNumber" placeholder="Loan Number" /></dd>
                                <dt>Loan Date</dt>
                                <dd><div id="loanApplicationLoanDate"></div> &nbsp; <span id="loanApplicationLoanDateString"></span></dd>
                                <dt>Maturity Date</dt>
                                <dd><div id="loanApplicationMaturityDate"></div> &nbsp; <span id="loanApplicationMaturityDateString"></span></dd>
                                <dt>Branch</dt>
                                <dd><div id="loanApplicationBranch"></div></dd>
                                <dt>Account</dt>
                                <dd><div id="loanApplicationAccount"></div></dd>
                                <dt>Applicant</dt>
                                <dd><div id="loanApplicationApplicant"></div><span style="color: red" id="noApplicant"></span></dd>
                                <dt>Area</dt>
                                <dd><div id="loanApplicationArea"></div></dd>
                                <dt>Promise</dt>
                                <dd><textarea class="form-control requiredLoanApplication" id="loanApplicationPromise" placeholder="Promise"></textarea></dd>
                                <dt>Collector</dt>
                                <dd><div id="loanApplicationCollector"></div></dd>
                                <dt>Prepared by</dt>
                                <dd><div id="loanApplicationPreparedBy"></div></dd>
                                <dt>Verified by</dt>
                                <dd><div id="loanApplicationVerifiedBy"></div></dd>
                            </dl>
                            <br />
                            <ul class="nav nav-tabs" style="background-color: #f7f7f7">
                                <li class="active"><a data-toggle="pill" href="#loanApplicationLines" id="loanApplicationLinesTab"> Loan Application Lines</a></li>
                                <li><a data-toggle="pill" href="#loanRequirements" id="loanRequirementsTab">Loan Requirements</a></li>
                            </ul>
                            <br />
                            <div class="tab-content">
                                <div id="loanApplicationLines" class="tab-pane fade in active">
                                    <div class="panel panel-default">
                                        <div class="panel-heading">
                                            <table style="width: 100%">
                                                <tr>
                                                    <td>
                                                        Loan Application Lines (Loan Amount)
                                                    </td>
                                                    <td align="right">
                                                        <button class="btn btn-primary btn-sm" id="btnAddLoanApplicationLines" onclick="btnAddLoanApplicationLinesOnclick()">
                                                            <i class="fa fa-plus fa-fw"></i> Add
                                                        </button>
                                                    </td>
                                                </tr>
                                            </table>
                                        </div>
                                        <div class="panel-body">
                                            <div id="loanApplicationLinesFlexGrid" class="grid"></div>
                                        </div>
                                        <div class="panel-footer">
                                            <table style="width: 100%" border="0">
                                                <tr>
                                                    <td width="40%">
                                                        <div class="input-group">
                                                            <span class="input-group-addon">Total Amount</span>
                                                            <span class="input-group-addon">&#8369;</span>
                                                            <input type="text" id="totalLoanAmount" class="form-control numberField" placeholder="0.00">
                                                        </div>
                                                    </td>
                                                    <td width="60%"></td>
                                                </tr>
                                            </table>
                                        </div>
                                    </div>
                                </div>
                                <div id="loanRequirements" class="tab-pane fade">
                                    <div class="panel panel-default">
                                        <div class="panel-heading">
                                            <table style="width: 100%">
                                                <tr>
                                                    <td>
                                                        Applicant Requirements
                                                    </td>
                                                    <td align="right">
                                                        <button class="btn btn-primary btn-sm" id="btnAddLoanRequirements" onclick="btnAddLoanRequirementsOnclick()">
                                                            <i class="fa fa-plus fa-fw"></i> Add
                                                        </button>
                                                    </td>
                                                </tr>
                                            </table>
                                        </div>
                                        <div class="panel-body">
                                            <div id="loanRequirementsFlexGrid" class="grid"></div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="panel-footer" align="right">
                            <button class="btn btn-primary" id="btnLockButtom" onclick="btnLockOnClick()">
                                <i class="fa fa-lock fa-fw"></i> Lock
                            </button>
                            <button class="btn btn-primary" id="btnUnlockButtom" onclick="btnUnlockOnClick()">
                                <i class="fa fa-unlock fa-fw"></i> Unlock
                            </button>
                            <button class="btn btn-primary" id="btnPrintButtom" onclick="btnPrintOnClick()">
                                <i class="fa fa-file-pdf-o fa-fw"></i> PDF
                            </button>
                            <button class="btn btn-danger" id="btnCloseButtom" onclick="window.location = '/Software/LoanApplicationList'">
                                <i class="fa fa-close fa-fw"></i> Close
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- locan application lines Detail Modal -->
    <div class="modal fade" id="loanApplicationLineEditDetailModal" role="dialog">
        <div class="modal-dialog">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Loan Application Line Detail</h4>
                </div>
                <div class="modal-body">
                    <dl class="dl-horizontal">
                        <dt>Particulars</dt>
                        <dd>
                            <textarea class="form-control requiredLoanApplicationLines" id="loanApplicationLinesParticulars" placeholder="Particulars"></textarea>
                        </dd>
                        <dt>Amount</dt>
                        <dd>
                            <div class="input-group numberField">
                                <span class="input-group-addon">&#8369;</span>
                                <input type="text" id="loanApplicationLinesAmount" class="form-control numberField requiredLoanApplicationLines" placeholder="0.00">
                            </div>
                        </dd>
                    </dl>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-primary" id="btnSaveLoanApplicationLine" onclick="saveLoanApplicationLineOnclick()"><i class="fa fa-save fa-fw"></i> Save</button>
                    <button class="btn btn-danger" id="btnCloseLoanApplicationLine" data-dismiss="modal"><i class="fa fa-close fa-fw"></i> Close</button>
                </div>
            </div>
        </div>
    </div>

    <!-- delete confirmation Loan Application Line modal -->
    <div class="modal fade" id="deleteConfirmationLoanApplicationLineModal" role="dialog">
        <div class="modal-dialog modal-sm">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Delete Loan Amount</h4>
                </div>
                <div class="modal-body">
                    Are you sure that you want to delete this Loan Application Line?
                </div>
                <div class="modal-footer">
                    <button class="btn btn-default" id="btnConfirmDeleteLoanApplicationLine" onclick="btnConfirmDeleteLoanApplicationLineOnclick()">Yes</button>
                    <button class="btn btn-default" id="btnCloseDeleteLoanApplicationLineModal" data-dismiss="modal">No</button>
                </div>
            </div>
        </div>
    </div>

    <!-- loan requirement Detail Modal -->
    <div class="modal fade" id="loanRequirementsEditDetailModal" role="dialog">
        <div class="modal-dialog">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Loan Requirement Detail</h4>
                </div>
                <div class="modal-body">
                    <dl class="dl-horizontal">
                        <dt>Requirement</dt>
                        <dd>
                            <div id="loanRequiremenstName"></div>
                        </dd>
                        <dt>Note</dt>
                        <dd>
                            <textarea class="form-control requiredLoanRequirements" id="loanRequirementsNote"></textarea>
                        </dd>
                    </dl>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-primary" id="btnSaveLoanRequirement" onclick="saveLoanRequirementOnclick()"><i class="fa fa-save fa-fw"></i> Save</button>
                    <button class="btn btn-danger" id="btnCloseLoanRequirement" data-dismiss="modal"><i class="fa fa-close fa-fw"></i> Close</button>
                </div>
            </div>
        </div>
    </div>

    <!-- delete confirmation Loan Requirement modal -->
    <div class="modal fade" id="deleteConfirmationLoanRequirementModal" role="dialog">
        <div class="modal-dialog modal-sm">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Delete Loan Requirement</h4>
                </div>
                <div class="modal-body">
                    Are you sure that you want to delete this Loan Requirement?
                </div>
                <div class="modal-footer">
                    <button class="btn btn-default" id="btnConfirmDeleteLoanRequirement" onclick="btnConfirmDeleteLoanRequirementOnclick()">Yes</button>
                    <button class="btn btn-default" id="btnCloseDeleteLoanRequirementModal" data-dismiss="modal">No</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Footer -->
    @Html.Partial("HomeFooter")

    <!-- Scripts -->
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    <script type="text/javascript">
        // Global Variables
        var loanApplicationLoanDate;
        var loanApplicationMaturityDate;
        var cboloanApplicationBranch;
        var cboloanApplicationAccount;
        var cboloanApplicationApplicant;
        var cboloanApplicationArea;
        var cboloanApplicationCollector;
        var cboloanApplicationPreparedBy;
        var cboloanApplicationVerifiedBy;
        var loanApplicationLineCollectionView;
        var loanApplicationLinesFlexGrid;
        var isLocked = false;
        var loanApplicationLineId = 0;
        var loanRequirementCollectionView;
        var loanRequirementFlexGrid;
        var expirationDate;
        var cboRequirementName;
        var loanRequirementId = 0;

        // create loan Application Loan Date
        function createloanApplicationLoanDate() {
            loanApplicationLoanDate = new wijmo.input.InputDate('#loanApplicationLoanDate', {
                format: 'MM-dd-yyyy',
                value: new Date(),
                mask: '99-99-9999',
                onValueChanged: function () {
                    var dateValue = this.value.getMonth() + 1;
                    var month = "";

                    if (dateValue == 1) {
                        month = "January";
                    } else if (dateValue == 2) {
                        month = "February";
                    } else if (dateValue == 3) {
                        month = "March";
                    } else if (dateValue == 4) {
                        month = "April";
                    } else if (dateValue == 5) {
                        month = "May";
                    } else if (dateValue == 6) {
                        month = "June";
                    } else if (dateValue == 7) {
                        month = "July";
                    } else if (dateValue == 8) {
                        month = "August";
                    } else if (dateValue == 9) {
                        month = "September";
                    } else if (dateValue == 10) {
                        month = "October";
                    } else if (dateValue == 11) {
                        month = "November";
                    } else if (dateValue == 12) {
                        month = "December";
                    } else {
                        month = "";
                    }

                    document.getElementById("loanApplicationLoanDateString").innerHTML = month + " " + this.value.getDate() + ", " + this.value.getFullYear();
                }
            });

            var dateValue = loanApplicationLoanDate.value.getMonth() + 1;
            var month = "";

            if (dateValue == 1) {
                month = "January";
            } else if (dateValue == 2) {
                month = "February";
            } else if (dateValue == 3) {
                month = "March";
            } else if (dateValue == 4) {
                month = "April";
            } else if (dateValue == 5) {
                month = "May";
            } else if (dateValue == 6) {
                month = "June";
            } else if (dateValue == 7) {
                month = "July";
            } else if (dateValue == 8) {
                month = "August";
            } else if (dateValue == 9) {
                month = "September";
            } else if (dateValue == 10) {
                month = "October";
            } else if (dateValue == 11) {
                month = "November";
            } else if (dateValue == 12) {
                month = "December";
            } else {
                month = "";
            }

            document.getElementById("loanApplicationLoanDateString").innerHTML = month + " " + loanApplicationLoanDate.value.getDate() + ", " + loanApplicationLoanDate.value.getFullYear();
            createloanApplicationMaturityDate();
        }

        // create loan Application Maturity Date
        function createloanApplicationMaturityDate() {
            loanApplicationMaturityDate = new wijmo.input.InputDate('#loanApplicationMaturityDate', {
                format: 'MM-dd-yyyy',
                value: new Date(),
                mask: '99-99-9999',
                onValueChanged: function () {
                    var dateValue = this.value.getMonth() + 1;
                    var month = "";

                    if (dateValue == 1) {
                        month = "January";
                    } else if (dateValue == 2) {
                        month = "February";
                    } else if (dateValue == 3) {
                        month = "March";
                    } else if (dateValue == 4) {
                        month = "April";
                    } else if (dateValue == 5) {
                        month = "May";
                    } else if (dateValue == 6) {
                        month = "June";
                    } else if (dateValue == 7) {
                        month = "July";
                    } else if (dateValue == 8) {
                        month = "August";
                    } else if (dateValue == 9) {
                        month = "September";
                    } else if (dateValue == 10) {
                        month = "October";
                    } else if (dateValue == 11) {
                        month = "November";
                    } else if (dateValue == 12) {
                        month = "December";
                    } else {
                        month = "";
                    }

                    document.getElementById("loanApplicationMaturityDateString").innerHTML = month + " " + this.value.getDate() + ", " + this.value.getFullYear();
                }
            });

            var dateValue = loanApplicationLoanDate.value.getMonth() + 1;
            var month = "";

            if (dateValue == 1) {
                month = "January";
            } else if (dateValue == 2) {
                month = "February";
            } else if (dateValue == 3) {
                month = "March";
            } else if (dateValue == 4) {
                month = "April";
            } else if (dateValue == 5) {
                month = "May";
            } else if (dateValue == 6) {
                month = "June";
            } else if (dateValue == 7) {
                month = "July";
            } else if (dateValue == 8) {
                month = "August";
            } else if (dateValue == 9) {
                month = "September";
            } else if (dateValue == 10) {
                month = "October";
            } else if (dateValue == 11) {
                month = "November";
            } else if (dateValue == 12) {
                month = "December";
            } else {
                month = "";
            }

            document.getElementById("loanApplicationMaturityDateString").innerHTML = month + " " + loanApplicationLoanDate.value.getDate() + ", " + loanApplicationLoanDate.value.getFullYear();
            cboloanApplicationBranch = new wijmo.input.ComboBox('#loanApplicationBranch');
            getBranch();
        }

        // get branch
        function getBranch() {
            var branchArray = new Array();
            $.ajax({
                url: '/api/branch/list',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (branchResults) {
                    var disabled = true;
                    if (branchResults.length > 0) {
                        for (i = 0; i < branchResults.length; i++) {
                            branchArray.push({
                                Id: branchResults[i]["Id"],
                                Branch: branchResults[i]["Branch"],
                            });
                        }

                        disabled = false;

                        cboloanApplicationAccount = new wijmo.input.ComboBox('#loanApplicationAccount');
                        getAccount();
                    } else {
                        cboloanApplicationAccount = new wijmo.input.ComboBox('#loanApplicationAccount');
                        getAccount();
                    }

                    cboloanApplicationBranch.dispose();
                    cboloanApplicationBranch = new wijmo.input.ComboBox('#loanApplicationBranch', {
                        disabled: disabled,
                        placeholder: "Select",
                        itemsSource: branchArray,
                        isEditable: false,
                        required: true,
                        displayMemberPath: "Branch",
                        selectedValuePath: "Branch"
                    });
                }
            });
        }

        // get account
        function getAccount() {
            var accountArray = new Array();
            $.ajax({
                url: '/api/account/list',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (accountResults) {
                    var disabled = true;
                    if (accountResults.length > 0) {
                        for (i = 0; i < accountResults.length; i++) {
                            accountArray.push({
                                Id: accountResults[i]["Id"],
                                Account: accountResults[i]["Account"],
                            });
                        }

                        disabled = false;

                        cboloanApplicationApplicant = new wijmo.input.ComboBox('#loanApplicationApplicant');
                        getApplicant();
                    } else {
                        cboloanApplicationApplicant = new wijmo.input.ComboBox('#loanApplicationApplicant');
                        getApplicant();
                    }

                    cboloanApplicationAccount.dispose();
                    cboloanApplicationAccount = new wijmo.input.ComboBox('#loanApplicationAccount', {
                        disabled: disabled,
                        placeholder: "Select",
                        itemsSource: accountArray,
                        isEditable: false,
                        required: true,
                        displayMemberPath: "Account",
                        selectedValuePath: "Account"
                    });
                }
            });
        }

        // get applicant
        function getApplicant() {
            var applicantArray = new Array();
            $.ajax({
                url: '/api/applicant/listByLocked',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (applicantResults) {
                    var disabled = true;
                    if (applicantResults.length > 0) {
                        for (i = 0; i < applicantResults.length; i++) {
                            applicantArray.push({
                                Id: applicantResults[i]["Id"],
                                ApplicantFullName: applicantResults[i]["ApplicantFullName"],
                            });
                        }

                        disabled = false;

                        cboloanApplicationArea = new wijmo.input.ComboBox('#loanApplicationArea');
                        getArea();
                    } else {
                        cboloanApplicationArea = new wijmo.input.ComboBox('#loanApplicationArea');
                        getArea();

                        $("#btnLock").prop("disabled", true);
                        $("#btnLockButtom").prop("disabled", true);
                        $("#btnAddLoanApplicationLines").prop("disabled", true);
                        $("#btnAddLoanRequirements").prop("disabled", true);
                        document.getElementById("noApplicant").innerHTML = "&nbsp; <i class='fa fa-info fa-fw'></i> Applicant Record is Empty or Unlocked";
                    }

                    cboloanApplicationApplicant.dispose();
                    cboloanApplicationApplicant = new wijmo.input.ComboBox('#loanApplicationApplicant', {
                        disabled: disabled,
                        placeholder: "Select",
                        itemsSource: applicantArray,
                        isEditable: false,
                        required: true,
                        displayMemberPath: "ApplicantFullName",
                        selectedValuePath: "ApplicantFullName"
                    });

                    if (applicantResults.length > 0) {
                        $('#loanApplicationApplicant').each(function () {
                            $(this).css({
                                "border": ""
                            });
                        });
                    } else {
                        $('#loanApplicationApplicant').each(function () {
                            $(this).css({
                                "border": "1px solid red"
                            });
                        });
                    }
                }
            });
        }

        // get area
        function getArea() {
            var areaArray = new Array();
            $.ajax({
                url: '/api/area/list',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (areaResults) {
                    var disabled = true;
                    if (areaResults.length > 0) {
                        for (i = 0; i < areaResults.length; i++) {
                            areaArray.push({
                                Id: areaResults[i]["Id"],
                                Area: areaResults[i]["Area"],
                            });
                        }

                        disabled = false;

                        cboloanApplicationCollector = new wijmo.input.ComboBox('#loanApplicationCollector');
                        getCollector();
                    } else {
                        cboloanApplicationCollector = new wijmo.input.ComboBox('#loanApplicationCollector');
                        getCollector();
                    }

                    cboloanApplicationArea.dispose();
                    cboloanApplicationArea = new wijmo.input.ComboBox('#loanApplicationArea', {
                        disabled: disabled,
                        placeholder: "Select",
                        itemsSource: areaArray,
                        isEditable: false,
                        required: true,
                        displayMemberPath: "Area",
                        selectedValuePath: "Area"
                    });
                }
            });
        }

        // get area
        function getCollector() {
            var collectorArray = new Array();
            $.ajax({
                url: '/api/collector/list',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (collectorResults) {
                    var disabled = true;
                    if (collectorResults.length > 0) {
                        for (i = 0; i < collectorResults.length; i++) {
                            collectorArray.push({
                                Id: collectorResults[i]["Id"],
                                Collector: collectorResults[i]["Collector"],
                            });
                        }

                        disabled = false;

                        cboloanApplicationPreparedBy = new wijmo.input.ComboBox('#loanApplicationPreparedBy');
                        cboloanApplicationVerifiedBy = new wijmo.input.ComboBox('#loanApplicationVerifiedBy');
                        getUser();
                    } else {
                        cboloanApplicationPreparedBy = new wijmo.input.ComboBox('#loanApplicationPreparedBy');
                        cboloanApplicationVerifiedBy = new wijmo.input.ComboBox('#loanApplicationVerifiedBy');
                        getUser();
                    }

                    cboloanApplicationCollector.dispose();
                    cboloanApplicationCollector = new wijmo.input.ComboBox('#loanApplicationCollector', {
                        disabled: disabled,
                        placeholder: "Select",
                        itemsSource: collectorArray,
                        isEditable: false,
                        required: true,
                        displayMemberPath: "Collector",
                        selectedValuePath: "Collector"
                    });
                }
            });
        }

        // get users
        function getUser() {
            var userArray = new Array();
            $.ajax({
                url: '/api/user/list',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (userrResults) {
                    var disabled = true;
                    if (userrResults.length > 0) {
                        for (i = 0; i < userrResults.length; i++) {
                            userArray.push({
                                Id: userrResults[i]["Id"],
                                FullName: userrResults[i]["FullName"],
                            });
                        }

                        disabled = false;

                        getLoanApplicationById();
                    } else {
                        getLoanApplicationById();
                    }

                    cboloanApplicationPreparedBy.dispose();
                    cboloanApplicationPreparedBy = new wijmo.input.ComboBox('#loanApplicationPreparedBy', {
                        disabled: disabled,
                        placeholder: "Select",
                        itemsSource: userArray,
                        isEditable: false,
                        required: true,
                        displayMemberPath: "FullName",
                        selectedValuePath: "FullName"
                    });

                    cboloanApplicationVerifiedBy.dispose();
                    cboloanApplicationVerifiedBy = new wijmo.input.ComboBox('#loanApplicationVerifiedBy', {
                        disabled: disabled,
                        placeholder: "Select",
                        itemsSource: userArray,
                        isEditable: false,
                        required: true,
                        displayMemberPath: "FullName",
                        selectedValuePath: "FullName"
                    });
                }
            });
        }

        // get loan application by id
        function getLoanApplicationById() {
            $.ajax({
                url: '/api/loanApplication/getById/' + getUrlParameter("id"),
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (loanApplicationResult) {
                    if (loanApplicationResult != null) {
                        document.getElementById("loanApplicationNumber").disabled = true;
                        document.getElementById("loanApplicationNumber").value = loanApplicationResult.LoanNumber;
                        loanApplicationLoanDate.value = new Date(loanApplicationResult.LoanDate);
                        loanApplicationMaturityDate.value = new Date(loanApplicationResult.MaturityDate);
                        cboloanApplicationBranch.selectedValue = loanApplicationResult.Branch;
                        cboloanApplicationAccount.selectedValue = loanApplicationResult.Account;
                        cboloanApplicationApplicant.selectedValue = loanApplicationResult.Applicant;
                        cboloanApplicationArea.selectedValue = loanApplicationResult.Area;
                        document.getElementById("loanApplicationPromise").value = loanApplicationResult.Promises;
                        cboloanApplicationCollector.selectedValue = loanApplicationResult.Collector;
                        cboloanApplicationPreparedBy.selectedValue = loanApplicationResult.PreparedByUser;
                        cboloanApplicationVerifiedBy.selectedValue = loanApplicationResult.VerifiedByUser;
                        document.getElementById('stampCreatedBy').innerHTML = loanApplicationResult.CreatedByUser;
                        document.getElementById('stampCreatedDate').innerHTML = loanApplicationResult.CreatedDateTime;
                        document.getElementById('stampUpdatedBy').innerHTML = loanApplicationResult.UpdatedByUser;
                        document.getElementById('stampUpdatedDate').innerHTML = loanApplicationResult.UpdatedDateTime;

                        if (loanApplicationResult.IsLocked == true) {
                            $("#btnLock").prop("disabled", true);
                            $("#btnLockButtom").prop("disabled", true);

                            loanApplicationLoanDate.disabled = true;
                            loanApplicationMaturityDate.disabled = true;
                            cboloanApplicationBranch.disabled = true;
                            cboloanApplicationAccount.disabled = true;
                            cboloanApplicationApplicant.disabled = true;
                            cboloanApplicationArea.disabled = true;
                            cboloanApplicationCollector.disabled = true;
                            cboloanApplicationPreparedBy.disabled = true;
                            cboloanApplicationVerifiedBy.disabled = true;
                            document.getElementById("loanApplicationPromise").disabled = true;
                            $("#btnAddLoanApplicationLines").prop("disabled", true);
                            $("#btnAddLoanRequirements").prop("disabled", true);
                            isLocked = true;
                        } else {
                            $("#btnUnlock").prop("disabled", true);
                            $("#btnPrint").prop("disabled", true);
                            $("#btnUnlockButtom").prop("disabled", true);
                            $("#btnPrintButtom").prop("disabled", true);
                        }

                        createloanApplicationLinesFlexGrid();
                    } else {
                        alert("The record you'd requested has no data");
                        window.history.back();
                    }
                }
            });
        }

        // get loan application lines by loan id
        function getLoanApplicationLinesByLoanId() {
            var loanApplicationLineArray = new wijmo.collections.ObservableArray;
            $.ajax({
                url: '/api/loanApplicationLines/listByLoanId/' + getUrlParameter("id"),
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (loanApplicationLinesResult) {
                    var totalAmount = 0;
                    if (loanApplicationLinesResult.length > 0) {
                        for (i = 0; i < loanApplicationLinesResult.length; i++) {
                            var btnEditButton = "<button class='btn btn-primary btn-xs btn-block' onclick='btnEditLoanApplicationLineButtonOnclick()'><i class='fa fa-edit fa-fw'></i> Edit</button>";
                            var btnDeleteButton = "<button class='btn btn-danger btn-xs btn-block' onclick='btnDeleteLoanApplicationLineButtonOnclick()'><i class='fa fa-trash fa-fw'></i> Delete</button>";
                            if (isLocked) {
                                btnEditButton = "<button class='btn btn-primary btn-xs btn-block' onclick='btnEditLoanApplicationLineButtonOnclick()' disabled><i class='fa fa-edit fa-fw'></i> Edit</button>";
                                btnDeleteButton = "<button class='btn btn-danger btn-xs btn-block' onclick='btnDeleteLoanApplicationLineButtonOnclick()' disabled><i class='fa fa-trash fa-fw'></i> Delete</button>";
                            }

                            loanApplicationLineArray.push({
                                EditButton: btnEditButton,
                                DeleteButton: btnDeleteButton,
                                Id: loanApplicationLinesResult[i]["Id"],
                                LoanId: loanApplicationLinesResult[i]["LoanId"],
                                Particulars: loanApplicationLinesResult[i]["Particulars"],
                                Amount: loanApplicationLinesResult[i]["Amount"],
                            });
                            totalAmount += loanApplicationLinesResult[i]["Amount"];
                        }
                    }

                    document.getElementById("totalLoanAmount").disabled = true;
                    document.getElementById("totalLoanAmount").value = totalAmount.toLocaleString();
                    NProgress.done();
                }
            });
            return loanApplicationLineArray;
        }

        // add loan application lines
        function btnAddLoanApplicationLinesOnclick() {
            $("#loanApplicationLineEditDetailModal").modal({
                "show": true,
                "backdrop": "static"
            });

            $('.requiredLoanApplicationLines').each(function () {
                $(this).css({
                    "border": "",
                });
            });

            document.getElementById("btnSaveLoanApplicationLine").innerHTML = "<i class='fa fa-save fa-fw'></i> Save";
            $("#btnSaveLoanApplicationLine").prop("disabled", false);
            $("#btnCloseLoanApplicationLine").prop("disabled", false);

            loanApplicationLineId = 0;
            document.getElementById("loanApplicationLinesParticulars").value = "NA";
            document.getElementById("loanApplicationLinesAmount").value = 0;
        }

        // edit loan application lines
        function btnEditLoanApplicationLineButtonOnclick() {
            $("#loanApplicationLineEditDetailModal").modal({
                "show": true,
                "backdrop": "static"
            });

            $('.requiredLoanApplicationLines').each(function () {
                $(this).css({
                    "border": "",
                });
            });

            document.getElementById("btnSaveLoanApplicationLine").innerHTML = "<i class='fa fa-save fa-fw'></i> Save Changes";
            $("#btnSaveLoanApplicationLine").prop("disabled", false);
            $("#btnCloseLoanApplicationLine").prop("disabled", false);

            loanApplicationLineCollectionView.editItem(loanApplicationLineCollectionView.currentItem);
            var currentItem = loanApplicationLineCollectionView.currentEditItem;

            loanApplicationLineId = currentItem.Id;
            document.getElementById("loanApplicationLinesParticulars").value = currentItem.Particulars;
            document.getElementById("loanApplicationLinesAmount").value = currentItem.Amount.toLocaleString();
        }

        // form input validation
        function inputValidationForLoanApplicationLines() {
            var isValid = true;
            $('.requiredLoanApplicationLines').each(function () {
                if ($.trim($(this).val()) == '') {
                    isValid = false;
                    $(this).css({
                        "border": "1px solid red"
                    });
                } else {
                    $(this).css({
                        "border": "",
                    });
                }
            });

            return isValid;
        }

        // save loan application lines
        function saveLoanApplicationLineOnclick() {
            if (inputValidationForLoanApplicationLines()) {
                document.getElementById("btnSaveLoanApplicationLine").innerHTML = "<i class='fa fa-spinner fa-spin fa-fw'></i> Saving Changes";
                $("#btnSaveLoanApplicationLine").prop("disabled", true);
                $("#btnCloseLoanApplicationLine").prop("disabled", true);

                var loanApplicationLineObject = new Object();
                loanApplicationLineObject.LoanId = getUrlParameter("id");
                loanApplicationLineObject.Particulars = document.getElementById('loanApplicationLinesParticulars').value;
                loanApplicationLineObject.Amount = document.getElementById('loanApplicationLinesAmount').value;
                var loanApplicationLineData = JSON.stringify(loanApplicationLineObject);

                if (loanApplicationLineId == 0) {
                    $.ajax({
                        type: "POST",
                        url: '/api/loanApplicationLines/add',
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: loanApplicationLineData,
                        statusCode: {
                            200: function () {
                                toastr.success("Save Successful");

                                $("#loanApplicationLineEditDetailModal").modal("hide");

                                loanApplicationLineCollectionView = new wijmo.collections.CollectionView(getLoanApplicationLinesByLoanId());
                                loanApplicationLinesFlexGrid.itemsSource = loanApplicationLineCollectionView;
                                loanApplicationLinesFlexGrid.trackChanges = true;
                            },
                            400: function () {
                                toastr.error("Bad Request");

                                $("#loanApplicationLineEditDetailModal").modal("hide");

                                document.getElementById("btnSaveLoanApplicationLine").innerHTML = "<i class='fa fa-save fa-fw'></i> Save Changes";
                                $("#btnSaveLoanApplicationLine").prop("disabled", false);
                                $("#btnCloseLoanApplicationLine").prop("disabled", false);
                            }
                        }
                    });
                } else {
                    $.ajax({
                        type: "PUT",
                        url: '/api/loanApplicationLines/update/' + loanApplicationLineId,
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: loanApplicationLineData,
                        statusCode: {
                            200: function () {
                                toastr.success("Update Successful");

                                $("#loanApplicationLineEditDetailModal").modal("hide");

                                loanApplicationLineCollectionView = new wijmo.collections.CollectionView(getLoanApplicationLinesByLoanId());
                                loanApplicationLinesFlexGrid.itemsSource = loanApplicationLineCollectionView;
                                loanApplicationLinesFlexGrid.trackChanges = true;
                            },
                            404: function () {
                                toastr.error("Not Found");

                                $("#loanApplicationLineEditDetailModal").modal("hide");

                                document.getElementById("btnSaveLoanApplicationLine").innerHTML = "<i class='fa fa-save fa-fw'></i> Save Changes";
                                $("#btnSaveLoanApplicationLine").prop("disabled", false);
                                $("#btnCloseLoanApplicationLine").prop("disabled", false);
                            },
                            400: function () {
                                toastr.error("Bad Request");

                                $("#loanApplicationLineEditDetailModal").modal("hide");

                                document.getElementById("btnSaveLoanApplicationLine").innerHTML = "<i class='fa fa-save fa-fw'></i> Save Changes";
                                $("#btnSaveLoanApplicationLine").prop("disabled", false);
                                $("#btnCloseLoanApplicationLine").prop("disabled", false);
                            }
                        }
                    });
                }
            } else {
                toastr.error("Invalid Entry");
            }
        }

        // delete loan application lines
        function btnDeleteLoanApplicationLineButtonOnclick() {
            $("#deleteConfirmationLoanApplicationLineModal").modal({
                "show": true,
                "backdrop": "static"
            });

            document.getElementById("btnConfirmDeleteLoanApplicationLine").innerHTML = "Yes";
            $("#btnConfirmDeleteLoanApplicationLine").prop("disabled", false);
            $("#btnCloseDeleteLoanApplicationLineModal").prop("disabled", false);
        }
        function btnConfirmDeleteLoanApplicationLineOnclick() {
            document.getElementById("btnConfirmDeleteLoanApplicationLine").innerHTML = "<i class='fa fa-spinner fa-spin fa-fw'></i> Deleting";
            $("#btnConfirmDeleteLoanApplicationLine").prop("disabled", true);
            $("#btnCloseDeleteLoanApplicationLineModal").prop("disabled", true);

            loanApplicationLineCollectionView.editItem(loanApplicationLineCollectionView.currentItem);
            var currentItem = loanApplicationLineCollectionView.currentEditItem;

            $.ajax({
                type: "DELETE",
                url: '/api/loanApplicationLines/delete/' + currentItem.Id + "/" + getUrlParameter("id"),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                statusCode: {
                    200: function () {
                        toastr.success("Delete Successful");

                        $("#deleteConfirmationLoanApplicationLineModal").modal("hide");

                        loanApplicationLineCollectionView = new wijmo.collections.CollectionView(getLoanApplicationLinesByLoanId());
                        loanApplicationLinesFlexGrid.itemsSource = loanApplicationLineCollectionView;
                        loanApplicationLinesFlexGrid.trackChanges = true;
                    },
                    404: function () {
                        toastr.error("Not Found");

                        $("#deleteConfirmationLoanApplicationLineModal").modal("hide");

                        document.getElementById("btnConfirmDeleteLoanApplicationLine").innerHTML = "Yes";
                        $("#btnConfirmDeleteLoanApplicationLine").prop("disabled", false);
                        $("#btnCloseDeleteLoanApplicationLineModal").prop("disabled", false);
                    },
                    400: function () {
                        toastr.error("Bad Request");

                        $("#deleteConfirmationLoanApplicationLineModal").modal("hide");

                        document.getElementById("btnConfirmDeleteLoanApplicationLine").innerHTML = "Yes";
                        $("#btnConfirmDeleteLoanApplicationLine").prop("disabled", false);
                        $("#btnCloseDeleteLoanApplicationLineModal").prop("disabled", false);
                    }
                }
            });
        }

        // create loan application lines flexgrid
        function createloanApplicationLinesFlexGrid() {
            loanApplicationLineCollectionView = new wijmo.collections.CollectionView(getLoanApplicationLinesByLoanId());

            loanApplicationLinesFlexGrid = new wijmo.grid.FlexGrid('#loanApplicationLinesFlexGrid');
            loanApplicationLinesFlexGrid.initialize({
                columns: [
                            {
                                "header": "Edit",
                                "binding": "EditButton",
                                "width": 80,
                                "align": "center",
                                "allowResizing": false,
                                "isContentHtml": true
                            },
                            {
                                "header": "Delete",
                                "binding": "DeleteButton",
                                "width": 80,
                                "align": "center",
                                "allowResizing": false,
                                "isContentHtml": true
                            },
                            {
                                "header": "Particulars",
                                "binding": "Particulars",
                                "allowSorting": true,
                                "width": "2.5*",
                            },
                            {
                                "header": "Amount",
                                "binding": "Amount",
                                "allowSorting": true,
                                "width": "2*",
                            },
                ],
                autoGenerateColumns: false,
                itemsSource: loanApplicationLineCollectionView,
                isReadOnly: true,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            loanApplicationLinesFlexGrid.trackChanges = true;
        }

        // form input validation
        function inputValidationForLoanApplication() {
            var isValid = true;
            $('.requiredLoanApplication').each(function () {
                if ($.trim($(this).val()) == '') {
                    isValid = false;
                    $(this).css({
                        "border": "1px solid red"
                    });
                } else {
                    $(this).css({
                        "border": "",
                    });
                }
            });

            return isValid;
        }

        // lock loan
        function btnLockOnClick() {
            if (inputValidationForLoanApplication()) {
                $("#btnLock").prop("disabled", true);
                $("#btnLockButtom").prop("disabled", true);
                document.getElementById("btnLock").innerHTML = "<i class='fa fa-spinner fa-spin fa-fw'></i> Locking";
                document.getElementById("btnLockButtom").innerHTML = "<i class='fa fa-spinner fa-spin fa-fw'></i> Locking";
                $("#btnClose").prop("disabled", true);
                $("#btnCloseButtom").prop("disabled", true);
                $("#btnAddLoanApplicationLines").prop("disabled", true);

                var loanApplicationObject = new Object();
                loanApplicationObject.LoanDate = loanApplicationLoanDate.value;
                loanApplicationObject.MaturityDate = loanApplicationMaturityDate.value;
                loanApplicationObject.BranchId = cboloanApplicationBranch.selectedItem["Id"];
                loanApplicationObject.AccountId = cboloanApplicationAccount.selectedItem["Id"];
                loanApplicationObject.ApplicantId = cboloanApplicationApplicant.selectedItem["Id"];
                loanApplicationObject.AreaId = cboloanApplicationArea.selectedItem["Id"];
                loanApplicationObject.Promises = document.getElementById("loanApplicationPromise").value;
                loanApplicationObject.CollectorId = cboloanApplicationCollector.selectedItem["Id"];
                loanApplicationObject.PreparedByUserId = cboloanApplicationPreparedBy.selectedItem["Id"];
                loanApplicationObject.VerifiedByUserId = cboloanApplicationVerifiedBy.selectedItem["Id"];
                var loanApplicationData = JSON.stringify(loanApplicationObject);

                $.ajax({
                    type: "PUT",
                    url: '/api/loanApplication/lock/' + getUrlParameter("id"),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    data: loanApplicationData,
                    statusCode: {
                        200: function () {
                            toastr.success("Reloading the page", "Lock Successful");
                            window.setTimeout(function () {
                                location.reload();
                            }, 1500);
                        },
                        404: function () {
                            toastr.error("Not Found");
                            $("#btnLock").prop("disabled", false);
                            $("#btnLockButtom").prop("disabled", false);
                            document.getElementById("btnLock").innerHTML = "<i class='fa fa-lock fa-fw'></i> Lock";
                            document.getElementById("btnLockButtom").innerHTML = "<i class='fa fa-unlock fa-fw'></i> Lock";
                            $("#btnClose").prop("disabled", false);
                            $("#btnCloseButtom").prop("disabled", false);
                        },
                        400: function () {
                            toastr.error("Bad Request");
                            $("#btnLock").prop("disabled", false);
                            $("#btnLockButtom").prop("disabled", false);
                            document.getElementById("btnLock").innerHTML = "<i class='fa fa-lock fa-fw'></i> Lock";
                            document.getElementById("btnLockButtom").innerHTML = "<i class='fa fa-unlock fa-fw'></i> Lock";
                            $("#btnClose").prop("disabled", false);
                            $("#btnCloseButtom").prop("disabled", false);
                        }
                    }
                });
            } else {
                toastr.error("Invalid Entry");
            }
        }

        // unlock loan
        function btnUnlockOnClick() {
            $("#btnUnlock").prop("disabled", true);
            $("#btnPrint").prop("disabled", true);
            $("#btnUnlockButtom").prop("disabled", true);
            $("#btnPrintButtom").prop("disabled", true);
            $("#btnClose").prop("disabled", true);
            $("#btnCloseButtom").prop("disabled", true);
            document.getElementById("btnUnlock").innerHTML = "<i class='fa fa-spinner fa-spin fa-fw'></i> Unlocking";
            document.getElementById("btnUnlockButtom").innerHTML = "<i class='fa fa-spinner fa-spin fa-fw'></i> Unlocking";
            $("#btnAddLoanApplicationLines").prop("disabled", true);

            $.ajax({
                type: "PUT",
                url: '/api/loanApplication/unlock/' + getUrlParameter("id"),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                statusCode: {
                    200: function () {
                        toastr.success("Reloading the page", "Unlock Successful");
                        window.setTimeout(function () {
                            location.reload();
                        }, 1500);
                    },
                    404: function () {
                        toastr.error("Not Found");
                        $("#btnUnlock").prop("disabled", false);
                        $("#btnPrint").prop("disabled", false);
                        $("#btnUnlockButtom").prop("disabled", false);
                        $("#btnPrintButtom").prop("disabled", false);
                        $("#btnClose").prop("disabled", false);
                        $("#btnCloseButtom").prop("disabled", true);
                        document.getElementById("btnUnlock").innerHTML = "<i class='fa fa-unlock fa-fw'></i> Unlock";
                        document.getElementById("btnUnlockButtom").innerHTML = "<i class='fa fa-unlock fa-fw'></i> Unlock";
                    },
                    400: function () {
                        toastr.error("Bad Request");
                        $("#btnLock").prop("disabled", false);
                        $("#btnLockButtom").prop("disabled", false);
                        document.getElementById("btnLock").innerHTML = "<i class='fa fa-lock fa-fw'></i> Lock";
                        document.getElementById("btnLockButtom").innerHTML = "<i class='fa fa-unlock fa-fw'></i> Lock";
                        $("#btnClose").prop("disabled", false);
                        $("#btnCloseButtom").prop("disabled", false);
                    }
                }
            });
        }

        // get loan requirements by loan id
        function getLoanRequirementsByLoanId() {
            var loanRequirementArray = new wijmo.collections.ObservableArray;
            $.ajax({
                url: '/api/loanRequirements/listByLoanId/' + getUrlParameter("id"),
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (loanRequirementsResult) {
                    if (loanRequirementsResult.length > 0) {
                        for (i = 0; i < loanRequirementsResult.length; i++) {
                            var btnEditButton = "<button class='btn btn-primary btn-xs btn-block' onclick='btnEditLoanRequirementsOnclick()'><i class='fa fa-edit fa-fw'></i> Edit</button>";
                            var btnDeleteButton = "<button class='btn btn-danger btn-xs btn-block' onclick='btnDeleteLoanRequirementsOnclick()'><i class='fa fa-trash fa-fw'></i> Delete</button>";
                            if (isLocked) {
                                btnEditButton = "<button class='btn btn-primary btn-xs btn-block' onclick='btnEditLoanRequirementsOnclick()' disabled><i class='fa fa-edit fa-fw'></i> Edit</button>";
                                btnDeleteButton = "<button class='btn btn-danger btn-xs btn-block' onclick='btnDeleteLoanRequirementsOnclick()' disabled><i class='fa fa-trash fa-fw'></i> Delete</button>";
                            }

                            loanRequirementArray.push({
                                EditButton: btnEditButton,
                                DeleteButton: btnDeleteButton,
                                Id: loanRequirementsResult[i]["Id"],
                                LoanId: loanRequirementsResult[i]["LoanId"],
                                RequirementId: loanRequirementsResult[i]["RequirementId"],
                                Requirement: loanRequirementsResult[i]["Requirement"],
                                Note: loanRequirementsResult[i]["Note"]
                            });
                        }
                    }

                    NProgress.done();
                }
            });

            return loanRequirementArray;
        }

        // get requirements
        function getRequirements(requirementSelectedValue) {
            var requirementArray = new Array();
            $.ajax({
                url: '/api/requirements/list',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (requirementResults) {
                    var disabled = true;
                    if (requirementResults.length > 0) {
                        for (i = 0; i < requirementResults.length; i++) {
                            requirementArray.push({
                                Id: requirementResults[i]["Id"],
                                Requirement: requirementResults[i]["Requirement"],
                            });
                        }

                        disabled = false;
                    }

                    cboRequirementName.dispose();
                    cboRequirementName = new wijmo.input.ComboBox('#loanRequiremenstName', {
                        disabled: disabled,
                        placeholder: "Select",
                        itemsSource: requirementArray,
                        isEditable: false,
                        required: true,
                        displayMemberPath: "Requirement",
                        selectedValuePath: "Requirement",
                        selectedValue: requirementSelectedValue.toString()
                    });
                }
            });
        }

        // add loan requirement
        function btnAddLoanRequirementsOnclick() {
            $("#loanRequirementsEditDetailModal").modal({
                "show": true,
                "backdrop": "static"
            });

            $('.requiredLoanRequirements').each(function () {
                $(this).css({
                    "border": "",
                });
            });

            document.getElementById("btnSaveLoanRequirement").innerHTML = "<i class='fa fa-save fa-fw'></i> Save";
            $("#btnSaveLoanRequirement").prop("disabled", false);
            $("#btnCloseLoanRequirement").prop("disabled", false);

            loanRequirementId = 0;
            getRequirements("");
            document.getElementById("loanRequirementsNote").value = "NA";
        }

        // edit loan requirement
        function btnEditLoanRequirementsOnclick() {
            $("#loanRequirementsEditDetailModal").modal({
                "show": true,
                "backdrop": "static"
            });

            $('.requiredLoanRequirements').each(function () {
                $(this).css({
                    "border": "",
                });
            });

            document.getElementById("btnSaveLoanRequirement").innerHTML = "<i class='fa fa-save fa-fw'></i> Save Changes";
            $("#btnSaveLoanRequirement").prop("disabled", false);
            $("#btnCloseLoanRequirement").prop("disabled", false);

            loanRequirementCollectionView.editItem(loanRequirementCollectionView.currentItem);
            var currentItem = loanRequirementCollectionView.currentEditItem;

            loanRequirementId = currentItem.Id;
            getRequirements(currentItem.Requirement);
            document.getElementById("loanRequirementsNote").value = currentItem.Note;
        }

        // form input validation
        function inputValidationForLoanRequirements() {
            var isValid = true;
            $('.requiredLoanRequirements').each(function () {
                if ($.trim($(this).val()) == '') {
                    isValid = false;
                    $(this).css({
                        "border": "1px solid red"
                    });
                } else {
                    $(this).css({
                        "border": "",
                    });
                }
            });

            return isValid;
        }

        // save loan requirements
        function saveLoanRequirementOnclick() {
            if (inputValidationForLoanRequirements()) {
                document.getElementById("btnSaveLoanRequirement").innerHTML = "<i class='fa fa-spinner fa-spin fa-fw'></i> Saving Changes";
                $("#btnSaveLoanRequirement").prop("disabled", true);
                $("#btnCloseLoanRequirement").prop("disabled", true);

                var loanRequirementObject = new Object();
                loanRequirementObject.LoanId = getUrlParameter("id");
                loanRequirementObject.RequirementId = cboRequirementName.selectedItem["Id"];
                loanRequirementObject.Note = document.getElementById('loanRequirementsNote').value;
                var loanRequirementData = JSON.stringify(loanRequirementObject);

                if (loanRequirementId == 0) {
                    $.ajax({
                        type: "POST",
                        url: '/api/loanRequirements/add',
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: loanRequirementData,
                        statusCode: {
                            200: function () {
                                toastr.success("Save Successful");

                                $("#loanRequirementsEditDetailModal").modal("hide");

                                loanRequirementCollectionView = new wijmo.collections.CollectionView(getLoanRequirementsByLoanId());
                                loanRequirementFlexGrid.itemsSource = loanRequirementCollectionView;
                                loanRequirementFlexGrid.trackChanges = true;
                            },
                            400: function () {
                                toastr.error("Bad Request");

                                $("#loanRequirementsEditDetailModal").modal("hide");

                                document.getElementById("btnSaveLoanRequirement").innerHTML = "<i class='fa fa-save fa-fw'></i> Save";
                                $("#btnSaveLoanRequirement").prop("disabled", false);
                                $("#btnCloseLoanRequirement").prop("disabled", false);
                            }
                        }
                    });
                } else {
                    $.ajax({
                        type: "PUT",
                        url: '/api/loanRequirements/update/' + loanRequirementId,
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: loanRequirementData,
                        statusCode: {
                            200: function () {
                                toastr.success("Update Successful");

                                $("#loanRequirementsEditDetailModal").modal("hide");

                                loanRequirementCollectionView = new wijmo.collections.CollectionView(getLoanRequirementsByLoanId());
                                loanRequirementFlexGrid.itemsSource = loanRequirementCollectionView;
                                loanRequirementFlexGrid.trackChanges = true;
                            },
                            404: function () {
                                toastr.error("Record Not Found");

                                $("#loanRequirementsEditDetailModal").modal("hide");

                                document.getElementById("btnSaveLoanRequirement").innerHTML = "<i class='fa fa-save fa-fw'></i> Save";
                                $("#btnSaveLoanRequirement").prop("disabled", false);
                                $("#btnCloseLoanRequirement").prop("disabled", false);
                            },
                            400: function () {
                                toastr.error("Bad Request");

                                $("#loanRequirementsEditDetailModal").modal("hide");

                                document.getElementById("btnSaveLoanRequirement").innerHTML = "<i class='fa fa-save fa-fw'></i> Save";
                                $("#btnSaveLoanRequirement").prop("disabled", false);
                                $("#btnCloseLoanRequirement").prop("disabled", false);
                            }
                        }
                    });
                }
            } else {
                toastr.error("Invalid Entry");
            }
        }

        // delete loan requirements
        function btnDeleteLoanRequirementsOnclick() {
            $("#deleteConfirmationLoanRequirementModal").modal({
                "show": true,
                "backdrop": "static"
            });

            document.getElementById("btnConfirmDeleteLoanRequirement").innerHTML = "Yes";
            $("#btnConfirmDeleteLoanRequirement").prop("disabled", false);
            $("#btnCloseDeleteLoanRequirementModal").prop("disabled", false);
        }
        function btnConfirmDeleteLoanRequirementOnclick() {
            document.getElementById("btnConfirmDeleteLoanRequirement").innerHTML = "<i class='fa fa-spinner fa-spin fa-fw'></i> Deleting";
            $("#btnConfirmDeleteLoanRequirement").prop("disabled", true);
            $("#btnCloseDeleteLoanRequirementModal").prop("disabled", true);

            loanRequirementCollectionView.editItem(loanRequirementCollectionView.currentItem);
            var currentItem = loanRequirementCollectionView.currentEditItem;

            $.ajax({
                type: "DELETE",
                url: '/api/loanRequirements/delete/' + currentItem.Id,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                statusCode: {
                    200: function () {
                        toastr.success("Delete Successful");

                        $("#deleteConfirmationLoanRequirementModal").modal("hide");

                        loanRequirementCollectionView = new wijmo.collections.CollectionView(getLoanRequirementsByLoanId());
                        loanRequirementFlexGrid.itemsSource = loanRequirementCollectionView;
                        loanRequirementFlexGrid.trackChanges = true;
                    },
                    404: function () {
                        toastr.error("Record Not Found");

                        $("#deleteConfirmationLoanRequirementModal").modal("hide");

                        document.getElementById("btnConfirmDeleteLoanRequirement").innerHTML = "Yes";
                        $("#btnConfirmDeleteLoanRequirement").prop("disabled", false);
                        $("#btnCloseDeleteLoanRequirementModal").prop("disabled", false);
                    },
                    400: function () {
                        toastr.error("Bad Request");

                        $("#deleteConfirmationLoanRequirementModal").modal("hide");

                        document.getElementById("btnConfirmDeleteLoanRequirement").innerHTML = "Yes";
                        $("#btnConfirmDeleteLoanRequirement").prop("disabled", false);
                        $("#btnCloseDeleteLoanRequirementModal").prop("disabled", false);
                    }
                }
            });
        }


        // create loan requirements flexgrid
        function createloanRequirementsFlexGrid() {
            cboRequirementName = new wijmo.input.ComboBox('#loanRequiremenstName');
            loanRequirementCollectionView = new wijmo.collections.CollectionView(getLoanRequirementsByLoanId());

            loanRequirementFlexGrid = new wijmo.grid.FlexGrid('#loanRequirementsFlexGrid');
            loanRequirementFlexGrid.initialize({
                columns: [
                            {
                                "header": "Edit",
                                "binding": "EditButton",
                                "width": 80,
                                "align": "center",
                                "allowResizing": false,
                                "isContentHtml": true
                            },
                            {
                                "header": "Delete",
                                "binding": "DeleteButton",
                                "width": 80,
                                "align": "center",
                                "allowResizing": false,
                                "isContentHtml": true
                            },
                            {
                                "header": "Requirement",
                                "binding": "Requirement",
                                "allowSorting": true,
                                "width": "2*",
                            },
                            {
                                "header": "Note",
                                "binding": "Note",
                                "allowSorting": true,
                                "width": "3*",
                            }
                ],
                autoGenerateColumns: false,
                itemsSource: loanRequirementCollectionView,
                isReadOnly: true,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            loanRequirementFlexGrid.trackChanges = true;
        }

        // pdf
        function btnPrintOnClick() {
            $("#btnPrint").prop("disabled", true);
            $("#btnPrintButtom").prop("disabled", true);
            document.getElementById("btnPrint").innerHTML = "<i class='fa fa-spinner fa-spin fa-fw'></i> Generating PDF File";
            document.getElementById("btnPrintButtom").innerHTML = "<i class='fa fa-spinner fa-spin fa-fw'></i> Generating PDF File";
            window.location = "/RepLoanApplicationDetail/loanApplicationDetail?loanId=" + getUrlParameter("id");
        }

        // on load page
        window.onload = function () {
            NProgress.start();
            toastrModification();
            createloanApplicationLoanDate();
        }

        // loan Application Lines Tab
        $('#loanApplicationLinesTab').click(function () {
            NProgress.start();
            $("#loanApplicationLines").show();
            $("#loanRequirements").hide();

            loanApplicationLineCollectionView = new wijmo.collections.CollectionView(getLoanApplicationLinesByLoanId());
            loanApplicationLinesFlexGrid.itemsSource = loanApplicationLineCollectionView;
            loanApplicationLinesFlexGrid.trackChanges = true;
        });

        // loan Applicat Requirements Tab
        $('#loanRequirementsTab').click(function () {
            NProgress.start();
            $("#loanApplicationLines").hide();
            $("#loanRequirements").show();

            createloanRequirementsFlexGrid();
            window.createloanRequirementsFlexGrid = function () {
                return true;
            }

            loanRequirementCollectionView = new wijmo.collections.CollectionView(getLoanRequirementsByLoanId());
            loanRequirementFlexGrid.itemsSource = loanRequirementCollectionView;
            loanRequirementFlexGrid.trackChanges = true;
        });
    </script>
</body>
</html>