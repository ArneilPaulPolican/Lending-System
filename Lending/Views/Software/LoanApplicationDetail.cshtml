<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <link rel="shortcut icon" href="~/Images/dlhicon.ico">

    <!-- Title -->
    <title>Loan Application Detail</title>

    <!-- Styles -->
    @Styles.Render("~/Content/css")
</head>
<body>

    <div id="wrapper">
        <!-- Header -->
        @Html.Partial("SoftwareHeader")

        <div id="page-wrapper">
            <div class="container-fluid">
                <div class="row">
                    <div class="col-lg-12">
                        <h3 class="">
                            <i class="fa fa-file-text-o fa-fw"></i>  Loan Application Detail <small>Edit detail page</small>
                        </h3>
                        <ol class="breadcrumb">
                            <li>
                                <a href="/Software">Dashboard</a>
                            </li>
                            <li>
                                <a href="/Software/LoanApplicationList">Loan Application List</a>
                            </li>
                            <li class="active">
                                Loan Application Detail
                            </li>
                        </ol>
                    </div>
                </div>
                <div class="panel panel-default">
                    <div class="panel-heading" align="right">
                        <div class="dropdown">
                            <button class="btn btn-primary" id="btnLock" onclick="btnLockOnClick()">
                                <i class="fa fa-lock fa-fw"></i> Lock
                            </button>
                            <button class="btn btn-primary" id="btnUnlock" onclick="btnUnlockOnClick()">
                                <i class="fa fa-unlock fa-fw"></i> Unlock
                            </button>
                            <button class="btn btn-primary" type="button" id="btnOptions" data-toggle="dropdown">
                                <i class="fa fa-bars fa-fw"></i>
                            </button>
                            <ul class="dropdown-menu dropdown-menu-right">
                                <li class="dropdown-header">Options</li>
                                <li><a href="#" onclick="btnAddLoanApplicationOnclick()"><i class="fa fa-plus fa-fw"></i> &nbsp; New Loan</a></li>
                                <li><a href="#" onclick="btnDeleteLoanApplicationOnclick()"><i class="fa fa-trash fa-fw"></i> &nbsp; Delete</a></li>
                                <li class="divider"></li>
                                <li class="dropdown-header">Print</li>
                                <li><a href="#" onclick="btnCashVoucherOnClick()"><i class="fa fa-print fa-fw"></i> &nbsp; Cash Voucher</a></li>
                                <li><a href="#" onclick="btnCollectiblesOnClick()"><i class="fa fa-print fa-fw"></i> &nbsp; Index / Posting</a></li>
                            </ul>
                        </div>
                    </div>
                    <div class="panel-body">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="panel panel-default">
                                    <div class="panel-heading">
                                        Detail
                                    </div>
                                    <div class="panel-body">
                                        <div class="form-horizontal">
                                            <div class="form-group">
                                                <label class="control-label col-sm-4">Loan Number</label>
                                                <div class="col-sm-8">
                                                    <input type="text" class="form-control requiredLoanApplication" id="loanApplicationNumber" placeholder="Loan Number" />
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label class="control-label col-sm-4">Loan Date</label>
                                                <div class="col-sm-8">
                                                    <div id="loanApplicationLoanDate" style="width: 100%;"></div>
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label class="control-label col-sm-4">Maturity Date</label>
                                                <div class="col-sm-8">
                                                    <div id="loanApplicationMaturityDate" style="width: 100%;"></div>
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label class="control-label col-sm-4">Applicant</label>
                                                <div class="col-sm-8">
                                                    <div class="input-group">
                                                        <div id="loanApplicationApplicant" style="width: 100%;"></div>
                                                        <div class="input-group-btn">
                                                            <button class="btn btn-primary" onclick="btnApplicantDetailOnClick()">
                                                                <i class="fa fa-edit fa-fw"></i>
                                                            </button>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label class="control-label col-sm-4">Area</label>
                                                <div class="col-sm-8">
                                                    <div class="input-group">
                                                        <input type="text" class="form-control" id="loanApplicationApplicantArea" disabled />
                                                        <div class="input-group-btn">
                                                            <button class="btn btn-primary" onclick="btnAreaDetailOnClick()">
                                                                <i class="fa fa-edit fa-fw"></i>
                                                            </button>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label class="control-label col-sm-4">Particulars</label>
                                                <div class="col-sm-8">
                                                    <textarea class="form-control requiredLoanApplication" rows="5" id="loanApplicationParticulars" placeholder="Particulars"></textarea>
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label class="control-label col-sm-4">Prepared by</label>
                                                <div class="col-sm-8">
                                                    <div id="cboloanApplicationPreparedBy" style="width: 100%;"></div>
                                                </div>
                                            </div>

                                        </div>
                                    </div>
                                </div>
                                <div class="panel panel-default">
                                    <div class="panel-heading">
                                        Term
                                    </div>
                                    <div class="panel-body">
                                        <form class="form-horizontal">
                                            <div class="form-group">
                                                <label class="control-label col-sm-4">Terms</label>
                                                <div class="col-sm-8">
                                                    <div id="cboTerm" style="width: 100%;"></div>
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label class="control-label col-sm-4">Days</label>
                                                <div class="col-sm-8">
                                                    <input type="text" class="form-control numberField" id="termNoOfDays" placeholder="0.00" disabled />
                                                </div>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                                <div class="panel panel-default">
                                    <div class="panel-body">
                                        <div class="row">
                                            <div class="col-md-6">
                                                <p>Created by:</p>
                                                <div style="padding-left: 10px;">
                                                    <i class="fa fa-key fa-fw"></i> <label id="stampCreatedBy">NA</label>
                                                    <br />
                                                    <small><i class="fa fa-calendar fa-fw"></i> &nbsp;<span id="stampCreatedDate">mm/dd/yyyy</span></small>
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <p>Updated by:</p>
                                                <div style="padding-left: 10px;">
                                                    <i class="fa fa-key fa-fw"></i> <label id="stampUpdatedBy">NA</label>
                                                    <br />
                                                    <small><i class="fa fa-calendar fa-fw"></i> &nbsp;<span id="stampUpdatedDate">mm/dd/yyyy</span></small>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="panel panel-default">
                                    <div class="panel-heading">
                                        Enter Amount
                                    </div>
                                    <div class="panel-body">
                                        <form class="form-horizontal">
                                            <div class="form-group">
                                                <label class="control-label col-sm-4">Principal</label>
                                                <div class="col-sm-8">
                                                    <div class="input-group numberField">
                                                        <span class="input-group-addon">&#8369;</span>
                                                        <input type="text" class="form-control numberField requiredLoanApplication" id="loanApplicationPrincipalAmount" placeholder="0.00" />
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label class="control-label col-sm-4">Interest Name</label>
                                                <div class="col-sm-8">
                                                    <div id="cboInterest" style="width: 100%;"></div>
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label class="control-label col-sm-4">Rate</label>
                                                <div class="col-sm-8">
                                                    <div class="input-group numberField">
                                                        <span class="input-group-addon">%</span>
                                                        <input type="text" class="form-control numberField" id="interestRate" placeholder="0.00" disabled />
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label class="control-label col-sm-4">Interest</label>
                                                <div class="col-sm-8">
                                                    <div class="input-group numberField">
                                                        <span class="input-group-addon">&#8369;</span>
                                                        <input type="text" class="form-control numberField" id="interestAmount" placeholder="0.00" disabled />
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label class="control-label col-sm-4">Deduction</label>
                                                <div class="col-sm-8">
                                                    <div class="input-group numberField">
                                                        <span class="input-group-addon">&#8369;</span>
                                                        <input type="text" class="form-control numberField requiredLoanApplication" id="loanApplicationDeductionAmount" placeholder="0.00" />
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label class="control-label col-sm-4">Net</label>
                                                <div class="col-sm-8">
                                                    <div class="input-group numberField">
                                                        <span class="input-group-addon">&#8369;</span>
                                                        <input type="text" class="form-control numberField requiredLoanApplication" id="loanApplicationTotalNetAmount" placeholder="0.00" />
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label class="control-label col-sm-4">Net Collection</label>
                                                <div class="col-sm-8">
                                                    <div class="input-group numberField">
                                                        <span class="input-group-addon">&#8369;</span>
                                                        <input type="text" class="form-control numberField requiredLoanApplication" id="loanApplicationTotalNetCollectionAmount" placeholder="0.00" />
                                                    </div>
                                                </div>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                                <div class="panel panel-default">
                                    <div class="panel-heading">
                                        Calculate upon locking
                                    </div>
                                    <div class="panel-body">
                                        <form class="form-horizontal">
                                            <div class="form-group">
                                                <label class="control-label col-sm-4">Collectible</label>
                                                <div class="col-sm-8">
                                                    <div class="input-group numberField">
                                                        <span class="input-group-addon">&#8369;</span>
                                                        <input type="text" class="form-control numberField requiredLoanApplication" id="loanApplicationCollectible" placeholder="0.00" disabled />
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label class="control-label col-sm-4">Total Paid</label>
                                                <div class="col-sm-8">
                                                    <div class="input-group numberField">
                                                        <span class="input-group-addon">&#8369;</span>
                                                        <input type="text" class="form-control numberField requiredLoanApplication" id="loanApplicationTotalTotalPaid" placeholder="0.00" disabled />
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label class="control-label col-sm-4">Total Penalty</label>
                                                <div class="col-sm-8">
                                                    <div class="input-group numberField">
                                                        <span class="input-group-addon">&#8369;</span>
                                                        <input type="text" class="form-control numberField requiredLoanApplication" id="loanApplicationTotalTotalPenalty" placeholder="0.00" disabled />
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label class="control-label col-sm-4">Total Balance</label>
                                                <div class="col-sm-8">
                                                    <div class="input-group numberField">
                                                        <span class="input-group-addon">&#8369;</span>
                                                        <input type="text" class="form-control numberField requiredLoanApplication" id="loanApplicationTotalTotalBalance" placeholder="0.00" disabled />
                                                    </div>
                                                </div>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <ul id="myTab" class="nav nav-tabs">
                    <li class="active">
                        <a href="#loanDeductions" data-toggle="tab" id="loanDeductionsTab">
                            Deductions
                        </a>
                    </li>
                    <li>
                        <a href="#loanApplicationCollateral" data-toggle="tab" id="loanApplicationCollateralTab">
                            Collateral
                        </a>
                    </li>
                    <li>
                        <a href="#loanLines" data-toggle="tab" id="loanLinesTab">
                            Posting (Collection)
                        </a>
                    </li>
                    <li>
                        <a href="#loanHistory" data-toggle="tab" id="loanHistoryTab">
                            Loan History
                        </a>
                    </li>
                </ul>
                <br />
                <div id="myTabContent" class="tab-content">
                    <div class="tab-pane fade in active" id="loanDeductions">
                        <div class="panel panel-default">
                            <div class="panel-heading">
                                <table style="width: 100%">
                                    <tr>
                                        <td>
                                            Deductions
                                        </td>
                                        <td align="right">
                                            <button class="btn btn-primary " id="btnAddLoanApplicationDeduction" onclick="btnAddLoanApplicationDeductionOnclick()">
                                                <i class="fa fa-plus fa-fw"></i> Add
                                            </button>
                                        </td>
                                    </tr>
                                </table>
                            </div>
                            <div class="panel-body">
                                <div id="loanApplicationDeductionFlexGrid" class="grid"></div>
                            </div>
                            <div class="panel-footer">
                                <div class="row">
                                    <div class="btn-group col-md-7" id="naviagtionPageGridDeduction">
                                        <button type="button" class="btn btn-default border-custom" id="btnMoveToFirstPageGridDeduction">
                                            <span class="glyphicon glyphicon-fast-backward"></span> First
                                        </button>
                                        <button type="button" class="btn btn-default border-custom" id="btnMoveToPreviousPageGridDeduction">
                                            <span class="glyphicon glyphicon-step-backward"></span> Previous
                                        </button>
                                        <button type="button" class="btn btn-default border-custom" disabled style="width: 100px" id="btnCurrentPageGridDeduction"></button>
                                        <button type="button" class="btn btn-default border-custom" id="btnMoveToNextPageGridDeduction">
                                            <span class="glyphicon glyphicon-step-forward"></span> Next
                                        </button>
                                        <button type="button" class="btn btn-default border-custom" id="btnMoveToLastPageGridDeduction">
                                            <span class="glyphicon glyphicon-fast-forward"></span> Last
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="tab-pane fade in" id="loanApplicationCollateral">
                        <div class="panel panel-default">
                            <div class="panel-heading">
                                <table style="width: 100%">
                                    <tr>
                                        <td>
                                            Collateral
                                        </td>
                                        <td align="right">
                                            <button class="btn btn-primary " id="btnAddLoanApplicationCollateral" onclick="btnAddLoanApplicationCollateralOnclick()">
                                                <i class="fa fa-plus fa-fw"></i> Add
                                            </button>
                                        </td>
                                    </tr>
                                </table>
                            </div>
                            <div class="panel-body">
                                <div id="loanApplicationCollateralFlexGrid" class="grid"></div>
                            </div>
                            <div class="panel-footer">
                                <div class="row">
                                    <div class="btn-group col-md-7" id="naviagtionPageGridCollateral">
                                        <button type="button" class="btn btn-default border-custom" id="btnMoveToFirstPageGridCollateral">
                                            <span class="glyphicon glyphicon-fast-backward"></span> First
                                        </button>
                                        <button type="button" class="btn btn-default border-custom" id="btnMoveToPreviousPageGridCollateral">
                                            <span class="glyphicon glyphicon-step-backward"></span> Previous
                                        </button>
                                        <button type="button" class="btn btn-default border-custom" disabled style="width: 100px" id="btnCurrentPageGridCollateral"></button>
                                        <button type="button" class="btn btn-default border-custom" id="btnMoveToNextPageGridCollateral">
                                            <span class="glyphicon glyphicon-step-forward"></span> Next
                                        </button>
                                        <button type="button" class="btn btn-default border-custom" id="btnMoveToLastPageGridCollateral">
                                            <span class="glyphicon glyphicon-fast-forward"></span> Last
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="tab-pane fade in" id="loanLines">
                        <div class="panel panel-default">
                            <div class="panel-heading">
                                Posting (Auto-Generated)
                            </div>
                            <div class="panel-body">
                                <div id="loanLinesFlexgrid" class="grid"></div>
                            </div>
                            <div class="panel-footer">
                                <div class="row">
                                    <div class="btn-group col-md-7" id="naviagtionPageGridLoanLines">
                                        <button type="button" class="btn btn-default border-custom" id="btnMoveToFirstPageGridLoanLines">
                                            <span class="glyphicon glyphicon-fast-backward"></span> First
                                        </button>
                                        <button type="button" class="btn btn-default border-custom" id="btnMoveToPreviousPageGridLoanLines">
                                            <span class="glyphicon glyphicon-step-backward"></span> Previous
                                        </button>
                                        <button type="button" class="btn btn-default border-custom" disabled style="width: 100px" id="btnCurrentPageGridLoanLines"></button>
                                        <button type="button" class="btn btn-default border-custom" id="btnMoveToNextPageGridLoanLines">
                                            <span class="glyphicon glyphicon-step-forward"></span> Next
                                        </button>
                                        <button type="button" class="btn btn-default border-custom" id="btnMoveToLastPageGridLoanLines">
                                            <span class="glyphicon glyphicon-fast-forward"></span> Last
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div id="loanHistory" class="tab-pane fade in">
                        <div class="panel panel-default">
                            <div class="panel-heading">
                                Loan History
                            </div>
                            <div class="panel-body">
                                <div id="loanHistoryFlexgrid" class="grid"></div>
                            </div>
                            <div class="panel-footer">
                                <div class="row">
                                    <div class="btn-group col-md-7" id="naviagtionPageGridLoanHistory">
                                        <button type="button" class="btn btn-default border-custom" id="btnMoveToFirstPageGridLoanHistory">
                                            <span class="glyphicon glyphicon-fast-backward"></span> First
                                        </button>
                                        <button type="button" class="btn btn-default border-custom" id="btnMoveToPreviousPageGridLoanHistory">
                                            <span class="glyphicon glyphicon-step-backward"></span> Previous
                                        </button>
                                        <button type="button" class="btn btn-default border-custom" disabled style="width: 100px" id="btnCurrentPageGridLoanHistory"></button>
                                        <button type="button" class="btn btn-default border-custom" id="btnMoveToNextPageGridLoanHistory">
                                            <span class="glyphicon glyphicon-step-forward"></span> Next
                                        </button>
                                        <button type="button" class="btn btn-default border-custom" id="btnMoveToLastPageGridLoanHistory">
                                            <span class="glyphicon glyphicon-fast-forward"></span> Last
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- loan applciation collateral Detail Modal -->
    <div class="modal fade" id="loanApplicationCollateralEditDetailModal" role="dialog">
        <div class="modal-dialog">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Loan Applicant's Collateral Detail</h4>
                </div>
                <div class="modal-body">
                    <form class="form-horizontal">
                        <div class="form-group">
                            <label class="control-label col-sm-4">Type</label>
                            <div class="col-sm-8">
                                <input type="text" class="form-control requiredLoanApplicationCollateral" id="loanApplicationCollateralType" placeholder="Type" />
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-sm-4">Brand</label>
                            <div class="col-sm-8">
                                <input type="text" class="form-control requiredLoanApplicationCollateral" id="loanApplicationCollateralBrand" placeholder="Brand" />
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-sm-4">Model Number</label>
                            <div class="col-sm-8">
                                <input type="text" class="form-control requiredLoanApplicationCollateral" id="loanApplicationCollateralModelNumber" placeholder="Model Number" />
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-sm-4">Serial Number</label>
                            <div class="col-sm-8">
                                <input type="text" class="form-control requiredLoanApplicationCollateral" id="loanApplicationCollateralSerialNumber" placeholder="Serial Number" />
                            </div>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-primary" id="btnSaveLoanApplicationCollateral" onclick="btnSaveLoanApplicationCollateralOnclick()"><i class="fa fa-save fa-fw"></i> Save</button>
                    <button class="btn btn-danger" id="btnCloseLoanApplicationCollateral" data-dismiss="modal"><i class="fa fa-close fa-fw"></i> Close</button>
                </div>
            </div>
        </div>
    </div>

    <!-- delete confirmation Loan Application Collateral modal -->
    <div class="modal fade" id="deleteConfirmationLoanApplicationCollateralModal" role="dialog">
        <div class="modal-dialog modal-sm">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Delete Collateral</h4>
                </div>
                <div class="modal-body">
                    Delete?
                </div>
                <div class="modal-footer">
                    <button class="btn btn-danger" id="btnConfirmDeleteLoanApplicationCollateral" onclick="btnConfirmDeleteLoanApplicationCollateralOnclick()">Delete</button>
                    <button class="btn btn-default" id="btnCloseDeleteLoanApplicationCollateralModal" data-dismiss="modal">No</button>
                </div>
            </div>
        </div>
    </div>

    <!-- action loan collection modal -->
    <div class="modal fade" id="actionCollectionModal" role="dialog">
        <div class="modal-dialog modal-sm">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Actions</h4>
                </div>
                <div class="modal-body">

                </div>
                <div class="modal-footer">
                    <button class="btn btn-danger" id="" data-dismiss="modal"><i class="fa fa-close fa-fw"></i> Close</button>
                </div>
            </div>
        </div>
    </div>

    <!-- loan applciation deduction Detail Modal -->
    <div class="modal fade" id="loanApplicationDeductionEditDetailModal" role="dialog">
        <div class="modal-dialog">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Loan Deduction Detail</h4>
                </div>
                <div class="modal-body">
                    <form class="form-horizontal">
                        <div class="form-group">
                            <label class="control-label col-sm-4">Deduction</label>
                            <div class="col-sm-8">
                                <div id="cboDeduction" style="width: 100%;"></div>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-sm-4">Rate</label>
                            <div class="col-sm-8">
                                <div class="input-group numberField">
                                    <span class="input-group-addon">%</span>
                                    <input type="text" class="form-control numberField requiredPenalties" id="loanApplicationDeductionPercentageRate" placeholder="0.00" disabled />
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-sm-4">Amount</label>
                            <div class="col-sm-8">
                                <div class="input-group numberField">
                                    <span class="input-group-addon">&#8369;</span>
                                    <input type="text" class="form-control numberField requiredPenalties" id="loanApplicationDeductionDeductionAmount" placeholder="0.00" />
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-primary" id="btnSaveLoanApplicationDeduction" onclick="btnSaveLoanApplicationDeductionOnclick()"><i class="fa fa-save fa-fw"></i> Save</button>
                    <button class="btn btn-danger" id="btnCloseLoanApplicationDeduction" data-dismiss="modal"><i class="fa fa-close fa-fw"></i> Close</button>
                </div>
            </div>
        </div>
    </div>

    <!-- delete confirmation Loan Application Deduction modal -->
    <div class="modal fade" id="deleteConfirmationLoanApplicationDeductionModal" role="dialog">
        <div class="modal-dialog modal-sm">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Delete Deduction</h4>
                </div>
                <div class="modal-body">
                    Delete?
                </div>
                <div class="modal-footer">
                    <button class="btn btn-danger" id="btnConfirmDeleteLoanApplicationDeduction" onclick="btnConfirmDeleteLoanApplicationDeductionOnclick()">Delete</button>
                    <button class="btn btn-default" id="btnCloseDeleteLoanApplicationDeductionModal" data-dismiss="modal">No</button>
                </div>
            </div>
        </div>
    </div>

    <!-- note modal -->
    <div class="modal fade" id="noteModalForReconstruct" role="dialog">
        <div class="modal-dialog modal-sm">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Note</h4>
                </div>
                <div class="modal-body">
                    This current loan application was reconstructed and cannot make any changes in this form. This is no longer used in the collection process.
                </div>
                <div class="modal-footer">
                    <button class="btn btn-primary" id="" data-dismiss="modal"> Ok</button>
                </div>
            </div>
        </div>
    </div>

    <!-- delete confirmation loan application modal -->
    <div class="modal fade" id="deleteConfirmationLoanApplicationModal" role="dialog">
        <div class="modal-dialog modal-sm">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Delete Loan Application</h4>
                </div>
                <div class="modal-body">
                    Delete?
                </div>
                <div class="modal-footer">
                    <button class="btn btn-danger" id="btnConfirmDeleteLoanApplication" onclick="btnConfirmDeleteLoanApplicationOnclick()">Delete</button>
                    <button class="btn btn-default" id="btnCloseDeleteLoanApplicationModal" data-dismiss="modal">No</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Scripts -->
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    <script type="text/javascript">
        // Global Variables
        var loanApplicationLoanDate;
        var loanApplicationMaturityDate;
        var cboloanApplicationApplicant;
        var cboloanApplicationPreparedBy;
        var loanApplicationCollectionView;
        var loanApplicationsFlexGrid;
        var isLocked = false;
        var loanApplicationId = 0;
        var loanRequirementCollectionView;
        var loanRequirementFlexGrid;
        var expirationDate;
        var cboRequirementName;
        var loanRequirementId = 0;
        var loanApplicationCollateralCollectionView;
        var loanApplicationCollateralFlexGrid;
        var loanApplicationCollateralId = 0;
        var newDate = new Date();
        var loanApplicationLoanDateValue = [newDate.getMonth() + 1, newDate.getDate(), newDate.getFullYear()].join('-');
        var loanApplicationMaturityDateValue = [newDate.getMonth() + 1, newDate.getDate(), newDate.getFullYear()].join('-');
        var cboLoanNumberLogHistory;
        var cboLoanType;
        var cboTerm;
        var cboInterest;
        var loanApplicationDeductionCollectionView;
        var loanApplicationDeductionFlexGrid;
        var cboDeduction;
        var loanDeductionId = 0;
        var loanHistoryCollectionView;
        var loanHistoryFlexgrid;

        // create loan Application Loan Date
        function createloanApplicationLoanDate() {
            loanApplicationLoanDate.dispose();
            loanApplicationLoanDate = new wijmo.input.InputDate('#loanApplicationLoanDate', {
                format: 'MM-dd-yyyy',
                value: new Date(loanApplicationLoanDateValue),
                mask: '99-99-9999',
                onValueChanged: function () {
                    var thisDateValue = [this.value.getMonth() + 1, this.value.getDate(), this.value.getFullYear()].join('-');
                    loanApplicationLoanDateValue = thisDateValue;
                }
            });
        }

        // create loan Application Maturity Date
        function createloanApplicationMaturityDate() {
            loanApplicationMaturityDate.dispose();
            loanApplicationMaturityDate = new wijmo.input.InputDate('#loanApplicationMaturityDate', {
                isDisabled: true,
                format: 'MM-dd-yyyy',
                value: new Date(loanApplicationMaturityDateValue),
                mask: '99-99-9999',
                onValueChanged: function () {
                    var thisDateValue = [this.value.getMonth() + 1, this.value.getDate(), this.value.getFullYear()].join('-');
                    loanApplicationMaturityDateValue = thisDateValue;
                }
            });
        }

        // loan application loan date and maturity date
        function loanApplicationLoanDateRange() {
            loanApplicationLoanDate = new wijmo.input.InputDate('#loanApplicationLoanDate');
            createloanApplicationLoanDate();

            loanApplicationMaturityDateRange();
        }

        function loanApplicationMaturityDateRange() {
            loanApplicationMaturityDate = new wijmo.input.InputDate('#loanApplicationMaturityDate');
            createloanApplicationMaturityDate();

            cboloanApplicationApplicant = new wijmo.input.ComboBox('#loanApplicationApplicant');
            getApplicant();
        }

        // get applicant
        function getApplicant() {
            var applicantArray = new Array();
            $.ajax({
                url: '/api/applicant/list/loanApplicant',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (applicantResults) {
                    var disabled = true;
                    if (applicantResults.length > 0) {
                        for (i = 0; i < applicantResults.length; i++) {
                            applicantArray.push({
                                Id: applicantResults[i]["Id"],
                                ApplicantFullName: applicantResults[i]["ApplicantFullName"],
                                AreaId: applicantResults[i]["AreaId"],
                                Area: applicantResults[i]["Area"],
                            });
                        }

                        disabled = false;

                        cboTerm = new wijmo.input.ComboBox('#cboTerm');
                        getTerm();
                    } else {
                        cboTerm = new wijmo.input.ComboBox('#cboTerm');
                        getTerm();
                    }

                    cboloanApplicationApplicant.dispose();
                    cboloanApplicationApplicant = new wijmo.input.ComboBox('#loanApplicationApplicant', {
                        isDisabled: disabled,
                        placeholder: "Select",
                        itemsSource: applicantArray,
                        isEditable: false,
                        isRequired: true,
                        displayMemberPath: "ApplicantFullName",
                        selectedValuePath: "ApplicantFullName",
                        onSelectedIndexChanged: function () {
                            createFlexGridForLoanHistory();
                            window.createFlexGridForLoanHistory = function () {
                                return true;
                            }

                            loanHistoryCollectionView = new wijmo.collections.CollectionView(getLoanHistory());
                            loanHistoryCollectionView.pageSize = 15;

                            loanHistoryCollectionView.collectionChanged.addHandler(function (sender, args) {
                                updateNavigateButtonsLoanHistory();
                            });

                            loanHistoryFlexgrid.itemsSource = loanHistoryCollectionView;
                            loanHistoryFlexgrid.trackChanges = true;

                            document.getElementById("loanApplicationApplicantArea").value = this.selectedItem["Area"];
                        }
                    });
                }
            });
        }

        //// get users
        //function getStaff() {
        //    var staffArray = new Array();
        //    $.ajax({
        //        url: '/api/staff/list',
        //        cache: false,
        //        type: 'GET',
        //        contentType: 'application/json; charset=utf-8',
        //        data: {},
        //        success: function (staffResults) {
        //            var disabled = true;
        //            if (staffResults.length > 0) {
        //                for (i = 0; i < staffResults.length; i++) {
        //                    staffArray.push({
        //                        Id: staffResults[i]["Id"],
        //                        Staff: staffResults[i]["Staff"],
        //                    });
        //                }

        //                disabled = false;
        //            }

        //            loanApplicationReleasedBy.dispose();
        //            loanApplicationReleasedBy = new wijmo.input.ComboBox('#loanApplicationReleasedBy', {
        //                isDisabled: disabled,
        //                itemsSource: staffArray,
        //                isEditable: false,
        //                isRequired: true,
        //                displayMemberPath: "Staff",
        //                selectedValuePath: "Staff"
        //            });
        //        }
        //    });
        //}

        // get users
        function getUser() {
            var userArray = new Array();
            $.ajax({
                url: '/api/user/list',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (userrResults) {
                    var disabled = true;
                    if (userrResults.length > 0) {
                        for (i = 0; i < userrResults.length; i++) {
                            userArray.push({
                                Id: userrResults[i]["Id"],
                                FullName: userrResults[i]["FullName"],
                            });
                        }

                        disabled = false;
                    }

                    cboloanApplicationPreparedBy.dispose();
                    cboloanApplicationPreparedBy = new wijmo.input.ComboBox('#cboloanApplicationPreparedBy', {
                        isDisabled: disabled,
                        placeholder: "Select",
                        itemsSource: userArray,
                        isEditable: false,
                        isRequired: true,
                        displayMemberPath: "FullName",
                        selectedValuePath: "FullName"
                    });

                    getLoanApplicationById();
                }
            });
        }

        // get loan application by id
        function getLoanApplicationById() {
            $.ajax({
                url: '/api/loan/getById/' + getUrlParameter("id") + '/loan',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (loanApplicationResult) {
                    if (loanApplicationResult != null) {
                        document.getElementById("loanApplicationNumber").disabled = true;
                        document.getElementById('loanApplicationDeductionAmount').disabled = true;
                        document.getElementById('loanApplicationTotalNetAmount').disabled = true;
                        document.getElementById('loanApplicationTotalNetCollectionAmount').disabled = true;
                        cboloanApplicationPreparedBy.disabled = true;

                        document.getElementById("loanApplicationNumber").value = "LN-" + loanApplicationResult.LoanNumber;
                        loanApplicationLoanDate.value = new Date(loanApplicationResult.LoanDate);
                        loanApplicationMaturityDate.value = new Date(loanApplicationResult.MaturityDate);
                        cboloanApplicationApplicant.selectedValue = loanApplicationResult.Applicant;
                        document.getElementById("loanApplicationApplicantArea").value = loanApplicationResult.Area;
                        document.getElementById("loanApplicationParticulars").value = loanApplicationResult.Particulars;
                        cboloanApplicationPreparedBy.selectedValue = loanApplicationResult.PreparedByUser;
                        cboTerm.selectedValue = loanApplicationResult.Term;
                        document.getElementById("termNoOfDays").value = loanApplicationResult.TermNoOfDays;
                        document.getElementById('loanApplicationPrincipalAmount').value = loanApplicationResult.PrincipalAmount.toLocaleString();
                        cboInterest.selectedValue = loanApplicationResult.Interest;
                        document.getElementById('interestRate').value = loanApplicationResult.InterestRate.toLocaleString();
                        document.getElementById('interestAmount').value = loanApplicationResult.InterestAmount.toLocaleString();
                        document.getElementById('loanApplicationDeductionAmount').value = loanApplicationResult.DeductionAmount.toLocaleString();
                        document.getElementById('loanApplicationTotalNetAmount').value = loanApplicationResult.NetAmount.toLocaleString();
                        document.getElementById('loanApplicationTotalNetCollectionAmount').value = loanApplicationResult.NetCollectionAmount.toLocaleString();
                        document.getElementById('loanApplicationCollectible').value = loanApplicationResult.CollectibleAmount.toLocaleString();
                        document.getElementById('loanApplicationTotalTotalBalance').value = loanApplicationResult.TotalBalanceAmount.toLocaleString();
                        document.getElementById('loanApplicationTotalTotalPaid').value = loanApplicationResult.TotalPaidAmount.toLocaleString();
                        document.getElementById('loanApplicationTotalTotalPenalty').value = loanApplicationResult.TotalPenaltyAmount.toLocaleString();
                        document.getElementById('stampCreatedBy').innerHTML = loanApplicationResult.CreatedByUser;
                        document.getElementById('stampCreatedDate').innerHTML = loanApplicationResult.CreatedDateTime;
                        document.getElementById('stampUpdatedBy').innerHTML = loanApplicationResult.UpdatedByUser;
                        document.getElementById('stampUpdatedDate').innerHTML = loanApplicationResult.UpdatedDateTime;

                        if (loanApplicationResult.IsLocked == true) {
                            $("#btnLock").prop("disabled", true);

                            setTimeout(function () {
                                loanApplicationLoanDate.disabled = true;
                                loanApplicationMaturityDate.disabled = true;
                            }, 100);

                            cboloanApplicationApplicant.disabled = true;
                            cboTerm.disabled = true;
                            document.getElementById("loanApplicationParticulars").disabled = true;
                            document.getElementById('loanApplicationPrincipalAmount').disabled = true;
                            cboInterest.disabled = true;
                            $("#btnAddLoanApplicationCollateral").prop("disabled", true);
                            $("#btnAddLoanApplicationDeduction").prop("disabled", true);
                            isLocked = true;
                        } else {
                            $("#btnUnlock").prop("disabled", true);
                            $("#btnPrint").prop("disabled", true);
                        }
                    } else {
                        alert("The record you'd requested has no data");
                        window.history.back();
                    }

                    createFlexGridForLoanApplicationDeduction();
                }
            });
        }

        // form input validation
        function inputValidationForLoanApplication() {
            var isValid = true;
            $('.requiredLoanApplication').each(function () {
                if ($.trim($(this).val()) == '') {
                    isValid = false;
                    $(this).css({
                        "border": "1px solid red"
                    });
                } else {
                    $(this).css({
                        "border": "",
                    });
                }
            });

            return isValid;
        }

        // lock loan
        function btnLockOnClick() {
            if (inputValidationForLoanApplication()) {
                var netAmount = parseFloat(document.getElementById('loanApplicationTotalNetAmount').value);

                if (netAmount != 0) {

                    $("#btnLock").prop("disabled", true);
                    document.getElementById("btnLock").innerHTML = "<i class='fa fa-spinner fa-spin fa-fw'></i> Locking";
                    $("#btnClose").prop("disabled", true);
                    $("#btnOptions").prop("disabled", true);

                    var loanApplicationObject = new Object();
                    loanApplicationObject.LoanDate = loanApplicationLoanDate.value;
                    loanApplicationObject.ApplicantId = cboloanApplicationApplicant.selectedItem["Id"];
                    loanApplicationObject.Particulars = document.getElementById("loanApplicationParticulars").value;
                    loanApplicationObject.PreparedByUserId = cboloanApplicationPreparedBy.selectedItem["Id"];
                    loanApplicationObject.TermId = cboTerm.selectedItem["Id"];
                    loanApplicationObject.TermNoOfDays = document.getElementById("termNoOfDays").value;
                    loanApplicationObject.PrincipalAmount = document.getElementById('loanApplicationPrincipalAmount').value;
                    loanApplicationObject.InterestId = cboInterest.selectedItem["Id"];
                    loanApplicationObject.InterestRate = document.getElementById("interestRate").value;
                    loanApplicationObject.InterestAmount = document.getElementById("interestAmount").value;
                    loanApplicationObject.PreviousBalanceAmount = 0;
                    loanApplicationObject.PreviousPenaltyAmount = 0;
                    loanApplicationObject.NetAmount = document.getElementById('loanApplicationTotalNetAmount').value;
                    loanApplicationObject.NetCollectionAmount = document.getElementById('loanApplicationTotalNetCollectionAmount').value;

                    var loanApplicationData = JSON.stringify(loanApplicationObject);
                    $("#processingModal").modal({
                        "show": true,
                        "backdrop": "static"
                    });

                    $.ajax({
                        type: "PUT",
                        url: '/api/loan/lock/' + getUrlParameter("id"),
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: loanApplicationData,
                        statusCode: {
                            200: function () {
                                $("#processingModal").modal("hide");
                                toastr.success("Reloading the page", "Lock Successful");
                                window.setTimeout(function () {
                                    location.reload();
                                }, 1500);
                            },
                            404: function () {
                                toastr.error("Not Found");
                                $("#btnLock").prop("disabled", false);
                                document.getElementById("btnLock").innerHTML = "<i class='fa fa-lock fa-fw'></i> Lock";
                                $("#btnClose").prop("disabled", false);
                            },
                            400: function () {
                                toastr.error("Bad Request");
                                $("#btnLock").prop("disabled", false);
                                document.getElementById("btnLock").innerHTML = "<i class='fa fa-lock fa-fw'></i> Lock";
                                $("#btnClose").prop("disabled", false);
                            }
                        }
                    });
                } else {
                    toastr.error("Zero Net Amount");
                }
            } else {
                toastr.error("Invalid Entry");
            }
        }

        // unlock loan
        function btnUnlockOnClick() {
            $("#btnUnlock").prop("disabled", true);
            $("#btnPrint").prop("disabled", true);
            $("#btnClose").prop("disabled", true);
            $("#btnOptions").prop("disabled", true);
            document.getElementById("btnUnlock").innerHTML = "<i class='fa fa-spinner fa-spin fa-fw'></i> Unlocking";

            $("#processingModal").modal({
                "show": true,
                "backdrop": "static"
            });

            $.ajax({
                type: "PUT",
                url: '/api/loan/unlock/' + getUrlParameter("id"),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                statusCode: {
                    200: function () {
                        $("#processingModal").modal("hide");
                        toastr.success("Reloading the page", "Unlock Successful");
                        window.setTimeout(function () {
                            location.reload();
                        }, 1500);
                    },
                    404: function (message) {
                        $("#processingModal").modal("hide");
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Not Found");
                        $("#btnUnlock").prop("disabled", false);
                        $("#btnPrint").prop("disabled", false);
                        $("#btnClose").prop("disabled", false);
                        document.getElementById("btnUnlock").innerHTML = "<i class='fa fa-unlock fa-fw'></i> Unlock";
                    },
                    400: function (message) {
                        $("#processingModal").modal("hide");
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Bad Request");
                        $("#btnUnlock").prop("disabled", false);
                        $("#btnPrint").prop("disabled", false);
                        $("#btnClose").prop("disabled", false);
                        document.getElementById("btnUnlock").innerHTML = "<i class='fa fa-unlock fa-fw'></i> Unlock";
                    },
                    500: function (message) {
                        $("#processingModal").modal("hide");
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Internal Server Error");
                        $("#btnUnlock").prop("disabled", false);
                        $("#btnPrint").prop("disabled", false);
                        $("#btnClose").prop("disabled", false);
                        document.getElementById("btnUnlock").innerHTML = "<i class='fa fa-unlock fa-fw'></i> Unlock";
                    }
                }
            });
        }

        // get loan application collateral by loan id
        function getLoanApplicationCollateralByLoanId() {
            var loanApplicationCollateralArray = new wijmo.collections.ObservableArray;
            $.ajax({
                url: '/api/loanCollateral/listByLoanId/' + getUrlParameter("id"),
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (loanApplicationCollateralResults) {
                    if (loanApplicationCollateralResults.length > 0) {
                        for (i = 0; i < loanApplicationCollateralResults.length; i++) {
                            var btnEditButton = "<button class='btn btn-primary btn-xs btn-block' onclick='btnEditLoanApplicationCollateralOnclick()'><i class='fa fa-edit fa-fw'></i> Edit</button>";
                            var btnDeleteButton = "<button class='btn btn-danger btn-xs btn-block' onclick='btnDeleteLoanApplicationCollateralOnclick()'><i class='fa fa-trash fa-fw'></i> Delete</button>";

                            var canPerformActions = "@ViewData["CanPerformActions"]";
                            if (canPerformActions == 1) {
                                if (isLocked) {
                                    btnEditButton = "<button class='btn btn-primary btn-xs btn-block' onclick='btnEditLoanApplicationCollateralOnclick()' disabled><i class='fa fa-edit fa-fw'></i> Edit</button>";
                                    btnDeleteButton = "<button class='btn btn-danger btn-xs btn-block' onclick='btnDeleteLoanApplicationCollateralOnclick()' disabled><i class='fa fa-trash fa-fw'></i> Delete</button>";
                                } else {
                                    btnEditButton = "<button class='btn btn-primary btn-xs btn-block' onclick='btnEditLoanApplicationCollateralOnclick()'><i class='fa fa-edit fa-fw'></i> Edit</button>";
                                    btnDeleteButton = "<button class='btn btn-danger btn-xs btn-block' onclick='btnDeleteLoanApplicationCollateralOnclick()'><i class='fa fa-trash fa-fw'></i> Delete</button>";
                                }
                            } else {
                                btnEditButton = "<button class='btn btn-primary btn-xs btn-block' onclick='btnEditLoanApplicationCollateralOnclick()' disabled><i class='fa fa-edit fa-fw'></i> Edit</button>";
                                btnDeleteButton = "<button class='btn btn-danger btn-xs btn-block' onclick='btnDeleteLoanApplicationCollateralOnclick()' disabled><i class='fa fa-trash fa-fw'></i> Delete</button>";
                            }

                            loanApplicationCollateralArray.push({
                                EditButton: btnEditButton,
                                DeleteButton: btnDeleteButton,
                                Id: loanApplicationCollateralResults[i]["Id"],
                                LoanId: loanApplicationCollateralResults[i]["LoanId"],
                                Type: loanApplicationCollateralResults[i]["Type"],
                                Brand: loanApplicationCollateralResults[i]["Brand"],
                                ModelNumber: loanApplicationCollateralResults[i]["ModelNumber"],
                                SerialNumber: loanApplicationCollateralResults[i]["SerialNumber"]
                            });
                        }
                    }

                    NProgress.done();
                }
            });

            return loanApplicationCollateralArray;
        }

        // edit loan application collateral
        function btnEditLoanApplicationCollateralOnclick() {
            $("#loanApplicationCollateralEditDetailModal").modal({
                "show": true,
                "backdrop": "static"
            });

            $('.requiredLoanApplicationCollateral').each(function () {
                $(this).css({
                    "border": "",
                });
            });

            document.getElementById("btnSaveLoanApplicationCollateral").innerHTML = "<i class='fa fa-save fa-fw'></i> Save";
            $("#btnSaveLoanApplicationCollateral").prop("disabled", false);
            $("#btnCloseLoanApplicationCollateral").prop("disabled", false);

            loanApplicationCollateralCollectionView.editItem(loanApplicationCollateralCollectionView.currentItem);
            var currentItem = loanApplicationCollateralCollectionView.currentEditItem;

            loanApplicationCollateralId = currentItem.Id;
            document.getElementById('loanApplicationCollateralType').value = currentItem.Type;
            document.getElementById('loanApplicationCollateralBrand').value = currentItem.Brand;
            document.getElementById('loanApplicationCollateralModelNumber').value = currentItem.ModelNumber;
            document.getElementById('loanApplicationCollateralSerialNumber').value = currentItem.SerialNumber;
        }

        // add loan application ollateral
        function btnAddLoanApplicationCollateralOnclick() {
            $("#loanApplicationCollateralEditDetailModal").modal({
                "show": true,
                "backdrop": "static"
            });

            $('.requiredLoanApplicationCollateral').each(function () {
                $(this).css({
                    "border": "",
                });
            });

            document.getElementById("btnSaveLoanApplicationCollateral").innerHTML = "<i class='fa fa-save fa-fw'></i> Save";
            $("#btnSaveLoanApplicationCollateral").prop("disabled", false);
            $("#btnCloseLoanApplicationCollateral").prop("disabled", false);

            loanApplicationCollateralId = 0;
            document.getElementById('loanApplicationCollateralType').value = "NA";
            document.getElementById('loanApplicationCollateralBrand').value = "NA";
            document.getElementById('loanApplicationCollateralModelNumber').value = "NA";
            document.getElementById('loanApplicationCollateralSerialNumber').value = "NA";
        }

        // form input validation
        function inputValidationForLoanApplicationCollateral() {
            var isValid = true;
            $('.requiredLoanApplicationCollateral').each(function () {
                if ($.trim($(this).val()) == '') {
                    isValid = false;
                    $(this).css({
                        "border": "1px solid red"
                    });
                } else {
                    $(this).css({
                        "border": "",
                    });
                }
            });

            return isValid;
        }

        // save loan collateral
        function btnSaveLoanApplicationCollateralOnclick() {
            if (inputValidationForLoanApplicationCollateral()) {
                document.getElementById("btnSaveLoanApplicationCollateral").innerHTML = "<i class='fa fa-spinner fa-spin fa-fw'></i> Saving";
                $("#btnSaveLoanApplicationCollateral").prop("disabled", true);
                $("#btnCloseLoanApplicationCollateral").prop("disabled", true);

                var loanApplicationCollateralObject = new Object();
                loanApplicationCollateralObject.LoanId = getUrlParameter("id");
                loanApplicationCollateralObject.Type = document.getElementById('loanApplicationCollateralType').value;
                loanApplicationCollateralObject.Brand = document.getElementById('loanApplicationCollateralBrand').value;
                loanApplicationCollateralObject.ModelNumber = document.getElementById('loanApplicationCollateralModelNumber').value;
                loanApplicationCollateralObject.SerialNumber = document.getElementById('loanApplicationCollateralSerialNumber').value;
                var loanApplicationCollateralData = JSON.stringify(loanApplicationCollateralObject);

                if (loanApplicationCollateralId == 0) {
                    $.ajax({
                        type: "POST",
                        url: '/api/loanCollateral/add',
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: loanApplicationCollateralData,
                        statusCode: {
                            200: function () {
                                toastr.success("Save Successful");

                                $("#loanApplicationCollateralEditDetailModal").modal("hide");

                                refreshCollateralFlexGrid();
                            },
                            404: function () {
                                toastr.error("Record Not Found");

                                $("#loanApplicationCollateralEditDetailModal").modal("hide");

                                document.getElementById("btnSaveLoanApplicationCollateral").innerHTML = "<i class='fa fa-save fa-fw'></i> Save";
                                $("#btnSaveLoanApplicationCollateral").prop("disabled", false);
                                $("#btnCloseLoanApplicationCollateral").prop("disabled", false);
                            },
                            400: function () {
                                toastr.error("Bad Request");

                                $("#loanApplicationCollateralEditDetailModal").modal("hide");

                                document.getElementById("btnSaveLoanApplicationCollateral").innerHTML = "<i class='fa fa-save fa-fw'></i> Save";
                                $("#btnSaveLoanApplicationCollateral").prop("disabled", false);
                                $("#btnCloseLoanApplicationCollateral").prop("disabled", false);
                            }
                        }
                    });
                } else {
                    $.ajax({
                        type: "PUT",
                        url: '/api/loanCollateral/update/' + loanApplicationCollateralId,
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: loanApplicationCollateralData,
                        statusCode: {
                            200: function () {
                                toastr.success("Update Successful");

                                $("#loanApplicationCollateralEditDetailModal").modal("hide");

                                refreshCollateralFlexGrid();
                            },
                            404: function () {
                                toastr.error("Record Not Found");

                                $("#loanApplicationCollateralEditDetailModal").modal("hide");

                                document.getElementById("btnSaveLoanApplicationCollateral").innerHTML = "<i class='fa fa-save fa-fw'></i> Save";
                                $("#btnSaveLoanApplicationCollateral").prop("disabled", false);
                                $("#btnCloseLoanApplicationCollateral").prop("disabled", false);
                            },
                            400: function () {
                                toastr.error("Bad Request");

                                $("#loanApplicationCollateralEditDetailModal").modal("hide");

                                document.getElementById("btnSaveLoanApplicationCollateral").innerHTML = "<i class='fa fa-save fa-fw'></i> Save";
                                $("#btnSaveLoanApplicationCollateral").prop("disabled", false);
                                $("#btnCloseLoanApplicationCollateral").prop("disabled", false);
                            }
                        }
                    });
                }
            } else {
                toastr.error("Invalid Entry");
            }
        }

        // delete loan application collateral
        function btnDeleteLoanApplicationCollateralOnclick() {
            $("#deleteConfirmationLoanApplicationCollateralModal").modal({
                "show": true,
                "backdrop": "static"
            });

            document.getElementById("btnConfirmDeleteLoanApplicationCollateral").innerHTML = "Delete";
            $("#btnConfirmDeleteLoanApplicationCollateral").prop("disabled", false);
            $("#btnCloseDeleteLoanApplicationCollateralModal").prop("disabled", false);
        }
        function btnConfirmDeleteLoanApplicationCollateralOnclick() {
            document.getElementById("btnConfirmDeleteLoanApplicationCollateral").innerHTML = "<i class='fa fa-spinner fa-spin fa-fw'></i> Deleting";
            $("#btnConfirmDeleteLoanApplicationCollateral").prop("disabled", true);
            $("#btnCloseDeleteLoanApplicationCollateralModal").prop("disabled", true);

            loanApplicationCollateralCollectionView.editItem(loanApplicationCollateralCollectionView.currentItem);
            var currentItem = loanApplicationCollateralCollectionView.currentEditItem;

            $.ajax({
                type: "DELETE",
                url: '/api/loanCollateral/delete/' + currentItem.Id,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                statusCode: {
                    200: function () {
                        toastr.success("Delete Successful");

                        $("#deleteConfirmationLoanApplicationCollateralModal").modal("hide");

                        refreshCollateralFlexGrid();
                    },
                    404: function () {
                        toastr.error("Record Not Found");

                        $("#deleteConfirmationLoanApplicationCollateralModal").modal("hide");

                        document.getElementById("btnConfirmDeleteLoanApplicationCollateral").innerHTML = "Delete";
                        $("#btnConfirmDeleteLoanApplicationCollateral").prop("disabled", false);
                        $("#btnCloseDeleteLoanApplicationCollateralModal").prop("disabled", false);
                    },
                    400: function () {
                        toastr.error("Bad Request");

                        $("#deleteConfirmationLoanApplicationCollateralModal").modal("hide");

                        document.getElementById("btnConfirmDeleteLoanApplicationCollateral").innerHTML = "Delete";
                        $("#btnConfirmDeleteLoanApplicationCollateral").prop("disabled", false);
                        $("#btnCloseDeleteLoanApplicationCollateralModal").prop("disabled", false);
                    }
                }
            });
        }

        // Navigation Buttons for loan application
        function updateNavigateButtonsCollateral() {
            if (loanApplicationCollateralCollectionView.pageSize <= 0) {
                document.getElementById('naviagtionPageGridCollateral').style.display = 'none';
                return;
            }
            document.getElementById('naviagtionPageGridCollateral').style.display = 'block';
            btnCurrentPageGridCollateral.innerHTML = (loanApplicationCollateralCollectionView.pageIndex + 1) + ' / ' + loanApplicationCollateralCollectionView.pageCount;
        }

        function refreshCollateralFlexGrid() {
            loanApplicationCollateralCollectionView = new wijmo.collections.CollectionView(getLoanApplicationCollateralByLoanId());
            loanApplicationCollateralCollectionView.pageSize = 15;

            loanApplicationCollateralCollectionView.collectionChanged.addHandler(function (sender, args) {
                updateNavigateButtonsCollateral();
            });

            loanApplicationCollateralFlexGrid.itemsSource = loanApplicationCollateralCollectionView;
            loanApplicationCollateralFlexGrid.trackChanges = true;
        }

        // create flexgrid for loan application collateral
        function createFlexGridForLoanApplicationCollateral() {
            loanApplicationCollateralCollectionView = new wijmo.collections.CollectionView(getLoanApplicationCollateralByLoanId());
            loanApplicationCollateralCollectionView.pageSize = 15;

            loanApplicationCollateralCollectionView.collectionChanged.addHandler(function (sender, args) {
                updateNavigateButtonsCollateral();
            });

            loanApplicationCollateralFlexGrid = new wijmo.grid.FlexGrid('#loanApplicationCollateralFlexGrid');
            loanApplicationCollateralFlexGrid.initialize({
                columns: [
                            {
                                "header": "Edit",
                                "binding": "EditButton",
                                "width": 80,
                                "align": "center",
                                "allowResizing": false,
                                "isContentHtml": true
                            },
                            {
                                "header": "Delete",
                                "binding": "DeleteButton",
                                "width": 80,
                                "align": "center",
                                "allowResizing": false,
                                "isContentHtml": true
                            },
                            {
                                "header": "Type",
                                "binding": "Type",
                                "allowSorting": true,
                                "width": "3*",
                            },
                            {
                                "header": "Brand",
                                "binding": "Brand",
                                "allowSorting": true,
                                "width": "3*",
                            },
                            {
                                "header": "Model Number",
                                "binding": "ModelNumber",
                                "allowSorting": true,
                                "width": "2*",
                            },
                            {
                                "header": "Serial Number",
                                "binding": "SerialNumber",
                                "allowSorting": true,
                                "width": "2*",
                            }
                ],
                autoGenerateColumns: false,
                itemsSource: loanApplicationCollateralCollectionView,
                isReadOnly: true,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            loanApplicationCollateralFlexGrid.trackChanges = true;

            //Navigation button
            btnFirstPageGridCollateral = document.getElementById('btnMoveToFirstPageGridCollateral');
            btnPreviousPageGridCollateral = document.getElementById('btnMoveToPreviousPageGridCollateral');
            btnNextPageGridCollateral = document.getElementById('btnMoveToNextPageGridCollateral');
            btnLastPageGridCollateral = document.getElementById('btnMoveToLastPageGridCollateral');
            btnCurrentPageGridCollateral = document.getElementById('btnCurrentPageGridCollateral');

            updateNavigateButtonsCollateral();

            btnFirstPageGridCollateral.addEventListener('click', function () {
                loanApplicationCollateralCollectionView.moveToFirstPage();
                updateNavigateButtonsCollateral();
            });
            btnPreviousPageGridCollateral.addEventListener('click', function () {
                loanApplicationCollateralCollectionView.moveToPreviousPage();
                updateNavigateButtonsCollateral();
            });
            btnNextPageGridCollateral.addEventListener('click', function () {
                loanApplicationCollateralCollectionView.moveToNextPage();
                updateNavigateButtonsCollateral();
            });
            btnLastPageGridCollateral.addEventListener('click', function () {
                loanApplicationCollateralCollectionView.moveToLastPage();
                updateNavigateButtonsCollateral();
            });
        }

        // Term
        function getTerm() {
            var termArray = new Array();
            $.ajax({
                url: '/api/term/list',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (termResults) {
                    var disabled = true;
                    if (termResults.length > 0) {
                        for (i = 0; i < termResults.length; i++) {
                            termArray.push({
                                Id: termResults[i]["Id"],
                                Term: termResults[i]["Term"],
                                NoOfDays: termResults[i]["NoOfDays"]
                            });
                        }

                        disabled = false;

                        cboInterest = new wijmo.input.ComboBox('#cboInterest');
                        getInterest();
                    } else {
                        cboInterest = new wijmo.input.ComboBox('#cboInterest');
                        getInterest();
                    }

                    cboTerm.dispose();
                    cboTerm = new wijmo.input.ComboBox('#cboTerm', {
                        isDisabled: disabled,
                        placeholder: "Select",
                        itemsSource: termResults,
                        isEditable: false,
                        isRequired: true,
                        displayMemberPath: "Term",
                        selectedValuePath: "Term",
                        onSelectedIndexChanged: function () {
                            document.getElementById("termNoOfDays").value = this.selectedItem["NoOfDays"];
                        }
                    });
                }
            });
        }

        // interest
        function getInterest() {
            var interestArray = new Array();
            $.ajax({
                url: '/api/interest/list',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (interestResults) {
                    var disabled = true;
                    if (interestResults.length > 0) {
                        for (i = 0; i < interestResults.length; i++) {
                            interestArray.push({
                                Id: interestResults[i]["Id"],
                                Interest: interestResults[i]["Interest"],
                                Rate: interestResults[i]["Rate"],
                            });
                        }

                        disabled = false;
                    }

                    cboloanApplicationPreparedBy = new wijmo.input.ComboBox('#cboloanApplicationPreparedBy');
                    getUser();

                    cboInterest.dispose();
                    cboInterest = new wijmo.input.ComboBox('#cboInterest', {
                        isDisabled: disabled,
                        placeholder: "Select",
                        itemsSource: interestArray,
                        isEditable: false,
                        isRequired: true,
                        displayMemberPath: "Interest",
                        selectedValuePath: "Interest",
                        onSelectedIndexChanged: function () {
                            document.getElementById("interestRate").value = this.selectedItem["Rate"];
                            computeDeductions();
                        }
                    });
                }
            });
        }

        // get loan application deduction by loan id
        function getLoanApplicationDeductionByLoanId() {
            var loanApplicationDeductionArray = new wijmo.collections.ObservableArray;
            $.ajax({
                url: '/api/loanDeductions/listByLoanId/' + getUrlParameter("id"),
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (loanApplicationDeductionResults) {
                    var deductionAmount = 0;
                    if (loanApplicationDeductionResults.length > 0) {
                        for (i = 0; i < loanApplicationDeductionResults.length; i++) {
                            var btnEditButton = "<button class='btn btn-primary btn-xs btn-block' onclick='btnEditLoanApplicationDeductionOnclick()'><i class='fa fa-edit fa-fw'></i> Edit</button>";
                            var btnDeleteButton = "<button class='btn btn-danger btn-xs btn-block' onclick='btnDeleteLoanApplicationDeductionOnclick()'><i class='fa fa-trash fa-fw'></i> Delete</button>";

                            var canPerformActions = "@ViewData["CanPerformActions"]";
                            if (canPerformActions == 1) {
                                if (isLocked) {
                                    btnEditButton = "<button class='btn btn-primary btn-xs btn-block' onclick='btnEditLoanApplicationDeductionOnclick()' disabled><i class='fa fa-edit fa-fw'></i> Edit</button>";
                                    btnDeleteButton = "<button class='btn btn-danger btn-xs btn-block' onclick='btnDeleteLoanApplicationDeductionOnclick()' disabled><i class='fa fa-trash fa-fw'></i> Delete</button>";
                                } else {
                                    btnEditButton = "<button class='btn btn-primary btn-xs btn-block' onclick='btnEditLoanApplicationDeductionOnclick()'><i class='fa fa-edit fa-fw'></i> Edit</button>";
                                    btnDeleteButton = "<button class='btn btn-danger btn-xs btn-block' onclick='btnDeleteLoanApplicationDeductionOnclick()'><i class='fa fa-trash fa-fw'></i> Delete</button>";
                                }
                            } else {
                                btnEditButton = "<button class='btn btn-primary btn-xs btn-block' onclick='btnEditLoanApplicationDeductionOnclick()' disabled><i class='fa fa-edit fa-fw'></i> Edit</button>";
                                btnDeleteButton = "<button class='btn btn-danger btn-xs btn-block' onclick='btnDeleteLoanApplicationDeductionOnclick()' disabled><i class='fa fa-trash fa-fw'></i> Delete</button>";
                            }

                            loanApplicationDeductionArray.push({
                                EditButton: btnEditButton,
                                DeleteButton: btnDeleteButton,
                                Id: loanApplicationDeductionResults[i]["Id"],
                                LoanId: loanApplicationDeductionResults[i]["LoanId"],
                                DeductionId: loanApplicationDeductionResults[i]["DeductionId"],
                                Deduction: loanApplicationDeductionResults[i]["Deduction"],
                                IsPercentage: loanApplicationDeductionResults[i]["IsPercentage"],
                                PercentageRate: loanApplicationDeductionResults[i]["PercentageRate"],
                                DeductionAmount: loanApplicationDeductionResults[i]["DeductionAmount"]
                            });

                            deductionAmount += loanApplicationDeductionResults[i]["DeductionAmount"];
                        }
                    }

                    document.getElementById("loanApplicationDeductionAmount").value = deductionAmount;
                    computeDeductions();

                    NProgress.done();
                }
            });

            return loanApplicationDeductionArray;
        }

        // edit loan application deduction
        function btnEditLoanApplicationDeductionOnclick() {
            $("#loanApplicationDeductionEditDetailModal").modal({
                "show": true,
                "backdrop": "static"
            });

            $('.requiredLoanApplicationDeduction').each(function () {
                $(this).css({
                    "border": "",
                });
            });

            document.getElementById("btnSaveLoanApplicationDeduction").innerHTML = "<i class='fa fa-save fa-fw'></i> Save";
            $("#btnSaveLoanApplicationDeduction").prop("disabled", false);
            $("#btnCloseLoanApplicationDeduction").prop("disabled", false);

            loanApplicationDeductionCollectionView.editItem(loanApplicationDeductionCollectionView.currentItem);
            var currentItem = loanApplicationDeductionCollectionView.currentEditItem;

            loanDeductionId = currentItem.Id;
            cboDeduction.selectedValue = currentItem.Deduction;
            document.getElementById("loanApplicationDeductionPercentageRate").value = currentItem.PercentageRate;
            document.getElementById("loanApplicationDeductionDeductionAmount").value = currentItem.DeductionAmount;
        }

        // add loan application deduction
        function btnAddLoanApplicationDeductionOnclick() {
            $("#loanApplicationDeductionEditDetailModal").modal({
                "show": true,
                "backdrop": "static"
            });

            $('.requiredLoanApplicationDeduction').each(function () {
                $(this).css({
                    "border": "",
                });
            });

            document.getElementById("btnSaveLoanApplicationDeduction").innerHTML = "<i class='fa fa-save fa-fw'></i> Save";
            $("#btnSaveLoanApplicationDeduction").prop("disabled", false);
            $("#btnCloseLoanApplicationDeduction").prop("disabled", false);

            loanDeductionId = 0;
            getDeduction();
        }

        // form input validation
        function inputValidationForLoanApplicationDeduction() {
            var isValid = true;
            $('.requiredLoanApplicationDeduction').each(function () {
                if ($.trim($(this).val()) == '') {
                    isValid = false;
                    $(this).css({
                        "border": "1px solid red"
                    });
                } else {
                    $(this).css({
                        "border": "",
                    });
                }
            });

            return isValid;
        }

        // save loan deduction
        function btnSaveLoanApplicationDeductionOnclick() {
            if (inputValidationForLoanApplicationDeduction()) {
                document.getElementById("btnSaveLoanApplicationDeduction").innerHTML = "<i class='fa fa-spinner fa-spin fa-fw'></i> Saving";
                $("#btnSaveLoanApplicationDeduction").prop("disabled", true);
                $("#btnCloseLoanApplicationDeduction").prop("disabled", true);

                var loanApplicationDeductionObject = new Object();
                loanApplicationDeductionObject.LoanId = getUrlParameter("id");
                loanApplicationDeductionObject.DeductionId = cboDeduction.selectedItem["Id"];
                loanApplicationDeductionObject.DeductionAmount = document.getElementById('loanApplicationDeductionDeductionAmount').value;
                var loanApplicationDeductionData = JSON.stringify(loanApplicationDeductionObject);

                if (loanDeductionId == 0) {
                    $.ajax({
                        type: "POST",
                        url: '/api/loanDeductions/add',
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: loanApplicationDeductionData,
                        statusCode: {
                            200: function () {
                                toastr.success("Save Successful");

                                $("#loanApplicationDeductionEditDetailModal").modal("hide");

                                refreshDeductionFlexGrid();
                            },
                            404: function () {
                                toastr.error("Record Not Found");

                                $("#loanApplicationDeductionEditDetailModal").modal("hide");

                                document.getElementById("btnSaveLoanApplicationDeduction").innerHTML = "<i class='fa fa-save fa-fw'></i> Save";
                                $("#btnSaveLoanApplicationDeduction").prop("disabled", false);
                                $("#btnCloseLoanApplicationDeduction").prop("disabled", false);
                            },
                            400: function () {
                                toastr.error("Bad Request");

                                $("#loanApplicationDeductionEditDetailModal").modal("hide");

                                document.getElementById("btnSaveLoanApplicationDeduction").innerHTML = "<i class='fa fa-save fa-fw'></i> Save";
                                $("#btnSaveLoanApplicationDeduction").prop("disabled", false);
                                $("#btnCloseLoanApplicationDeduction").prop("disabled", false);
                            }
                        }
                    });
                } else {
                    $.ajax({
                        type: "PUT",
                        url: '/api/loanDeductions/update/' + loanDeductionId,
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: loanApplicationDeductionData,
                        statusCode: {
                            200: function () {
                                toastr.success("Update Successful");

                                $("#loanApplicationDeductionEditDetailModal").modal("hide");

                                refreshDeductionFlexGrid();
                            },
                            404: function () {
                                toastr.error("Record Not Found");

                                $("#loanApplicationDeductionEditDetailModal").modal("hide");

                                document.getElementById("btnSaveLoanApplicationDeduction").innerHTML = "<i class='fa fa-save fa-fw'></i> Save";
                                $("#btnSaveLoanApplicationDeduction").prop("disabled", false);
                                $("#btnCloseLoanApplicationDeduction").prop("disabled", false);
                            },
                            400: function () {
                                toastr.error("Bad Request");

                                $("#loanApplicationDeductionEditDetailModal").modal("hide");

                                document.getElementById("btnSaveLoanApplicationDeduction").innerHTML = "<i class='fa fa-save fa-fw'></i> Save";
                                $("#btnSaveLoanApplicationDeduction").prop("disabled", false);
                                $("#btnCloseLoanApplicationDeduction").prop("disabled", false);
                            }
                        }
                    });
                }
            } else {
                toastr.error("Invalid Entry");
            }
        }

        // delete loan application deduction
        function btnDeleteLoanApplicationDeductionOnclick() {
            $("#deleteConfirmationLoanApplicationDeductionModal").modal({
                "show": true,
                "backdrop": "static"
            });

            document.getElementById("btnConfirmDeleteLoanApplicationDeduction").innerHTML = "Delete";
            $("#btnConfirmDeleteLoanApplicationDeduction").prop("disabled", false);
            $("#btnCloseDeleteLoanApplicationDeductionModal").prop("disabled", false);
        }
        function btnConfirmDeleteLoanApplicationDeductionOnclick() {
            document.getElementById("btnConfirmDeleteLoanApplicationDeduction").innerHTML = "<i class='fa fa-spinner fa-spin fa-fw'></i> Deleting";
            $("#btnConfirmDeleteLoanApplicationDeduction").prop("disabled", true);
            $("#btnCloseDeleteLoanApplicationDeductionModal").prop("disabled", true);

            loanApplicationDeductionCollectionView.editItem(loanApplicationDeductionCollectionView.currentItem);
            var currentItem = loanApplicationDeductionCollectionView.currentEditItem;

            $.ajax({
                type: "DELETE",
                url: '/api/loanDeductions/delete/' + currentItem.Id + '/' + getUrlParameter("id"),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                statusCode: {
                    200: function () {
                        toastr.success("Delete Successful");

                        $("#deleteConfirmationLoanApplicationDeductionModal").modal("hide");

                        refreshDeductionFlexGrid();
                    },
                    404: function () {
                        toastr.error("Record Not Found");

                        $("#deleteConfirmationLoanApplicationDeductionModal").modal("hide");

                        document.getElementById("btnConfirmDeleteLoanApplicationDeduction").innerHTML = "Delete";
                        $("#btnConfirmDeleteLoanApplicationDeduction").prop("disabled", false);
                        $("#btnCloseDeleteLoanApplicationDeductionModal").prop("disabled", false);
                    },
                    400: function () {
                        toastr.error("Bad Request");

                        $("#deleteConfirmationLoanApplicationDeductionModal").modal("hide");

                        document.getElementById("btnConfirmDeleteLoanApplicationDeduction").innerHTML = "Delete";
                        $("#btnConfirmDeleteLoanApplicationDeduction").prop("disabled", false);
                        $("#btnCloseDeleteLoanApplicationDeductionModal").prop("disabled", false);
                    }
                }
            });
        }

        // Navigation Buttons for loan application
        function updateNavigateButtonsDeduction() {
            if (loanApplicationDeductionCollectionView.pageSize <= 0) {
                document.getElementById('naviagtionPageGridDeduction').style.display = 'none';
                return;
            }
            document.getElementById('naviagtionPageGridDeduction').style.display = 'block';
            btnCurrentPageGridDeduction.innerHTML = (loanApplicationDeductionCollectionView.pageIndex + 1) + ' / ' + loanApplicationDeductionCollectionView.pageCount;
        }

        function refreshDeductionFlexGrid() {
            loanApplicationDeductionCollectionView = new wijmo.collections.CollectionView(getLoanApplicationDeductionByLoanId());
            loanApplicationDeductionCollectionView.pageSize = 15;

            loanApplicationDeductionCollectionView.collectionChanged.addHandler(function (sender, args) {
                updateNavigateButtonsDeduction();
            });

            loanApplicationDeductionFlexGrid.itemsSource = loanApplicationDeductionCollectionView;
            loanApplicationDeductionFlexGrid.trackChanges = true;
        }

        // create flexgrid for loan application deduction
        function createFlexGridForLoanApplicationDeduction() {
            loanApplicationDeductionCollectionView = new wijmo.collections.CollectionView(getLoanApplicationDeductionByLoanId());
            loanApplicationDeductionCollectionView.pageSize = 15;

            loanApplicationDeductionCollectionView.collectionChanged.addHandler(function (sender, args) {
                updateNavigateButtonsDeduction();
            });

            loanApplicationDeductionFlexGrid = new wijmo.grid.FlexGrid('#loanApplicationDeductionFlexGrid');
            loanApplicationDeductionFlexGrid.initialize({
                columns: [
                            {
                                "header": "Edit",
                                "binding": "EditButton",
                                "width": 80,
                                "align": "center",
                                "allowResizing": false,
                                "isContentHtml": true
                            },
                            {
                                "header": "Delete",
                                "binding": "DeleteButton",
                                "width": 80,
                                "align": "center",
                                "allowResizing": false,
                                "isContentHtml": true
                            },
                            {
                                "header": "Deduction",
                                "binding": "Deduction",
                                "allowSorting": true,
                                "width": "3*",
                            },
                            {
                                "header": "Rate",
                                "binding": "PercentageRate",
                                "allowSorting": true,
                                "width": "2*",
                            },
                            {
                                "header": "Amount",
                                "binding": "DeductionAmount",
                                "allowSorting": true,
                                "width": "2*",
                            }
                ],
                autoGenerateColumns: false,
                itemsSource: loanApplicationDeductionCollectionView,
                isReadOnly: true,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            loanApplicationDeductionFlexGrid.trackChanges = true;

            //Navigation button
            btnFirstPageGridDeduction = document.getElementById('btnMoveToFirstPageGridDeduction');
            btnPreviousPageGridDeduction = document.getElementById('btnMoveToPreviousPageGridDeduction');
            btnNextPageGridDeduction = document.getElementById('btnMoveToNextPageGridDeduction');
            btnLastPageGridDeduction = document.getElementById('btnMoveToLastPageGridDeduction');
            btnCurrentPageGridDeduction = document.getElementById('btnCurrentPageGridDeduction');

            updateNavigateButtonsDeduction();

            btnFirstPageGridDeduction.addEventListener('click', function () {
                loanApplicationDeductionCollectionView.moveToFirstPage();
                updateNavigateButtonsDeduction();
            });
            btnPreviousPageGridDeduction.addEventListener('click', function () {
                loanApplicationDeductionCollectionView.moveToPreviousPage();
                updateNavigateButtonsDeduction();
            });
            btnNextPageGridDeduction.addEventListener('click', function () {
                loanApplicationDeductionCollectionView.moveToNextPage();
                updateNavigateButtonsDeduction();
            });
            btnLastPageGridDeduction.addEventListener('click', function () {
                loanApplicationDeductionCollectionView.moveToLastPage();
                updateNavigateButtonsDeduction();
            });
        }

        // penalty
        function getDeduction() {
            var deductionArray = new Array();
            $.ajax({
                url: '/api/deductions/list',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (deductionResults) {
                    var disabled = true;
                    if (deductionResults.length > 0) {
                        for (i = 0; i < deductionResults.length; i++) {
                            deductionArray.push({
                                Id: deductionResults[i]["Id"],
                                Deduction: deductionResults[i]["Deduction"],
                                PercentageRate: deductionResults[i]["PercentageRate"],
                                DeductionAmount: deductionResults[i]["DeductionAmount"],
                            });
                        }

                        disabled = false;
                    }

                    cboDeduction.dispose();
                    cboDeduction = new wijmo.input.ComboBox('#cboDeduction', {
                        isDisabled: disabled,
                        placeholder: "Select",
                        itemsSource: deductionArray,
                        isEditable: false,
                        isRequired: true,
                        displayMemberPath: "Deduction",
                        selectedValuePath: "Deduction",
                        onSelectedIndexChanged: function () {
                            document.getElementById("loanApplicationDeductionPercentageRate").value = this.selectedItem["PercentageRate"];

                            if (this.selectedItem["PercentageRate"] > 0) {
                                var principalAmountValue = document.getElementById('loanApplicationPrincipalAmount').value.replace(/\,/g, '');
                                var deductionAmount = (principalAmountValue / 100) * this.selectedItem["PercentageRate"];

                                document.getElementById("loanApplicationDeductionDeductionAmount").value = deductionAmount.toLocaleString();
                            } else {
                                document.getElementById("loanApplicationDeductionDeductionAmount").value = this.selectedItem["DeductionAmount"].toLocaleString();
                            }
                        }
                    });

                    document.getElementById("loanApplicationDeductionPercentageRate").value = cboDeduction.selectedItem["PercentageRate"];

                    if (cboDeduction.selectedItem["IsPercentage"]) {
                        var principalAmountValue = document.getElementById('loanApplicationPrincipalAmount').value.replace(/\,/g, '');
                        var deductionAmount = (principalAmountValue / 100) * cboDeduction.selectedItem["PercentageRate"];

                        document.getElementById("loanApplicationDeductionDeductionAmount").value = deductionAmount.toLocaleString();
                    } else {
                        document.getElementById("loanApplicationDeductionDeductionAmount").value = cboDeduction.selectedItem["DeductionAmount"].toLocaleString();
                    }
                }
            });
        }

        // loan application tab
        $('#loanApplicationCollateralTab').click(function () {
            NProgress.start();
            $("#loanApplicationCollateral").show();
            $("#loanDeductions").hide();
            $("#loanLines").hide();

            createFlexGridForLoanApplicationCollateral();
            window.createFlexGridForLoanApplicationCollateral = function () {
                return true;
            }

            refreshCollateralFlexGrid();
        });

        // tab
        $('#loanDeductionsTab').click(function () {
            NProgress.start();
            $("#loanApplicationCollateral").hide();
            $("#loanDeductions").show();
            $("#loanLines").hide();

            refreshDeductionFlexGrid();
        });

        // loan lines
        function getLoanLinesListByLoanId() {
            var loanLinesArray = new wijmo.collections.ObservableArray;
            $.ajax({
                url: '/api/collections/list/ByLoanId/' + getUrlParameter("id"),
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (collectionListResult) {
                    if (collectionListResult.length > 0) {
                        for (i = 0; i < collectionListResult.length; i++) {
                            var btnRecentCollection = "<button class='btn btn-primary btn-xs btn-block' onclick='btnViewRecentCollectionOnclick()'><i class='fa fa-edit fa-fw'></i> Detail</button>";

                            var thisCollectionDate = new Date(collectionListResult[i]["CollectionDate"]);

                            var weekday = new Array(7);
                            var day = "";

                            if (thisCollectionDate.getDay() == 0) {
                                day = "Sunday";
                            } else {
                                if (thisCollectionDate.getDay() == 1) {
                                    day = "Monday";
                                } else {
                                    if (thisCollectionDate.getDay() == 2) {
                                        day = "Tuesday";
                                    } else {
                                        if (thisCollectionDate.getDay() == 3) {
                                            day = "Wednesday";
                                        } else {
                                            if (thisCollectionDate.getDay() == 4) {
                                                day = "Thursday";
                                            } else {
                                                if (thisCollectionDate.getDay() == 5) {
                                                    day = "Friday";
                                                } else {
                                                    if (thisCollectionDate.getDay() == 6) {
                                                        day = "Saturday";
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }

                            var thisCollectionDateValue = [thisCollectionDate.getMonth() + 1, thisCollectionDate.getDate(), thisCollectionDate.getFullYear()].join('-') + " " + day;

                            var newDate = new Date(collectionListResult[i]["CollectionDate"]);
                            var collectionDateValue = ('0' + (newDate.getMonth() + 1)).slice(-2) + '-' + ('0' + newDate.getDate()).slice(-2) + '-' + newDate.getFullYear();

                            loanLinesArray.push({
                                RecentCollectionButton: btnRecentCollection,
                                Id: collectionListResult[i]["Id"],
                                CollectionNumber: "CL-" + collectionListResult[i]["CollectionNumber"],
                                CollectionDate: collectionDateValue,
                                Applicant: collectionListResult[i]["Applicant"],
                                Particulars: collectionListResult[i]["Particulars"],
                                LoanId: collectionListResult[i]["LoanId"],
                                LoanNumberDetail: collectionListResult[i]["LoanNumberDetail"],
                                LoanId: collectionListResult[i]["LoanId"],
                                LoanNumber: collectionListResult[i]["LoanNumber"],
                                CollectionStatus: collectionListResult[i]["CollectionStatus"],
                                Particulars: collectionListResult[i]["Particulars"],
                                TotalPaidAmount: collectionListResult[i]["TotalPaidAmount"],
                                TotalPenaltyAmount: collectionListResult[i]["TotalPenaltyAmount"],
                                PreparedByUserId: collectionListResult[i]["PreparedByUserId"],
                                PreparedByUser: collectionListResult[i]["PreparedByUser"],
                                IsReconstruct: collectionListResult[i]["IsReconstruct"],
                                IsRenew: collectionListResult[i]["IsRenew"],
                                IsLoanApplication: collectionListResult[i]["IsLoanApplication"],
                                IsLoanReconstruct: collectionListResult[i]["IsLoanReconstruct"],
                                IsLoanRenew: collectionListResult[i]["IsLoanRenew"],
                                IsLocked: collectionListResult[i]["IsLocked"],
                                CreatedByUserId: collectionListResult[i]["CreatedByUserId"],
                                CreatedByUser: collectionListResult[i]["CreatedByUser"],
                                CreatedDateTime: collectionListResult[i]["CreatedDateTime"],
                                UpdatedByUserId: collectionListResult[i]["UpdatedByUserId"],
                                UpdatedByUser: collectionListResult[i]["UpdatedByUser"],
                                UpdatedDateTime: collectionListResult[i]["UpdatedDateTime"]
                            });
                        }
                    }

                    NProgress.done();
                }
            });

            return loanLinesArray;
        }

        var loanLinesCollectionView;
        var loanLinesFlexgrid;

        // Navigation Buttons for loan application
        function updateNavigateButtonsLoneLines() {
            if (loanLinesCollectionView.pageSize <= 0) {
                document.getElementById('naviagtionPageGridLoanLines').style.display = 'none';
                return;
            }
            document.getElementById('naviagtionPageGridLoanLines').style.display = 'block';
            btnCurrentPageGridLoanLines.innerHTML = (loanLinesCollectionView.pageIndex + 1) + ' / ' + loanLinesCollectionView.pageCount;
        }

        function refreshLoanLinesFlexGrid() {
            loanLinesCollectionView = new wijmo.collections.CollectionView(getLoanLinesListByLoanId());
            loanLinesCollectionView.pageSize = 15;

            loanLinesCollectionView.collectionChanged.addHandler(function (sender, args) {
                updateNavigateButtonsLoneLines();
            });

            loanLinesFlexgrid.itemsSource = loanLinesCollectionView;
            loanLinesFlexgrid.trackChanges = true;
        }

        // view recent collection
        function btnViewRecentCollectionOnclick() {
            loanLinesCollectionView.editItem(loanLinesCollectionView.currentItem);
            var currentItem = loanLinesCollectionView.currentEditItem;

            var link = '/Software/CollectionDetail?id=' + currentItem.Id;
            window.open(link, "_blank");
        }

        // create flexgrid for loan application lines
        function createFlexGridForLoanLines() {
            loanLinesCollectionView = new wijmo.collections.CollectionView(getLoanLinesListByLoanId());
            loanLinesCollectionView.pageSize = 15;

            loanLinesCollectionView.collectionChanged.addHandler(function (sender, args) {
                updateNavigateButtonsLoneLines();
            });

            loanLinesFlexgrid = new wijmo.grid.FlexGrid('#loanLinesFlexgrid');
            loanLinesFlexgrid.initialize({
                columns: [
                            {
                                "header": "Detail",
                                "binding": "RecentCollectionButton",
                                "width": 100,
                                "align": "center",
                                "allowResizing": false,
                                "isContentHtml": true
                            },
                            {
                                "header": "Date",
                                "binding": "CollectionDate",
                                "allowSorting": true,
                                "width": 100,
                            },
                            {
                                "header": "Collection No.",
                                "binding": "CollectionNumber",
                                "allowSorting": true,
                                "width": 150,
                            },
                            {
                                "header": "Status",
                                "binding": "CollectionStatus",
                                "allowSorting": true,
                                "width": 200,
                            },
                            {
                                "header": "Particulars",
                                "binding": "Particulars",
                                "allowSorting": true,
                                "width": 300,
                            },
                            {
                                "header": "Paid",
                                "binding": "TotalPaidAmount",
                                "allowSorting": true,
                                "width": 130
                            },
                            {
                                "header": "Penalty",
                                "binding": "TotalPenaltyAmount",
                                "allowSorting": true,
                                "width": 130
                            }
                ],
                autoGenerateColumns: false,
                itemsSource: loanLinesCollectionView,
                isReadOnly: true,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            loanLinesFlexgrid.trackChanges = true;

            //Navigation button
            btnFirstPageGridLoanLines = document.getElementById('btnMoveToFirstPageGridLoanLines');
            btnPreviousPageGridLoanLines = document.getElementById('btnMoveToPreviousPageGridLoanLines');
            btnNextPageGridLoanLines = document.getElementById('btnMoveToNextPageGridLoanLines');
            btnLastPageGridLoanLines = document.getElementById('btnMoveToLastPageGridLoanLines');
            btnCurrentPageGridLoanLines = document.getElementById('btnCurrentPageGridLoanLines');

            updateNavigateButtonsLoneLines();

            btnFirstPageGridLoanLines.addEventListener('click', function () {
                loanLinesCollectionView.moveToFirstPage();
                updateNavigateButtonsLoneLines();
            });
            btnPreviousPageGridLoanLines.addEventListener('click', function () {
                loanLinesCollectionView.moveToPreviousPage();
                updateNavigateButtonsLoneLines();
            });
            btnNextPageGridLoanLines.addEventListener('click', function () {
                loanLinesCollectionView.moveToNextPage();
                updateNavigateButtonsLoneLines();
            });
            btnLastPageGridLoanLines.addEventListener('click', function () {
                loanLinesCollectionView.moveToLastPage();
                updateNavigateButtonsLoneLines();
            });
        }

        // tab
        $('#loanLinesTab').click(function () {
            NProgress.start();
            $("#loanApplicationCollateral").hide();
            $("#loanDeductions").hide();
            $("#loanLines").show();

            createFlexGridForLoanLines();
            window.createFlexGridForLoanLines = function () {
                return true;
            }
            refreshLoanLinesFlexGrid();
        });





        // loan history
        function getLoanHistory() {
            var loanHistorys = new wijmo.collections.ObservableArray;
            $.ajax({
                url: '/api/loanHistory/list/' + cboloanApplicationApplicant.selectedItem["Id"],
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (loanHistorysResults) {
                    if (loanHistorysResults.length > 0) {
                        var btnLoanNumber = "<button class='btn btn-primary btn-xs btn-block' onclick='btnLoanNumberOnclick()'><i class='fa fa-edit fa-fw'></i> Detail</button>";

                        for (i = 0; i < loanHistorysResults.length; i++) {
                            var newDate = new Date(loanHistorysResults[i]["LoanDate"]);
                            var loanDateValue = ('0' + (newDate.getMonth() + 1)).slice(-2) + '-' + ('0' + newDate.getDate()).slice(-2) + '-' + newDate.getFullYear();

                            var newMaturityDate = new Date(loanHistorysResults[i]["MaturityDate"]);
                            var maturityDateValue = ('0' + (newMaturityDate.getMonth() + 1)).slice(-2) + '-' + ('0' + newMaturityDate.getDate()).slice(-2) + '-' + newMaturityDate.getFullYear();

                            loanHistorys.push({
                                Id: loanHistorysResults[i]["Id"],
                                BtnLoanNumber: btnLoanNumber,
                                LoanId: loanHistorysResults[i]["LoanId"],
                                LoanDate: loanDateValue,
                                MaturityDate: maturityDateValue,
                                LoanNumber: loanHistorysResults[i]["LoanNumber"],
                                Area: loanHistorysResults[i]["Area"],
                                Particulars: loanHistorysResults[i]["Particulars"],
                                PrincipalAmount: loanHistorysResults[i]["PrincipalAmount"],
                                InterestAmount: loanHistorysResults[i]["InterestAmount"],
                                DeductionAmount: loanHistorysResults[i]["DeductionAmount"],
                                PreviousBalanceAmount: loanHistorysResults[i]["PreviousBalanceAmount"],
                                NetAmount: loanHistorysResults[i]["NetAmount"],
                                NetCollectionAmount: loanHistorysResults[i]["NetCollectionAmount"],
                                CollectibleAmount: loanHistorysResults[i]["CollectibleAmount"],
                                TotalPaidAmount: loanHistorysResults[i]["TotalPaidAmount"],
                                TotalPenaltyAmount: loanHistorysResults[i]["TotalPenaltyAmount"],
                                TotalBalanceAmount: loanHistorysResults[i]["TotalBalanceAmount"],
                                IsLocked: loanHistorysResults[i]["IsLocked"],
                                IsLoanApplication: loanHistorysResults[i]["IsLoanApplication"],
                                IsLoanReconstruct: loanHistorysResults[i]["IsLoanReconstruct"],
                                IsLoanRenew: loanHistorysResults[i]["IsLoanRenew"],
                                IsReturnRelease: loanHistorysResults[i]["IsReturnRelease"],
                            });
                        }
                    }

                    NProgress.done();
                }
            });

            return loanHistorys;
        }

        // Navigation Buttons for loan application
        function updateNavigateButtonsLoanHistory() {
            if (loanHistoryCollectionView.pageSize <= 0) {
                document.getElementById('naviagtionPageGridLoanHistory').style.display = 'none';
                return;
            }
            document.getElementById('naviagtionPageGridLoanHistory').style.display = 'block';
            btnCurrentPageGridLoanHistory.innerHTML = (loanHistoryCollectionView.pageIndex + 1) + ' / ' + loanHistoryCollectionView.pageCount;
        }

        // create flexgrid for loan application reconstrcut
        function createFlexGridForLoanHistory() {
            loanHistoryCollectionView = new wijmo.collections.CollectionView(getLoanHistory());
            loanHistoryCollectionView.pageSize = 15;

            loanHistoryCollectionView.collectionChanged.addHandler(function (sender, args) {
                updateNavigateButtonsLoanHistory();
            });

            loanHistoryFlexgrid = new wijmo.grid.FlexGrid('#loanHistoryFlexgrid');
            loanHistoryFlexgrid.initialize({
                columns: [
                            {
                                "header": "Detail",
                                "binding": "BtnLoanNumber",
                                "width": 100,
                                "align": "center",
                                "allowResizing": false,
                                "isContentHtml": true
                            },
                            {
                                "header": "Is RL",
                                "binding": "IsReturnRelease",
                                "allowSorting": true,
                                "width": 60,
                            },
                            {
                                "header": "Date",
                                "binding": "LoanDate",
                                "allowSorting": true,
                                "width": 100,
                            },
                            {
                                "header": "Due Date",
                                "binding": "MaturityDate",
                                "allowSorting": true,
                                "width": 100,
                            },
                            {
                                "header": "Trn. No.",
                                "binding": "LoanNumber",
                                "allowSorting": true,
                                "width": 150,
                            },
                            {
                                "header": "Particulars",
                                "binding": "Particulars",
                                "allowSorting": true,
                                "width": 300,
                            },
                            {
                                "header": "Principal",
                                "binding": "PrincipalAmount",
                                "allowSorting": true,
                                "width": 180,
                            },
                            {
                                "header": "Interest",
                                "binding": "InterestAmount",
                                "allowSorting": true,
                                "width": 180,
                            },
                            {
                                "header": "Deduction / Additionals",
                                "binding": "DeductionAmount",
                                "allowSorting": true,
                                "width": 180,
                            },
                            {
                                "header": "Prev. Balance",
                                "binding": "PreviousBalanceAmount",
                                "allowSorting": true,
                                "width": 180,
                            },
                            {
                                "header": "Net",
                                "binding": "NetAmount",
                                "allowSorting": true,
                                "width": 180,
                            },
                            {
                                "header": "Net Collection",
                                "binding": "NetCollectionAmount",
                                "allowSorting": true,
                                "width": 180,
                            },
                            {
                                "header": "Collectible",
                                "binding": "CollectibleAmount",
                                "allowSorting": true,
                                "width": 160,
                            },
                            {
                                "header": "Total Paid",
                                "binding": "TotalPaidAmount",
                                "allowSorting": true,
                                "width": 180,
                            },
                            {
                                "header": "Total Penalty",
                                "binding": "TotalPenaltyAmount",
                                "allowSorting": true,
                                "width": 180,
                            },
                            {
                                "header": "Total Balance",
                                "binding": "TotalBalanceAmount",
                                "allowSorting": true,
                                "width": 180,
                            }
                ],
                autoGenerateColumns: false,
                itemsSource: loanHistoryCollectionView,
                isReadOnly: true,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            loanHistoryFlexgrid.trackChanges = true;

            //Navigation button
            btnFirstPageGridLoanHistory = document.getElementById('btnMoveToFirstPageGridLoanHistory');
            btnPreviousPageGridLoanHistory = document.getElementById('btnMoveToPreviousPageGridLoanHistory');
            btnNextPageGridLoanHistory = document.getElementById('btnMoveToNextPageGridLoanHistory');
            btnLastPageGridLoanHistory = document.getElementById('btnMoveToLastPageGridLoanHistory');
            btnCurrentPageGridLoanHistory = document.getElementById('btnCurrentPageGridLoanHistory');

            updateNavigateButtonsLoanHistory();

            btnFirstPageGridLoanHistory.addEventListener('click', function () {
                loanHistoryCollectionView.moveToFirstPage();
                updateNavigateButtonsLoanHistory();
            });
            btnPreviousPageGridLoanHistory.addEventListener('click', function () {
                loanHistoryCollectionView.moveToPreviousPage();
                updateNavigateButtonsLoanHistory();
            });
            btnNextPageGridLoanHistory.addEventListener('click', function () {
                loanHistoryCollectionView.moveToNextPage();
                updateNavigateButtonsLoanHistory();
            });
            btnLastPageGridLoanHistory.addEventListener('click', function () {
                loanHistoryCollectionView.moveToLastPage();
                updateNavigateButtonsLoanHistory();
            });
        }

        // loan app
        function btnLoanNumberOnclick() {
            loanHistoryCollectionView.editItem(loanHistoryCollectionView.currentItem);
            var currentItem = loanHistoryCollectionView.currentEditItem;

            if (currentItem.IsLoanApplication) {
                var link = '/Software/LoanApplicationDetail?id=' + currentItem.Id;
                window.open(link, "_blank");
            } else {
                if (currentItem.IsLoanReconstruct) {
                    var link = '/Software/ReconstructDetail?id=' + currentItem.Id;
                    window.open(link, "_blank");
                } else {
                    if (currentItem.IsLoanRenew) {
                        var link = '/Software/RenewDetail?id=' + currentItem.Id;
                        window.open(link, "_blank");
                    } else {
                        var link = '/Software/LoanApplicationDetail?id=' + currentItem.Id;
                        window.open(link, "_blank");
                    }
                }
            }
        }

        // tab
        $('#loanHistoryTab').click(function () {
            NProgress.start();
            $("#loanApplicationCollateral").hide();
            $("#loanDeductions").hide();
            $("#loanLines").hide();
            $("#loanHistory").show();

            createFlexGridForLoanHistory();
            window.createFlexGridForLoanHistory = function () {
                return true;
            }

            loanHistoryCollectionView = new wijmo.collections.CollectionView(getLoanHistory());
            loanHistoryCollectionView.pageSize = 15;

            loanHistoryCollectionView.collectionChanged.addHandler(function (sender, args) {
                updateNavigateButtonsLoanHistory();
            });

            loanHistoryFlexgrid.itemsSource = loanHistoryCollectionView;
            loanHistoryFlexgrid.trackChanges = true;
        });




        // on load page
        window.onload = function () {
            NProgress.start();
            toastrModification();
            loanApplicationLoanDateRange();

            $(document).on('show.bs.modal', '.modal', function (event) {
                var zIndex = 1040 + (10 * $('.modal:visible').length);
                $(this).css('z-index', zIndex);
                setTimeout(function () {
                    $('.modal-backdrop').not('.modal-stack').css('z-index', zIndex - 1).addClass('modal-stack');
                }, 0);
            });

            $(document).on('hidden.bs.modal', '.modal', function () {
                $('.modal:visible').length && $(document.body).addClass('modal-open');
            });

            var canPerformActions = "@ViewData["CanPerformActions"]";
            if (canPerformActions == 1) {
                $('#btnClose').prop('disabled', false);
            } else {
                $(':button').prop('disabled', true);
                $('#btnClose').prop('disabled', false);
                getUserRightsMessageError();
            }

            cboDeduction = new wijmo.input.ComboBox('#cboDeduction');
            getDeduction();
        }

        // compute deductions to net amount
        function computeDeductions() {
            var principalAmountValue = document.getElementById('loanApplicationPrincipalAmount').value.replace(/\,/g, '');
            var interestRate = document.getElementById('interestRate').value.replace(/\,/g, '');
            var interestAmount = (principalAmountValue / 100) * interestRate;
            document.getElementById('interestAmount').value = interestAmount.toLocaleString();
            var interestAmountValue = document.getElementById('interestAmount').value.replace(/\,/g, '');

            // deductions
            var deductionAmountValue = document.getElementById('loanApplicationDeductionAmount').value.replace(/\,/g, '');
            var totalDeductions = parseFloat(deductionAmountValue);
            var netAmount = parseFloat(principalAmountValue) - parseFloat(totalDeductions);
            var netCollectionAmount = parseFloat(principalAmountValue) + parseFloat(interestAmountValue);

            document.getElementById('loanApplicationTotalNetAmount').value = netAmount.toLocaleString();
            document.getElementById('loanApplicationTotalNetCollectionAmount').value = netCollectionAmount.toLocaleString();
            //document.getElementById('loanApplicationTotalTotalBalance').value = netCollectionAmount.toLocaleString();
        }

        // jqueries codes
        $('#loanApplicationPrincipalAmount').keyup(function () {
            computeDeductions();
        });

        // print cash voucher
        function btnCashVoucherOnClick() {
            if (isLocked) {
                window.open("/RepCashVoucherPDF/CashVoucherPDF?loanId=" + getUrlParameter("id"), "_blank");
            } else {
                toastr.error("Not Locked");
            }
        }

        // print collectibles
        function btnCollectiblesOnClick() {
            if (isLocked) {
                window.open("/RepCollectiblesPDF/Collectibles?loanId=" + getUrlParameter("id"), "_blank");
            } else {
                toastr.error("Not Locked");
            }
        }


        // add new loan application
        function btnAddLoanApplicationOnclick() {
            $("#btnLock").prop("disabled", true);
            $("#btnUnlock").prop("disabled", true);
            $("#btnClose").prop("disabled", true);
            $("#btnOptions").prop("disabled", true);
            document.getElementById("btnOptions").innerHTML = "<i class='fa fa-spinner fa-spin fa-fw'></i> Adding";

            $.ajax({
                type: "POST",
                url: '/api/loan/add/loan',
                contentType: "application/json; charset=utf-8",
                success: function (id) {
                    if (id > 0) {
                        toastr.success("Adding Successful");
                        window.setTimeout(function () {
                            window.location = '/Software/LoanApplicationDetail?id=' + id;
                        }, 1500);
                    } else {
                        toastr.error("Bad Request");
                    }
                }
            });
        }

        // delete loan application
        function btnDeleteLoanApplicationOnclick() {
            if (isLocked) {
                toastr.info("Record Locked");
            } else {
                $("#deleteConfirmationLoanApplicationModal").modal({
                    "show": true,
                    "backdrop": "static"
                });

                document.getElementById("btnConfirmDeleteLoanApplication").innerHTML = "Delete";
                $("#btnConfirmDeleteLoanApplication").prop("disabled", false);
                $("#btnCloseDeleteLoanApplicationModal").prop("disabled", false);
            }
        }
        function btnConfirmDeleteLoanApplicationOnclick() {
            document.getElementById("btnConfirmDeleteLoanApplication").innerHTML = "<i class='fa fa-spinner fa-spin fa-fw'></i> Deleting";
            $("#btnConfirmDeleteLoanApplication").prop("disabled", true);
            $("#btnCloseDeleteLoanApplicationModal").prop("disabled", true);

            $.ajax({
                url: '/api/loan/delete/' + getUrlParameter("id"),
                type: "DELETE",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                statusCode: {
                    200: function () {
                        toastr.success("Delete Successful");
                        window.setTimeout(function () {
                            window.location = "/Software/LoanApplicationList";
                        }, 1500);
                    },
                    404: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Not Found");
                        $('#deleteConfirmationLoanApplicationModal').modal('hide');
                        document.getElementById("btnConfirmDeleteLoanApplication").innerHTML = "Delete";
                        $("#btnConfirmDeleteLoanApplication").prop("disabled", false);
                        $("#btnCloseDeleteLoanApplicationModal").prop("disabled", false);
                    },
                    400: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Bad Request");
                        $('#deleteConfirmationLoanApplicationModal').modal('hide');
                        document.getElementById("btnConfirmDeleteLoanApplication").innerHTML = "Delete";
                        $("#btnConfirmDeleteLoanApplication").prop("disabled", false);
                        $("#btnCloseDeleteLoanApplicationModal").prop("disabled", false);
                    }
                }
            });
        }

        function btnApplicantDetailOnClick() {
            var link = '/Software/ApplicantDetail?id=' + cboloanApplicationApplicant.selectedItem["Id"];
            window.open(link, "_blank");
        }

        function btnAreaDetailOnClick() {
            var link = '/Software/AreaDetail?id=' + cboloanApplicationApplicant.selectedItem["AreaId"];
            window.open(link, "_blank");
        }
    </script>
</body>
</html>