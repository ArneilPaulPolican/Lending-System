<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <link rel="shortcut icon" href="~/Images/dlhicon.ico">

    <!-- Title -->
    <title>Remittance Detail</title>

    <!-- Styles -->
    @Styles.Render("~/Content/css")
</head>
<body>
    <div id="wrapper">
        <!-- Header -->
        @Html.Partial("SoftwareHeader")

        <div id="page-wrapper">
            <div class="container-fluid">
                <div class="row">
                    <div class="col-lg-12">
                        <h3 class="">
                            <i class="fa fa-money fa-fw"></i> Remittance Detail <small>Edit detail page</small>
                        </h3>
                        <ol class="breadcrumb">
                            <li>
                                <a href="/Software">Dashboard</a>
                            </li>
                            <li>
                                <a href="/Software/RemittanceList">Remittance List</a>
                            </li>
                            <li class="active">
                                Remittance Detail
                            </li>
                        </ol>
                    </div>
                </div>
                <div class="panel panel-default">
                    <div class="panel-heading" align="right">
                        <div class="dropdown">
                            <button class="btn btn-primary" id="btnLock" onclick="btnLockOnClick()">
                                <i class="fa fa-lock fa-fw"></i> Lock
                            </button>
                            <button class="btn btn-primary" id="btnUnlock" onclick="btnUnlockOnClick()">
                                <i class="fa fa-unlock fa-fw"></i> Unlock
                            </button>
                            <button class="btn btn-primary" type="button" id="btnOptions" data-toggle="dropdown">
                                <i class="fa fa-bars fa-fw"></i>
                            </button>
                            <ul class="dropdown-menu dropdown-menu-right">
                                <li class="dropdown-header">Options</li>
                                <li><a href="#" onclick="btnAddRemittanceOnclick()"><i class="fa fa-plus fa-fw"></i> &nbsp; New Remittance</a></li>
                                <li><a href="#" onclick="btnDeleteRemittanceOnclick()"><i class="fa fa-trash fa-fw"></i> &nbsp; Delete</a></li>
                            </ul>
                        </div>
                    </div>
                    <div class="panel-body">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="panel panel-default">
                                    <div class="panel-heading">
                                        Detail
                                    </div>
                                    <div class="panel-body">
                                        <div class="form-horizontal">
                                            <div class="form-group">
                                                <label class="control-label col-sm-4">Remittance No.</label>
                                                <div class="col-sm-8">
                                                    <input type="text" class="form-control requiredRemittances" id="remittanceNo" placeholder="Remittance No." />
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label class="control-label col-sm-4">Remittance Date</label>
                                                <div class="col-sm-8">
                                                    <div id="cboRemittanceDateValue" style="width: 100%;"></div>
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label class="control-label col-sm-4">Area</label>
                                                <div class="col-sm-8">
                                                    <div class="input-group">
                                                        <div id="cboRemittanceArea" style="width: 100%;"></div>
                                                        <div class="input-group-btn">
                                                            <button class="btn btn-primary" onclick="btnAreaDetailOnClick()">
                                                                <i class="fa fa-edit fa-fw"></i>
                                                            </button>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label class="control-label col-sm-4">Remiited By</label>
                                                <div class="col-sm-8">
                                                    <div class="input-group">
                                                        <div id="cboRemittanceStaff" style="width: 100%;"></div>
                                                        <div class="input-group-btn">
                                                            <button class="btn btn-primary" onclick="btnStaffDetailOnClick()">
                                                                <i class="fa fa-edit fa-fw"></i>
                                                            </button>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label class="control-label col-sm-4">Particulars</label>
                                                <div class="col-sm-8">
                                                    <textarea class="form-control requiredRemittances" rows="5" id="remittanceParticulars" placeholder="Particulars"></textarea>
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label class="control-label col-sm-4">Prepared By</label>
                                                <div class="col-sm-8">
                                                    <div id="cboRemittancePreparedBy" style="width: 100%;"></div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="panel panel-default">
                                    <div class="panel-heading">
                                        Enter Amount
                                    </div>
                                    <div class="panel-body">
                                        <form class="form-horizontal">
                                            <div class="form-group">
                                                <label class="control-label col-sm-4">Amount</label>
                                                <div class="col-sm-8">
                                                    <div class="input-group numberField">
                                                        <span class="input-group-addon">&#8369;</span>
                                                        <input type="text" class="form-control numberField requiredRemittances" id="remittanceAmount" placeholder="0.00" />
                                                    </div>
                                                </div>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                                <div class="panel panel-default">
                                    <div class="panel-body">
                                        <div class="row">
                                            <div class="col-md-6">
                                                <p>Created by:</p>
                                                <div style="padding-left: 10px;">
                                                    <i class="fa fa-key fa-fw"></i> <label id="stampCreatedBy">NA</label>
                                                    <br />
                                                    <small><i class="fa fa-calendar fa-fw"></i> &nbsp;<span id="stampCreatedDate">mm/dd/yyyy</span></small>
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <p>Updated by:</p>
                                                <div style="padding-left: 10px;">
                                                    <i class="fa fa-key fa-fw"></i> <label id="stampUpdatedBy">NA</label>
                                                    <br />
                                                    <small><i class="fa fa-calendar fa-fw"></i> &nbsp;<span id="stampUpdatedDate">mm/dd/yyyy</span></small>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- delete confirmation collection modal -->
    <div class="modal fade" id="deleteConfirmationRemittanceModal" role="dialog">
        <div class="modal-dialog modal-sm">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Delete Remittance</h4>
                </div>
                <div class="modal-body">
                    Delete?
                </div>
                <div class="modal-footer">
                    <button class="btn btn-danger" id="btnConfirmDeleteRemittance" onclick="btnConfirmDeleteRemittanceOnclick()">Delete</button>
                    <button class="btn btn-default" id="btnCloseDeleteRemittanceModal" data-dismiss="modal">No</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Scripts -->
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    <script type="text/javascript">

        var remittanceId;
        var cboRemittanceDateValue;
        var cboRemittanceArea;
        var cboRemittanceStaff;
        var cboRemittancePreparedBy;

        var newDate = new Date();
        var remittanceDateValue = [newDate.getMonth() + 1, newDate.getDate(), newDate.getFullYear()].join('-');

        var isLocked = false;

        function createRemittanceDate() {
            cboRemittanceDateValue.dispose();
            cboRemittanceDateValue = new wijmo.input.InputDate('#cboRemittanceDateValue', {
                format: 'MM-dd-yyyy',
                value: new Date(remittanceDateValue),
                mask: '99-99-9999',
                onValueChanged: function () {
                    var thisDateValue = [this.value.getMonth() + 1, this.value.getDate(), this.value.getFullYear()].join('-');
                    remittanceDateValue = thisDateValue;
                }
            });

            createCboAreaForRemittance();
        }

        function createCboAreaForRemittance() {
            var areaArray = new Array();
            $.ajax({
                url: '/api/area/list',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (areaResults) {
                    var disabled = true;
                    if (areaResults.length > 0) {
                        for (i = 0; i < areaResults.length; i++) {
                            areaArray.push({
                                Id: areaResults[i]["Id"],
                                Area: areaResults[i]["Area"],
                            });
                        }

                        disabled = false;
                    }

                    createCboStaffForRemittance();

                    cboRemittanceArea.dispose();
                    cboRemittanceArea = new wijmo.input.ComboBox('#cboRemittanceArea', {
                        isDisabled: disabled,
                        placeholder: "Select",
                        itemsSource: areaArray,
                        isEditable: false,
                        isRequired: true,
                        displayMemberPath: "Area",
                        selectedValuePath: "Area"
                    });
                }
            });
        }

        function createCboStaffForRemittance() {
            var staffArray = new Array();
            $.ajax({
                url: '/api/staff/list',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (staffResults) {
                    var disabled = true;
                    if (staffResults.length > 0) {
                        for (i = 0; i < staffResults.length; i++) {
                            staffArray.push({
                                Id: staffResults[i]["Id"],
                                Staff: staffResults[i]["Staff"],
                            });
                        }

                        disabled = false;
                    }

                    getUser();

                    cboRemittanceStaff.dispose();
                    cboRemittanceStaff = new wijmo.input.ComboBox('#cboRemittanceStaff', {
                        isDisabled: disabled,
                        itemsSource: staffArray,
                        isEditable: false,
                        isRequired: true,
                        displayMemberPath: "Staff",
                        selectedValuePath: "Staff"
                    });
                }
            });
        }

        // get users
        function getUser() {
            var userArray = new Array();
            $.ajax({
                url: '/api/user/list',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (userrResults) {
                    var disabled = true;
                    if (userrResults.length > 0) {
                        for (i = 0; i < userrResults.length; i++) {
                            userArray.push({
                                Id: userrResults[i]["Id"],
                                FullName: userrResults[i]["FullName"],
                            });
                        }

                        disabled = false;
                    }

                    getRemittanceById();

                    cboRemittancePreparedBy.dispose();
                    cboRemittancePreparedBy = new wijmo.input.ComboBox('#cboRemittancePreparedBy', {
                        isDisabled: true,
                        placeholder: "Select",
                        itemsSource: userArray,
                        isEditable: false,
                        isRequired: true,
                        displayMemberPath: "FullName",
                        selectedValuePath: "FullName"
                    });
                }
            });
        }

        // get loan application by id
        function getRemittanceById() {
            $.ajax({
                url: '/api/remmittance/get/' + getUrlParameter("id"),
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (remmittanceResult) {
                    if (remmittanceResult != null) {
                        document.getElementById("remittanceNo").disabled = true;
                        cboRemittancePreparedBy.disabled = true;
                        document.getElementById("remittanceNo").value = "RM-" + remmittanceResult.RemittanceNumber;
                        cboRemittanceDateValue.value = new Date(remmittanceResult.RemittanceDate);
                        cboRemittanceArea.selectedValue = remmittanceResult.Area;
                        cboRemittanceStaff.selectedValue = remmittanceResult.Staff;
                        cboRemittancePreparedBy.selectedValue = remmittanceResult.PreparedByUser;
                        document.getElementById("remittanceParticulars").value = remmittanceResult.Particulars;
                        document.getElementById("remittanceAmount").value = remmittanceResult.RemitAmount.toLocaleString();

                        document.getElementById('stampCreatedBy').innerHTML = remmittanceResult.CreatedByUser;
                        document.getElementById('stampCreatedDate').innerHTML = remmittanceResult.CreatedDateTime;
                        document.getElementById('stampUpdatedBy').innerHTML = remmittanceResult.UpdatedByUser;
                        document.getElementById('stampUpdatedDate').innerHTML = remmittanceResult.UpdatedDateTime;
                        if (remmittanceResult.IsLocked == true) {
                            $("#btnLock").prop("disabled", true);

                            cboRemittanceDateValue.isDisabled = true;
                            cboRemittanceArea.isDisabled = true;
                            cboRemittanceStaff.isDisabled = true;

                            document.getElementById("remittanceParticulars").disabled = true;
                            document.getElementById('remittanceAmount').disabled = true;
                            isLocked = true;
                        } else {
                            $("#btnUnlock").prop("disabled", true);
                        }
                    } else {
                        alert("The record you'd requested has no data");
                        window.history.back();
                    }
                }
            });
        }

        function btnUnlockOnClick() {
            document.getElementById("btnUnlock").innerHTML = "<i class='fa fa-spinner fa-spin fa-fw'></i> Unlocking";
            $("#btnUnlock").prop("disabled", true);
            $("#btnOptions").prop("disabled", true);

            $.ajax({
                type: "PUT",
                url: '/api/remittance/unlock/' + getUrlParameter("id"),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                statusCode: {
                    200: function () {
                        toastr.success("Unlock Successful");
                        window.setTimeout(function () {
                            location.reload();
                        }, 1500);
                    },
                    404: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Not Found");

                        document.getElementById("btnUnlock").innerHTML = "<i class='fa fa-unlock fa-fw'></i> Unlock";
                        $("#btnUnlock").prop("disabled", false);
                    },
                    400: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Bad Request");

                        document.getElementById("btnUnlock").innerHTML = "<i class='fa fa-unlock fa-fw'></i> Unlock";
                        $("#btnUnlock").prop("disabled", false);
                    }
                }
            });
        }

        // form input validation
        function inputValidationForRemiitance() {
            var isValid = true;
            $('.requiredRemittances').each(function () {
                if ($.trim($(this).val()) == '') {
                    isValid = false;
                    $(this).css({
                        "border": "1px solid red"
                    });
                } else {
                    $(this).css({
                        "border": "",
                    });
                }
            });

            return isValid;
        }

        function btnLockOnClick() {
            var remittanceObject = {
                RemittanceDate: cboRemittanceDateValue.value,
                AreaId: cboRemittanceArea.selectedItem["Id"],
                StaffId: cboRemittanceStaff.selectedItem["Id"],
                Particulars: document.getElementById("remittanceParticulars").value,
                RemitAmount: document.getElementById("remittanceAmount").value
            }

            var remittanceData = JSON.stringify(remittanceObject);
            if (inputValidationForRemiitance()) {
                document.getElementById("btnLock").innerHTML = "<i class='fa fa-spinner fa-spin fa-fw'></i> Locking";
                $("#btnLock").prop("disabled", true);
                $("#btnOptions").prop("disabled", true);

                $.ajax({
                    type: "PUT",
                    url: '/api/remittance/lock/' + getUrlParameter("id"),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    data: remittanceData,
                    statusCode: {
                        200: function () {
                            toastr.success("Lock Successful");

                            window.setTimeout(function () {
                                location.reload();
                            }, 1500);
                        },
                        404: function (message) {
                            toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Not Found");

                            document.getElementById("btnLock").innerHTML = "<i class='fa fa-lock fa-fw'></i> Lock";
                            $("#btnLock").prop("disabled", false);
                        },
                        400: function (message) {
                            toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Bad Request");

                            document.getElementById("btnLock").innerHTML = "<i class='fa fa-lock fa-fw'></i> Lock";
                            $("#btnLock").prop("disabled", false);
                        }
                    }
                });
            } else {
                toastr.error("Invalid Entry");
            }
        }

        window.onload = function () {
            cboRemittanceDateValue = new wijmo.input.InputDate('#cboRemittanceDateValue');
            cboRemittanceArea = new wijmo.input.ComboBox('#cboRemittanceArea');
            cboRemittanceStaff = new wijmo.input.ComboBox('#cboRemittanceStaff');
            cboRemittancePreparedBy = new wijmo.input.ComboBox('#cboRemittancePreparedBy');

            createRemittanceDate();

            var canPerformActions = "@ViewData["CanPerformActions"]";
            if (canPerformActions == 1) {
                $('#btnClose').prop('disabled', false);
            } else {
                $(':button').prop('disabled', true);
                $('#btnClose').prop('disabled', false);
                getUserRightsMessageError();
            }
        }

        // add new remittance
        function btnAddRemittanceOnclick() {
            document.getElementById("btnOptions").innerHTML = "<i class='fa fa-spinner fa-spin fa-fw'></i> Adding";
            $("#btnLock").prop("disabled", true);
            $("#btnUnlock").prop("disabled", true);
            $("#btnOptions").prop("disabled", true);

            $.ajax({
                type: "POST",
                url: '/api/remittance/add',
                contentType: "application/json; charset=utf-8",
                success: function (id) {
                    if (id > 0) {
                        toastr.success("Adding Successful");
                        window.setTimeout(function () {
                            window.location = '/Software/RemittanceDetail?id=' + id;
                        }, 1500);
                    } else {
                        toastr.error("Bad Request");
                    }
                }
            });
        }

        // delete loan application
        function btnDeleteRemittanceOnclick() {
            if (isLocked) {
                toastr.info("Record Locked");
            } else {
                $("#deleteConfirmationRemittanceModal").modal({
                    "show": true,
                    "backdrop": "static"
                });

                document.getElementById("btnConfirmDeleteRemittance").innerHTML = "Delete";
                $("#btnConfirmDeleteRemittance").prop("disabled", false);
                $("#btnCloseDeleteRemittanceModal").prop("disabled", false);
            }
        }
        function btnConfirmDeleteRemittanceOnclick() {
            document.getElementById("btnConfirmDeleteRemittance").innerHTML = "<i class='fa fa-spinner fa-spin fa-fw'></i> Deleting";
            $("#btnConfirmDeleteRemittance").prop("disabled", true);
            $("#btnCloseDeleteRemittanceModal").prop("disabled", true);

            $.ajax({
                url: '/api/remittance/delete/' + getUrlParameter("id"),
                type: "DELETE",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                statusCode: {
                    200: function () {
                        toastr.success("Delete Successful");
                        window.setTimeout(function () {
                            window.location = "/Software/RemittanceList";
                        }, 1500);
                    },
                    404: function () {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Not Found");
                        $('#deleteConfirmationRemittanceModal').modal('hide');
                        document.getElementById("btnConfirmDeleteRemittance").innerHTML = "Delete";
                        $("#btnConfirmDeleteRemittance").prop("disabled", false);
                        $("#btnCloseDeleteRemittanceModal").prop("disabled", false);
                    },
                    400: function () {
                        toastr.error("Bad Request");
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Bad Request");
                        document.getElementById("btnConfirmDeleteRemittance").innerHTML = "Delete";
                        $("#btnConfirmDeleteRemittance").prop("disabled", false);
                        $("#btnCloseDeleteRemittanceModal").prop("disabled", false);
                    }
                }
            });
        }

        function btnStaffDetailOnClick() {
            var link = '/Software/StaffDetail?id=' + cboRemittanceStaff.selectedItem["Id"];
            window.open(link, "_blank");
        }

        function btnAreaDetailOnClick() {
            var link = '/Software/AreaDetail?id=' + cboRemittanceArea.selectedItem["Id"];
            window.open(link, "_blank");
        }
    </script>
</body>
</html>