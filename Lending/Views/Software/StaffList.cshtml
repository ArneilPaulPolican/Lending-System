<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <!-- Title -->
    <title>Staff List</title>

    <!-- Styles -->
    @Styles.Render("~/Content/css")
</head>
<body>
    <!-- Header -->
    @Html.Partial("HomeHeader")

    <section class="software-section">
        <div class="container">
            @Html.Partial("SoftwareMenu")
            <br /><br />
            <div class="panel panel-default">
                <div class="panel-heading">
                    <h4><i class="fa fa-user fa-fw"></i> Staffs</h4>
                </div>
                <div class="panel-heading">
                    <table style="width: 100%">
                        <tr>
                            <td>
                                <div class="input-group">
                                    <span class="input-group-addon"><i class="fa fa-search fa-fw"></i> </span>
                                    <input type="text" id="searchStaff" class="form-control" placeholder="Search" />
                                </div>
                            </td>
                            <td>&nbsp;&nbsp;&nbsp;</td>
                            <td align="right">
                                <button class="btn btn-primary" id="btnAddStaff" onclick="btnAddStaffOnclick()">
                                    <i class="fa fa-plus fa-fw"></i>&nbsp; Add
                                </button>
                                <button class="btn btn-danger" id="btnClose" onclick="window.location = '/Software'">
                                    <i class="fa fa-close fa-fw"></i> Close
                                </button>
                            </td>
                        </tr>
                    </table>
                </div>
                <div class="panel-body">
                    <div id="staffListFlexGrid" class="grid"></div>
                </div>
            </div>
            <div class="panel panel-default">
                <div class="panel-heading">
                    User security stamp
                </div>
                <div class="panel-body">
                    <div class="row">
                        <div class="col-md-6">
                            <p>Created by:</p>
                            <div style="padding-left: 10px;">
                                <i class="fa fa-key fa-fw"></i> <label id="stampCreatedBy">NA</label>
                                <br />
                                <small><i class="fa fa-calendar fa-fw"></i> &nbsp;<span id="stampCreatedDate">mm/dd/yyyy</span></small>
                            </div>
                            <br />
                        </div>
                        <div class="col-md-6">
                            <p>Updated by:</p>
                            <div style="padding-left: 10px;">
                                <i class="fa fa-key fa-fw"></i> <label id="stampUpdatedBy">NA</label>
                                <br />
                                <small><i class="fa fa-calendar fa-fw"></i> &nbsp;<span id="stampUpdatedDate">mm/dd/yyyy</span></small>
                            </div>
                            <br />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- Footer -->
    @Html.Partial("HomeFooter")

    <!-- delete confirmation staff modal -->
    <div class="modal fade" id="deleteConfirmationStaffModal" role="dialog">
        <div class="modal-dialog modal-sm">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Delete Staff</h4>
                </div>
                <div class="modal-body">
                    Are you sure that you want to delete this Staff?
                </div>
                <div class="modal-footer">
                    <button class="btn btn-danger" id="btnConfirmDeleteStaff" onclick="btnConfirmDeleteStaffOnclick()">Delete</button>
                    <button class="btn btn-default" id="btnCloseDeleteStaffModal" data-dismiss="modal">No</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Scripts -->
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    <script type="text/javascript">
        // glebal variable
        var staffCollectionView;
        var staffFlexGrid;

        // get staffs
        function getStaffList() {
            var staffs = new wijmo.collections.ObservableArray;
            $.ajax({
                url: '/api/staff/list',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (staffListResult) {
                    if (staffListResult.length > 0) {
                        for (i = 0; i < staffListResult.length; i++) {
                            var isLocked = false;
                            if (staffListResult[i]["IsLocked"]) {
                                isLocked = true;
                            }

                            var disabledButton = "disabled";
                            var canPerformActions = "@ViewData["CanPerformActions"]";
                            if (canPerformActions == 1) {
                                disabledButton = "";
                            }

                            staffs.push({
                                EditButton: "<button class='btn btn-primary btn-xs btn-block' onclick='editStaffOnclick()'" + disabledButton + "><i class='fa fa-edit fa-fw'></i> Edit</button>",
                                DeleteButton: "<button class='btn btn-danger btn-xs btn-block'  onclick='deleteStaffOnclick(" + isLocked + ")'" + disabledButton + "><i class='fa fa-trash fa-fw'></i> Delete</button>",
                                Id: staffListResult[i]["Id"],
                                StaffNumber: staffListResult[i]["StaffNumber"],
                                Staff: staffListResult[i]["Staff"],
                                ContactNumber: staffListResult[i]["ContactNumber"],
                                Address: staffListResult[i]["Address"],
                                StaffManualNumber: staffListResult[i]["StaffManualNumber"],
                                StaffRoleId: staffListResult[i]["StaffRoleId"],
                                StaffRole: staffListResult[i]["StaffRole"],
                                IsLocked: staffListResult[i]["IsLocked"],
                                CreatedByUserId: staffListResult[i]["CreatedByUserId"],
                                CreatedByUser: staffListResult[i]["CreatedByUser"],
                                CreatedDateTime: staffListResult[i]["CreatedDateTime"],
                                UpdatedByUserId: staffListResult[i]["UpdatedByUserId"],
                                UpdatedByUser: staffListResult[i]["UpdatedByUser"],
                                UpdatedDateTime: staffListResult[i]["UpdatedDateTime"]
                            });
                        }
                    }

                    NProgress.done();
                }
            });
            return staffs;
        }

        // edit staff
        function editStaffOnclick() {
            staffCollectionView.editItem(staffCollectionView.currentItem);
            var staffCurrentEditItem = staffCollectionView.currentEditItem;
            window.location = '/Software/StaffDetail?id=' + staffCurrentEditItem.Id;
        }

        // delete staff
        function deleteStaffOnclick(isLocked) {
            if (isLocked) {
                toastr.info("Record Locked");
            } else {
                $("#deleteConfirmationStaffModal").modal({
                    "show": true,
                    "backdrop": "static"
                });

                document.getElementById("btnConfirmDeleteStaff").innerHTML = "Delete";
                $("#btnConfirmDeleteStaff").prop("disabled", false);
                $("#btnCloseDeleteStaffModal").prop("disabled", false);
            }
        }

        function btnConfirmDeleteStaffOnclick() {
            document.getElementById("btnConfirmDeleteStaff").innerHTML = "<i class='fa fa-spinner fa-spin fa-fw'></i> Deleting";
            $("#btnConfirmDeleteStaff").prop("disabled", true);
            $("#btnCloseDeleteStaffModal").prop("disabled", true);

            staffCollectionView.editItem(staffCollectionView.currentItem);
            var id = staffCollectionView.currentEditItem.Id;
            $.ajax({
                url: '/api/staff/delete/' + id,
                type: "DELETE",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                statusCode: {
                    200: function () {
                        toastr.success("Delete Successful");

                        $('#deleteConfirmationStaffModal').modal('hide');

                        staffCollectionView = new wijmo.collections.CollectionView(getStaffList());
                        staffCollectionView.canFilter = true;

                        var filterText = '';
                        $('#searchStaff').keyup(function () {
                            filterText = this.value.toLowerCase();
                            staffCollectionView.refresh();
                        });

                        staffCollectionView.filter = function (item) {
                            return !filterText || (item.StaffNumber.toLowerCase().indexOf(filterText) > -1)
                                               || (item.Staff.toLowerCase().indexOf(filterText) > -1)
                                               || (item.ContactNumber.toLowerCase().indexOf(filterText) > -1)
                                               || (item.StaffManualNumber.toLowerCase().indexOf(filterText) > -1)
                                               || (item.StaffRole.toLowerCase().indexOf(filterText) > -1);
                        }

                        // Flex Grid
                        staffFlexGrid.itemsSource = staffCollectionView;
                        staffFlexGrid.trackChanges = true;
                    },
                    404: function () {
                        toastr.error("Delete Not Found");
                        $('#deleteConfirmationStaffModal').modal('hide');
                        $("#btnConfirmDeleteStaff").prop("disabled", false);
                        $("#btnCloseDeleteStaffModal").prop("disabled", false);
                    },
                    400: function () {
                        toastr.error("Bad Request");
                        $('#deleteConfirmationStaffModal').modal('hide');
                        $("#btnConfirmDeleteStaff").prop("disabled", false);
                        $("#btnCloseDeleteStaffModal").prop("disabled", false);
                    }
                }
            });
        }

        // add new staff
        function btnAddStaffOnclick() {
            $("#btnAddStaff").prop("disabled", true);
            document.getElementById("btnAddStaff").innerHTML = "<i class='fa fa-spinner fa-spin fa-fw'></i> Adding new Staff";

            $.ajax({
                type: "POST",
                url: '/api/staff/add',
                contentType: "application/json; charset=utf-8",
                success: function (id) {
                    if (id > 0) {
                        window.location = '/Software/StaffDetail?id=' + id;
                    } else {
                        toastr.error("Internal Server Error");
                    }
                }
            });
        }

        // stamp security
        function updateStampSecurity() {
            var item = staffCollectionView.currentItem;
            document.getElementById('stampCreatedBy').innerHTML = item.CreatedByUser;
            document.getElementById('stampCreatedDate').innerHTML = item.CreatedDateTime;
            document.getElementById('stampUpdatedBy').innerHTML = item.UpdatedByUser;
            document.getElementById('stampUpdatedDate').innerHTML = item.UpdatedDateTime;
        }

        // ready function
        window.onload = function () {
            NProgress.start();
            toastrModification();

            staffCollectionView = new wijmo.collections.CollectionView(getStaffList());
            staffCollectionView.canFilter = true;

            var filterText = '';
            $('#searchStaff').keyup(function () {
                filterText = this.value.toLowerCase();
                staffCollectionView.refresh();
            });

            staffCollectionView.filter = function (item) {
                return !filterText || (item.StaffNumber.toLowerCase().indexOf(filterText) > -1)
                                   || (item.Staff.toLowerCase().indexOf(filterText) > -1)
                                   || (item.ContactNumber.toLowerCase().indexOf(filterText) > -1)
                                   || (item.StaffManualNumber.toLowerCase().indexOf(filterText) > -1)
                                   || (item.StaffRole.toLowerCase().indexOf(filterText) > -1);
            }

            staffCollectionView.currentChanged.addHandler(function (sender, args) {
                updateStampSecurity();
            });

            // Flex Grid
            staffFlexGrid = new wijmo.grid.FlexGrid('#staffListFlexGrid');
            staffFlexGrid.initialize({
                columns: [
                            {
                                "header": "Edit",
                                "binding": "EditButton",
                                "width": 80,
                                "align": "center",
                                "allowResizing": false,
                                "isContentHtml": true
                            },
                            {
                                "header": "Delete",
                                "binding": "DeleteButton",
                                "width": 80,
                                "align": "center",
                                "allowResizing": false,
                                "isContentHtml": true
                            },
                            {
                                "header": "Staff Number",
                                "binding": "StaffNumber",
                                "allowSorting": true,
                                "width": "1.5*"
                            },
                            {
                                "header": "Staff",
                                "binding": "Staff",
                                "allowSorting": true,
                                "width": "3*"
                            },
                            {
                                "header": "Manual Number",
                                "binding": "StaffManualNumber",
                                "allowSorting": true,
                                "width": "2*"
                            },
                            {
                                "header": "Contact Number",
                                "binding": "ContactNumber",
                                "allowSorting": true,
                                "width": "2.5*"
                            },
                            {
                                "header": "Role",
                                "binding": "StaffRole",
                                "allowSorting": true,
                                "width": "2*"
                            },
                            {
                                "header": "L",
                                "binding": "IsLocked",
                                "allowSorting": true,
                                "width": "0.5*"
                            }
                ],
                autoGenerateColumns: false,
                itemsSource: staffCollectionView,
                isReadOnly: true,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            staffFlexGrid.trackChanges = true;

            var canPerformActions = "@ViewData["CanPerformActions"]";
            if (canPerformActions == 1) {
                $('#btnClose').prop('disabled', false);
            } else {
                $(':button').prop('disabled', true);
                $('#btnClose').prop('disabled', false);
            }
        }
</script>
</body>
</html>