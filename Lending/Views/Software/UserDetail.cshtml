<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <!-- Title -->
    <title>User Detail</title>

    <!-- Styles -->
    @Styles.Render("~/Content/css")
</head>
<body>
    <!-- Header -->
    @Html.Partial("HomeHeader")

    <section class="software-section">
        <div class="container">
            @Html.Partial("SoftwareMenu")
            <br /><br />
            <div class="panel panel-default">
                <div class="panel-heading">
                    <table style="width: 100%">
                        <tr>
                            <td>
                                <h4><i class="fa fa-key fa-fw"></i> User Detail</h4>
                            </td>
                            <td align="right">
                                <button class="btn btn-primary" id="btnLockUser" onclick="btnLockUserOnclick()">
                                    <i class="fa fa-lock fa-fw"></i> Lock
                                </button>
                                <button class="btn btn-primary" id="btnUnlockUser" onclick="btnUnlockUserOnclick()">
                                    <i class="fa fa-unlock fa-fw"></i> Unlock
                                </button>
                                <button class="btn btn-danger" id="btnClose" onclick="window.location = '/Software/UserList'">
                                    <i class="fa fa-close fa-fw"></i> Close
                                </button>
                            </td>
                        </tr>
                    </table>
                </div>
                <div class="panel-body">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="panel panel-default">
                                <div class="panel-body">
                                    <div class="form-group">
                                        <label>Username</label><br />
                                        <input type="text" class="form-control" id="Username" placeholder="Username" disabled />
                                    </div>
                                    <div class="form-group">
                                        <label>Fullname</label><br />
                                        <input type="text" class="form-control" id="Fullname" placeholder="Fullname" disabled />
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="panel panel-default">
                                <div class="panel-body">
                                    <p>Created Date:</p>
                                    <div style="padding-left: 10px;">
                                        <small><i class="fa fa-calendar fa-fw"></i> &nbsp;<span id="stampCreatedDate">mm/dd/yyyy</span></small>
                                    </div>
                                    <br />
                                    <p>Updated Date:</p>
                                    <div style="padding-left: 10px;">
                                        <small><i class="fa fa-calendar fa-fw"></i> &nbsp;<span id="stampUpdatedDate">mm/dd/yyyy</span></small>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <ul class="nav nav-tabs">
                <li class="active"><a data-toggle="tab" href="#companyDetail" id="companyDetailTab">Company Detail</a></li>
                <li><a data-toggle="tab" href="#userRights" id="userRightsTab">User Rights</a></li>
            </ul>
            <br />
            <div class="tab-content">
                <div id="companyDetail" class="tab-pane fade in active">
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            Company Detail
                        </div>
                        <div class="panel-body">
                            <div class="row">
                                <div class="col-md-7">
                                    <div class="form-group">
                                        <label>Assigned Company</label><br />
                                        <div id="cboCompanyName" style="width: 100%;"></div>
                                    </div>
                                    <div class="form-group">
                                        <label>Address</label><br />
                                        <textarea class="form-control" rows="5" id="companyAddress" placeholder="Company Address" disabled></textarea>
                                    </div>
                                </div>
                                <div class="col-md-5">
                                    <div class="form-group">
                                        <label>Contact Number</label><br />
                                        <input type="text" class="form-control" id="companyContactNumber" placeholder="Contact Number" disabled />
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            Branches
                        </div>
                        <div class="panel-body">
                            <div id="branchFlexGrid"></div>
                        </div>
                    </div>
                </div>
                <div id="userRights" class="tab-pane fade">
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            <table style="width: 100%">
                                <tr>
                                    <td>
                                        List of Forms for user rights
                                    </td>
                                    <td align="right">
                                        <button class="btn btn-primary btn-sm" id="btnAddUserForm" onclick="bbtnAddUserFormOnclick()">
                                            <i class="fa fa-plus fa-fw"></i> Add
                                        </button>
                                        <button class="btn btn-primary btn-sm" id="btnCopyRightsUserForm" onclick="btnCopyRightsUserFormOnclick()">
                                            <i class="fa fa-copy fa-fw"></i> Copy Rights
                                        </button>
                                    </td>
                                </tr>
                            </table>
                        </div>
                        <div class="panel-body">
                            <div id="userFormFlexgrid"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- user form detail edit  -->
    <div class="modal fade" id="userFormDetailEditModal" role="dialog">
        <div class="modal-dialog modal-sm">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Branch Detail</h4>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        <label>Form</label><br />
                        <div id="cboForm" style="width: 100%;"></div>
                    </div>
                    <div class="form-group">
                        <label>Can Perform Actions</label><br />
                        <input type="checkbox" id="CanPerformActions" />
                    </div>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-primary" id="btnSaveUserForm" onclick="btnSaveUserFormOnclick()"><i class="fa fa-save fa-fw"></i> Save</button>
                    <button class="btn btn-danger" id="btnCancelUserForm" data-dismiss="modal"><i class="fa fa-close fa-fw"></i> Cancel</button>
                </div>
            </div>
        </div>
    </div>

    <!-- user form for copy rights confirmation -->
    <div class="modal fade" id="copyUserRightsConfirmationModal" role="dialog">
        <div class="modal-dialog modal-sm">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title"> Copy Rights </h4>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        <label>User</label><br />
                        <div id="cboUserCopyRights" style="width: 100%;"></div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-primary" id="btnUpdateUserFormCopyRights" onclick="btnUpdateUserFormCopyRightsOnclick()"><i class="fa fa-save fa-fw"></i> Save</button>
                    <button class="btn btn-danger" id="btnCancelUserFormCopyRights" data-dismiss="modal"><i class="fa fa-close fa-fw"></i> Cancel</button>
                </div>
            </div>
        </div>
    </div>

    <!-- delete confirmation user form detail modal -->
    <div class="modal fade" id="deleteConfirmationUserFormDetailModal" role="dialog">
        <div class="modal-dialog modal-sm">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Delete User Form</h4>
                </div>
                <div class="modal-body">
                    Are you sure that you want to delete this user form?
                </div>
                <div class="modal-footer">
                    <button class="btn btn-danger" id="btnConfirmDeleteUserForm" onclick="btnConfirmDeleteUserFormOnclick()">Delete</button>
                    <button class="btn btn-default" id="btnConfirmCloseUserForm" data-dismiss="modal">No</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Footer -->
    @Html.Partial("HomeFooter")

    <!-- Scripts -->
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    <script type="text/javascript">
        // global variables
        var cboCompanyName;
        var isLocked = false;
        var branchCollectionView;
        var branchFlexGrid;
        var userFormCollectionView;
        var userFormFlexgrid;
        var cboForm;
        var cboUserCopyRights;

        // get company data
        function getUserDetail() {
            $.ajax({
                url: '/api/user/getById/' + getUrlParameter("id"),
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (userDetailResult) {
                    if (userDetailResult != null) {
                        document.getElementById("Username").value = userDetailResult.Username;
                        document.getElementById("Fullname").value = userDetailResult.FullName;
                        document.getElementById('stampCreatedDate').innerHTML = userDetailResult.CreatedDate;
                        document.getElementById('stampUpdatedDate').innerHTML = userDetailResult.UpdatedDate;
                        cboCompanyName.selectedValue = userDetailResult.Company;

                        if (userDetailResult.IsLocked) {
                            cboCompanyName.disabled = true;
                            $("#btnLockUser").prop("disabled", true);
                            $("#btnAddUserForm").prop("disabled", true);
                            $("#btnCopyRightsUserForm").prop("disabled", true);

                            isLocked = true;
                        } else {
                            $("#btnUnlockUser").prop("disabled", true);
                        }
                    } else {
                        alert("The record you'd requested has no data");
                        window.history.back();
                    }

                    NProgress.done();
                }
            });
        }

        // get company
        function getCompany() {
            NProgress.start();
            var companyArray = new Array();
            $.ajax({
                url: '/api/company/list',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (companyResults) {
                    var disabled = true;
                    if (companyResults.length > 0) {
                        for (i = 0; i < companyResults.length; i++) {
                            companyArray.push({
                                Id: companyResults[i]["Id"],
                                Company: companyResults[i]["Company"],
                                Address: companyResults[i]["Address"],
                                ContactNumber: companyResults[i]["ContactNumber"]
                            });
                        }
                        disabled = false;
                    }

                    cboCompanyName.dispose();
                    cboCompanyName = new wijmo.input.ComboBox('#cboCompanyName', {
                        disabled: disabled,
                        placeholder: "Select",
                        itemsSource: companyArray,
                        isEditable: false,
                        required: true,
                        displayMemberPath: "Company",
                        selectedValuePath: "Company",
                        onSelectedIndexChanged: function () {
                            document.getElementById("companyAddress").value = this.selectedItem["Address"];
                            document.getElementById("companyContactNumber").value = this.selectedItem["ContactNumber"];

                            branchCollectionView = new wijmo.collections.CollectionView(getBranchesByCompanyId());

                            // Flex Grid
                            branchFlexGrid.itemsSource = branchCollectionView;
                            branchFlexGrid.trackChanges = true;
                        }
                    });

                    document.getElementById("companyAddress").value = cboCompanyName.selectedItem["Address"];
                    document.getElementById("companyContactNumber").value = cboCompanyName.selectedItem["ContactNumber"];

                    getUserDetail();
                    createBranchFlexgrid();
                }
            });
        }

        // get branches
        function getBranchesByCompanyId() {
            var branchesArray = new wijmo.collections.ObservableArray;
            $.ajax({
                url: '/api/branch/listByCompanyId/' + cboCompanyName.selectedItem["Id"],
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (branchListResult) {
                    if (branchListResult.length > 0) {
                        for (i = 0; i < branchListResult.length; i++) {
                            branchesArray.push({
                                Id: branchListResult[i]["Id"],
                                CompanyId: branchListResult[i]["CompanyId"],
                                Company: branchListResult[i]["Company"],
                                Branch: branchListResult[i]["Branch"],
                                Address: branchListResult[i]["Address"],
                                ContactNumber: branchListResult[i]["ContactNumber"]
                            });
                        }
                    }

                    NProgress.done();
                }
            });

            return branchesArray;
        }

        // branch flexgrid
        function createBranchFlexgrid() {
            branchCollectionView = new wijmo.collections.CollectionView(getBranchesByCompanyId());

            // Flex Grid
            branchFlexGrid = new wijmo.grid.FlexGrid('#branchFlexGrid');
            branchFlexGrid.initialize({
                columns: [
                            {
                                "header": "Branch",
                                "binding": "Branch",
                                "allowSorting": true,
                                "width": "3*",
                            },
                            {
                                "header": "Address",
                                "binding": "Address",
                                "allowSorting": true,
                                "width": "4*",
                            },
                            {
                                "header": "Contact Number",
                                "binding": "ContactNumber",
                                "allowSorting": true,
                                "width": "2*",
                            }
                ],
                autoGenerateColumns: false,
                itemsSource: branchCollectionView,
                isReadOnly: true,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.None
            });

            branchFlexGrid.trackChanges = true;
        }

        // company detail tab
        $('#companyDetailTab').click(function () {
            NProgress.start();
            $("#companyDetail").show();
            $("#userRights").hide();

            branchCollectionView = new wijmo.collections.CollectionView(getBranchesByCompanyId());

            // Flex Grid
            branchFlexGrid.itemsSource = branchCollectionView;
            branchFlexGrid.trackChanges = true;
        });

        // user forms
        function getUserForms() {
            var userFormArray = new wijmo.collections.ObservableArray;
            $.ajax({
                url: '/api/userForm/listByUserId/' + getUrlParameter("id"),
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (userFormResults) {
                    if (userFormResults.length > 0) {
                        for (i = 0; i < userFormResults.length; i++) {
                            var btnEditButton = "<button class='btn btn-primary btn-xs btn-block' onclick='btnEditUserFormOnclick()'><i class='fa fa-edit fa-fw'></i> Edit</button>";
                            var btnDeleteButton = "<button class='btn btn-danger btn-xs btn-block' onclick='btnDeleteUserFormOnclick()'><i class='fa fa-trash fa-fw'></i> Delete</button>";
                            if (isLocked) {
                                btnEditButton = "<button class='btn btn-primary btn-xs btn-block' onclick='btnEditUserFormOnclick()' disabled><i class='fa fa-edit fa-fw'></i> Edit</button>";
                                btnDeleteButton = "<button class='btn btn-danger btn-xs btn-block' onclick='btnDeleteUserFormOnclick()' disabled><i class='fa fa-trash fa-fw'></i> Delete</button>";
                            }

                            userFormArray.push({
                                EditButton: btnEditButton,
                                DeleteButton: btnDeleteButton,
                                Id: userFormResults[i]["Id"],
                                Form: userFormResults[i]["Form"],
                                FormDescription: userFormResults[i]["FormDescription"],
                                CanPerformActions: userFormResults[i]["CanPerformActions"],
                            });
                        }
                    }

                    NProgress.done();
                }
            });

            return userFormArray;
        }

        // create flexgrid for user form list
        function createUserFormFlexGrid() {
            userFormCollectionView = new wijmo.collections.CollectionView(getUserForms());

            // Flex Grid
            userFormFlexgrid = new wijmo.grid.FlexGrid('#userFormFlexgrid');
            userFormFlexgrid.initialize({
                columns: [
                            {
                                "header": "Edit",
                                "binding": "EditButton",
                                "width": 80,
                                "align": "center",
                                "allowResizing": false,
                                "isContentHtml": true
                            },
                            {
                                "header": "Delete",
                                "binding": "DeleteButton",
                                "width": 80,
                                "align": "center",
                                "allowResizing": false,
                                "isContentHtml": true
                            },
                            {
                                "header": "Form",
                                "binding": "FormDescription",
                                "allowSorting": true,
                                "width": "4*",
                            },
                            {
                                "header": "Can Perform Actions",
                                "binding": "CanPerformActions",
                                "allowSorting": true,
                                "width": "1*",
                            }
                ],
                autoGenerateColumns: false,
                itemsSource: userFormCollectionView,
                isReadOnly: true,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            userFormFlexgrid.trackChanges = true;
        }

        // user rights tab
        $('#userRightsTab').click(function () {
            NProgress.start();
            $("#companyDetail").hide();
            $("#userRights").show();

            createUserFormFlexGrid();
            window.createUserFormFlexGrid = function () {
                return true;
            }

            userFormCollectionView = new wijmo.collections.CollectionView(getUserForms());

            // Flex Grid
            userFormFlexgrid.itemsSource = userFormCollectionView;
            userFormFlexgrid.trackChanges = true;
        });

        // create cbo form
        function createCboForms() {
            var formArray = new Array();
            $.ajax({
                url: '/api/forms/list',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (formResults) {
                    var disabled = true;
                    if (formResults.length > 0) {
                        for (i = 0; i < formResults.length; i++) {
                            formArray.push({
                                Id: formResults[i]["Id"],
                                Form: formResults[i]["Form"],
                                FormDescription: formResults[i]["FormDescription"],
                            });
                        }
                        disabled = false;
                    }

                    cboForm.dispose();
                    cboForm = new wijmo.input.ComboBox('#cboForm', {
                        disabled: disabled,
                        placeholder: "Select",
                        itemsSource: formArray,
                        isEditable: false,
                        required: true,
                        displayMemberPath: "FormDescription",
                        selectedValuePath: "FormDescription"
                    });
                }
            });
        }

        // lock user detail
        function btnLockUserOnclick() {
            document.getElementById("btnLockUser").innerHTML = "<i class='fa fa-spinner fa-spin fa-fw'></i> Locking";
            $("#btnLockUser").prop("disabled", true);
            $("#btnUnlockUser").prop("disabled", true);
            $("#btnClose").prop("disabled", true);
            $("#btnAddUserForm").prop("disabled", true);

            var userDetailObject = new Object();
            userDetailObject.CompanyId = cboCompanyName.selectedItem["Id"];
            var userDetailData = JSON.stringify(userDetailObject);

            $.ajax({
                type: "PUT",
                url: '/api/user/lock/' + getUrlParameter("id"),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: userDetailData,
                statusCode: {
                    200: function () {
                        toastr.success("Reloading the page", "Lock Successful");
                        window.setTimeout(function () {
                            location.reload();
                        }, 1500);
                    },
                    404: function () {
                        document.getElementById("btnLockUser").innerHTML = "<i class='fa fa-lock fa-fw'></i> Lock";

                        toastr.error("Not Found");

                        $("#btnLockUser").prop("disabled", false);
                        $("#btnClose").prop("disabled", false);
                    },
                    400: function () {
                        document.getElementById("btnLockUser").innerHTML = "<i class='fa fa-lock fa-fw'></i> Lock";

                        toastr.error("Bad Request");

                        $("#btnLockUser").prop("disabled", false);
                        $("#btnClose").prop("disabled", false);
                    }
                }
            });
        }

        // unlock user
        function btnUnlockUserOnclick() {
            document.getElementById("btnUnlockUser").innerHTML = "<i class='fa fa-spinner fa-spin fa-fw'></i> Unlocking";
            $("#btnLockUser").prop("disabled", true);
            $("#btnUnlockUser").prop("disabled", true);
            $("#btnClose").prop("disabled", true);
            $("#btnAddUserForm").prop("disabled", true);

            $.ajax({
                type: "PUT",
                url: '/api/user/unlock/' + getUrlParameter("id"),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                statusCode: {
                    200: function () {
                        toastr.success("Reloading the page", "Unlock Successful");
                        window.setTimeout(function () {
                            location.reload();
                        }, 1500);
                    },
                    404: function () {
                        document.getElementById("btnUnlockUser").innerHTML = "<i class='fa fa-unlock fa-fw'></i> Unlock";

                        toastr.error("Not Found");

                        $("#btnUnlockUser").prop("disabled", true);
                        $("#btnClose").prop("disabled", true);
                    },
                    400: function () {
                        document.getElementById("btnUnlockUser").innerHTML = "<i class='fa fa-unlock fa-fw'></i> Unlock";

                        toastr.error("Bad Request");

                        $("#btnUnlockUser").prop("disabled", true);
                        $("#btnClose").prop("disabled", true);
                    }
                }
            });
        }

        var userFormId = 0;

        // add user form
        function bbtnAddUserFormOnclick() {
            $("#userFormDetailEditModal").modal({
                "show": true,
                "backdrop": "static"
            });

            document.getElementById("btnSaveUserForm").innerHTML = "<i class='fa fa-save fa-fw'></i> Save";
            $("#btnSaveUserForm").prop("disabled", false);
            $("#btnCancelUserForm").prop("disabled", false);

            userFormId = 0;
            createCboForms();
            document.getElementById("CanPerformActions").checked = false;
        }

        // edit user form
        function btnEditUserFormOnclick() {
            $("#userFormDetailEditModal").modal({
                "show": true,
                "backdrop": "static"
            });

            document.getElementById("btnSaveUserForm").innerHTML = "<i class='fa fa-save fa-fw'></i> Save";
            $("#btnSaveUserForm").prop("disabled", false);
            $("#btnCancelUserForm").prop("disabled", false);

            userFormCollectionView.editItem(userFormCollectionView.currentItem);
            var userFormCurrentItem = userFormCollectionView.currentEditItem;

            userFormId = userFormCurrentItem.Id;
            cboForm.selectedValue = userFormCurrentItem.FormDescription;
            document.getElementById("CanPerformActions").checked = userFormCurrentItem.CanPerformActions;
        }

        // save user form
        function btnSaveUserFormOnclick() {
            document.getElementById("btnSaveUserForm").innerHTML = "<i class='fa fa-spinner fa-spin fa-fw'></i> Saving";
            $("#btnSaveUserForm").prop("disabled", true);
            $("#btnCancelUserForm").prop("disabled", true);

            var userFormObject = new Object();
            userFormObject.UserId = getUrlParameter("id");
            userFormObject.FormId = cboForm.selectedItem["Id"];
            userFormObject.CanPerformActions = document.getElementById("CanPerformActions").checked;
            var userFormData = JSON.stringify(userFormObject);

            if (userFormId == 0) {
                $.ajax({
                    type: "POST",
                    url: '/api/userForm/add',
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    data: userFormData,
                    statusCode: {
                        200: function () {
                            toastr.success("Save Successful");

                            $("#userFormDetailEditModal").modal("hide");

                            userFormCollectionView = new wijmo.collections.CollectionView(getUserForms());

                            // Flex Grid
                            userFormFlexgrid.itemsSource = userFormCollectionView;
                            userFormFlexgrid.trackChanges = true;
                        },
                        404: function () {
                            toastr.error("Not Found");

                            $("#userFormDetailEditModal").modal("hide");

                            document.getElementById("btnSaveUserForm").innerHTML = "<i class='fa fa-save fa-fw'></i> Save";
                            $("#btnSaveUserForm").prop("disabled", false);
                            $("#btnCancelUserForm").prop("disabled", false);
                        },
                        400: function (message) {
                            toastr.error(message.responseText.replace(/"/g, ""), "Error 400 - Bad Request");

                            $("#userFormDetailEditModal").modal("hide");

                            document.getElementById("btnSaveUserForm").innerHTML = "<i class='fa fa-save fa-fw'></i> Save";
                            $("#btnSaveUserForm").prop("disabled", false);
                            $("#btnCancelUserForm").prop("disabled", false);
                        }
                    }
                });
            } else {
                $.ajax({
                    type: "PUT",
                    url: '/api/userForm/update/' + userFormId,
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    data: userFormData,
                    statusCode: {
                        200: function () {
                            toastr.success("Update Successful");

                            $("#userFormDetailEditModal").modal("hide");

                            userFormCollectionView = new wijmo.collections.CollectionView(getUserForms());

                            // Flex Grid
                            userFormFlexgrid.itemsSource = userFormCollectionView;
                            userFormFlexgrid.trackChanges = true;
                        },
                        404: function () {
                            toastr.error("Not Found");

                            $("#userFormDetailEditModal").modal("hide");

                            document.getElementById("btnSaveUserForm").innerHTML = "<i class='fa fa-save fa-fw'></i> Save";
                            $("#btnSaveUserForm").prop("disabled", false);
                            $("#btnCancelUserForm").prop("disabled", false);
                        },
                        400: function () {
                            toastr.error("Bad Request");

                            $("#userFormDetailEditModal").modal("hide");

                            document.getElementById("btnSaveUserForm").innerHTML = "<i class='fa fa-save fa-fw'></i> Save";
                            $("#btnSaveUserForm").prop("disabled", false);
                            $("#btnCancelUserForm").prop("disabled", false);
                        }
                    }
                });
            }
        }

        // delete user form
        function btnDeleteUserFormOnclick() {
            $("#deleteConfirmationUserFormDetailModal").modal({
                "show": true,
                "backdrop": "static"
            });

            document.getElementById("btnConfirmDeleteUserForm").innerHTML = "Delete";
            $("#btnConfirmDeleteUserForm").prop("disabled", false);
            $("#btnConfirmCloseUserForm").prop("disabled", false);
        }
        function btnConfirmDeleteUserFormOnclick() {
            document.getElementById("btnConfirmDeleteUserForm").innerHTML = "<i class='fa fa-spinner fa-spin fa-fw'></i> Deleting";
            $("#btnConfirmDeleteUserForm").prop("disabled", true);
            $("#btnConfirmCloseUserForm").prop("disabled", true);

            userFormCollectionView.editItem(userFormCollectionView.currentItem);
            var userFormCurrentItem = userFormCollectionView.currentEditItem;

            $.ajax({
                type: "DELETE",
                url: '/api/userForm/delete/' + userFormCurrentItem.Id,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                statusCode: {
                    200: function () {
                        toastr.success("Delete Successful");

                        $("#deleteConfirmationUserFormDetailModal").modal("hide");

                        userFormCollectionView = new wijmo.collections.CollectionView(getUserForms());

                        // Flex Grid
                        userFormFlexgrid.itemsSource = userFormCollectionView;
                        userFormFlexgrid.trackChanges = true;
                    },
                    404: function () {
                        toastr.error("Record Not Found");

                        $("#deleteConfirmationUserFormDetailModal").modal("hide");

                        document.getElementById("btnConfirmDeleteUserForm").innerHTML = "Delete";
                        $("#btnConfirmDeleteUserForm").prop("disabled", false);
                        $("#btnConfirmCloseUserForm").prop("disabled", false);
                    },
                    400: function () {
                        toastr.error("Bad Request");

                        $("#deleteConfirmationUserFormDetailModal").modal("hide");

                        document.getElementById("btnConfirmDeleteUserForm").innerHTML = "Delete";
                        $("#btnConfirmDeleteUserForm").prop("disabled", false);
                        $("#btnConfirmCloseUserForm").prop("disabled", false);
                    }
                }
            });
        }

        // copy the rights of a particular user
        function btnCopyRightsUserFormOnclick() {
            $("#copyUserRightsConfirmationModal").modal({
                "show": true,
                "backdrop": "static"
            });

            document.getElementById("btnUpdateUserFormCopyRights").innerHTML = "<i class='fa fa-save fa-fw'></i> Update";
            $("#btnUpdateUserFormCopyRights").prop("disabled", false);
            $("#btnCancelUserFormCopyRights").prop("disabled", false);

            createCboUserForCopyRights();
        }

        // create cbo user for copy rights
        function createCboUserForCopyRights() {
            var userArray = new Array();
            $.ajax({
                url: '/api/user/list',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (userResults) {
                    var disabled = true;
                    if (userResults.length > 0) {
                        for (i = 0; i < userResults.length; i++) {
                            userArray.push({
                                Id: userResults[i]["Id"],
                                Username: userResults[i]["Username"],
                                FullName: userResults[i]["FullName"],
                            });
                        }
                        disabled = false;
                    }

                    cboUserCopyRights.dispose();
                    cboUserCopyRights = new wijmo.input.ComboBox('#cboUserCopyRights', {
                        disabled: disabled,
                        placeholder: "Select",
                        itemsSource: userArray,
                        isEditable: false,
                        required: true,
                        displayMemberPath: "FullName",
                        selectedValuePath: "FullName"
                    });
                }
            });
        }

        // copy rights confirm
        function btnUpdateUserFormCopyRightsOnclick() {
            document.getElementById("btnUpdateUserFormCopyRights").innerHTML = "<i class='fa fa-spinner fa-spin fa-fw'></i> Updating";
            $("#btnUpdateUserFormCopyRights").prop("disabled", true);
            $("#btnCancelUserFormCopyRights").prop("disabled", true);

            $.ajax({
                type: "POST",
                url: '/api/userForm/copyRights/' + getUrlParameter("id") + '/' + cboUserCopyRights.selectedItem["Id"],
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                statusCode: {
                    200: function () {
                        toastr.success("Update Successful");

                        $("#copyUserRightsConfirmationModal").modal("hide");

                        userFormCollectionView = new wijmo.collections.CollectionView(getUserForms());

                        // Flex Grid
                        userFormFlexgrid.itemsSource = userFormCollectionView;
                        userFormFlexgrid.trackChanges = true;
                    },
                    404: function () {
                        toastr.error("Record Not Found");

                        $("#copyUserRightsConfirmationModal").modal("hide");

                        document.getElementById("btnUpdateUserFormCopyRights").innerHTML = "<i class='fa fa-save fa-fw'></i> Update";
                        $("#btnUpdateUserFormCopyRights").prop("disabled", false);
                        $("#btnCancelUserFormCopyRights").prop("disabled", false);
                    },
                    400: function () {
                        toastr.error("Bad Request");

                        $("#copyUserRightsConfirmationModal").modal("hide");

                        document.getElementById("btnUpdateUserFormCopyRights").innerHTML = "<i class='fa fa-save fa-fw'></i> Update";
                        $("#btnUpdateUserFormCopyRights").prop("disabled", false);
                        $("#btnCancelUserFormCopyRights").prop("disabled", false);
                    }
                }
            });
        }

        // on load page
        window.onload = function () {
            NProgress.start();
            toastrModification();
            cboCompanyName = new wijmo.input.ComboBox('#cboCompanyName');
            cboForm = new wijmo.input.ComboBox('#cboForm');
            cboUserCopyRights = new wijmo.input.ComboBox('#cboUserCopyRights');
            getCompany();
            createCboForms();

            var canPerformActions = "@ViewData["CanPerformActions"]";
            if (canPerformActions == 1) {
                $('#btnClose').prop('disabled', false);
            } else {
                $(':button').prop('disabled', true);
                $('#btnClose').prop('disabled', false);
                getUserRightsMessageError();
            }
        }
    </script>
</body>
</html>