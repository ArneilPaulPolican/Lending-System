<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <!-- Title -->
    <title>Area List</title>

    <!-- Styles -->
    @Styles.Render("~/Content/css")
</head>
<body>
    <!-- Header -->
    @Html.Partial("HomeHeader")

    <section class="software-section">
        <div class="container">
            <div class="btn-group">
                <div class="btn-group">
                    <a href="/Software" class="btn btn-info">
                        Dashboard
                    </a>
                </div>
                <div class="btn-group">
                    <button type="button" class="btn btn-info dropdown-toggle" data-toggle="dropdown">
                        Set Ups <span class="caret"></span>
                    </button>
                    <ul class="dropdown-menu" role="menu">
                        <li><a href="/Software/ApplicantList"><i class="fa fa-users fa-fw"></i> Applicants</a></li>
                        <li><a href="/Software/AreaList"><i class="fa fa-map-pin fa-fw"></i> Area</a></li>
                        <li><a href="/Software/StaffList"><i class="fa fa-user fa-fw"></i> Staff</a></li>
                    </ul>
                </div>
                <div class="btn-group">
                    <button type="button" class="btn btn-info dropdown-toggle" data-toggle="dropdown">
                        Activities <span class="caret"></span>
                    </button>
                    <ul class="dropdown-menu" role="menu">
                        <li><a href="/Software/LoanApplicationList"><i class="fa fa-file-text-o fa-fw"></i> Loan Application</a></li>
                        <li><a href="/Software/CollectionList"><i class="fa fa-money fa-fw"></i> Collection</a></li>
                        <li><a href="/Software/ExpensesList"><i class="fa fa-credit-card fa-fw"></i> Expenses</a></li>
                    </ul>
                </div>
                <div class="btn-group">
                    <button type="button" class="btn btn-info dropdown-toggle" data-toggle="dropdown">
                        Reports <span class="caret"></span>
                    </button>
                    <ul class="dropdown-menu" role="menu">
                        <li><a href="/Software/LoanReport"><i class="fa fa-print fa-fw"></i> Loan Report</a></li>
                        <li><a href="/Software/CollectionReport"><i class="fa fa-print fa-fw"></i> Collection Report</a></li>
                        <li><a href="/Software/ExpensesReport"><i class="fa fa-print fa-fw"></i> Expenses Report</a></li>
                    </ul>
                </div>
                <div class="btn-group">
                    <button type="button" class="btn btn-info dropdown-toggle" data-toggle="dropdown">
                        System <span class="caret"></span>
                    </button>
                    <ul class="dropdown-menu" role="menu">
                        <li><a href="/Software/UserList"><i class="fa fa-key fa-fw"></i> Users</a></li>
                        <li><a href="/Software/CompanyList"><i class="fa fa-building fa-fw"></i> Company</a></li>
                        <li><a href="/Software/SystemTables"><i class="fa fa-table fa-fw"></i> System Tables</a></li>
                    </ul>
                </div>
            </div>
            <br /><br />
            <div class="panel panel-default">
                <div class="panel-heading">
                    <h4><i class="fa fa-map-pin fa-fw"></i> Areas</h4>
                </div>
                <div class="panel-heading">
                    <table style="width: 100%">
                        <tr>
                            <td>
                                <div class="input-group">
                                    <span class="input-group-addon"><i class="fa fa-search fa-fw"></i> </span>
                                    <input type="text" id="searchArea" class="form-control" placeholder="Search" />
                                </div>
                            </td>
                            <td>&nbsp;&nbsp;&nbsp;</td>
                            <td align="right">
                                <button class="btn btn-primary" id="btnAddArea" onclick="btnAddAreaOnclick()">
                                    <i class="fa fa-plus fa-fw"></i>&nbsp; Add
                                </button>
                                <button class="btn btn-danger" id="btnClose" onclick="window.location = '/Software'">
                                    <i class="fa fa-close fa-fw"></i> Close
                                </button>
                            </td>
                        </tr>
                    </table>
                </div>
                <div class="panel-body">
                    <div id="areaListFlexGrid" class="grid"></div>
                </div>
            </div>
            <div class="panel panel-default">
                <div class="panel-heading">
                    User security stamp
                </div>
                <div class="panel-body">
                    <div class="row">
                        <div class="col-md-6">
                            <p>Created by:</p>
                            <div style="padding-left: 10px;">
                                <i class="fa fa-key fa-fw"></i> <label id="stampCreatedBy">NA</label>
                                <br />
                                <small><i class="fa fa-calendar fa-fw"></i> &nbsp;<span id="stampCreatedDate">mm/dd/yyyy</span></small>
                            </div>
                            <br />
                        </div>
                        <div class="col-md-6">
                            <p>Updated by:</p>
                            <div style="padding-left: 10px;">
                                <i class="fa fa-key fa-fw"></i> <label id="stampUpdatedBy">NA</label>
                                <br />
                                <small><i class="fa fa-calendar fa-fw"></i> &nbsp;<span id="stampUpdatedDate">mm/dd/yyyy</span></small>
                            </div>
                            <br />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- Footer -->
    @Html.Partial("HomeFooter")

    <!-- delete confirmation area modal -->
    <div class="modal fade" id="deleteConfirmationAreaModal" role="dialog">
        <div class="modal-dialog modal-sm">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Delete Area</h4>
                </div>
                <div class="modal-body">
                    Are you sure that you want to delete this Area?
                </div>
                <div class="modal-footer">
                    <button class="btn btn-danger" id="btnConfirmDeleteArea" onclick="btnConfirmDeleteAreaOnclick()">Delete</button>
                    <button class="btn btn-default" id="btnCloseDeleteAreaModal" data-dismiss="modal">No</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Scripts -->
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    <script type="text/javascript">
        // glebal variable
        var areaCollectionView;
        var areaFlexGrid;

        // get areas
        function getAreaList() {
            var areas = new wijmo.collections.ObservableArray;
            $.ajax({
                url: '/api/area/list',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (areaListResult) {
                    if (areaListResult.length > 0) {
                        for (i = 0; i < areaListResult.length; i++) {
                            var isLocked = false;
                            if (areaListResult[i]["IsLocked"]) {
                                isLocked = true;
                            }

                            areas.push({
                                EditButton: "<button class='btn btn-primary btn-xs btn-block' onclick='editAreaOnclick()'><i class='fa fa-edit fa-fw'></i> Edit</button>",
                                DeleteButton: "<button class='btn btn-danger btn-xs btn-block'  onclick='deleteAreaOnclick(" + isLocked + ")'><i class='fa fa-trash fa-fw'></i> Delete</button>",
                                Id: areaListResult[i]["Id"],
                                AreaNumber: areaListResult[i]["AreaNumber"],
                                Area: areaListResult[i]["Area"],
                                Description: areaListResult[i]["Description"],
                                SupervisorStaff: areaListResult[i]["SupervisorStaff"],
                                CollectorStaff: areaListResult[i]["CollectorStaff"],
                                IsLocked: areaListResult[i]["IsLocked"],
                                CreatedByUserId: areaListResult[i]["CreatedByUserId"],
                                CreatedByUser: areaListResult[i]["CreatedByUser"],
                                CreatedDateTime: areaListResult[i]["CreatedDateTime"],
                                UpdatedByUserId: areaListResult[i]["UpdatedByUserId"],
                                UpdatedByUser: areaListResult[i]["UpdatedByUser"],
                                UpdatedDateTime: areaListResult[i]["UpdatedDateTime"]
                            });
                        }
                    }

                    NProgress.done();
                }
            });
            return areas;
        }

        // edit area
        function editAreaOnclick() {
            areaCollectionView.editItem(areaCollectionView.currentItem);
            var areaCurrentEditItem = areaCollectionView.currentEditItem;
            window.location = '/Software/AreaDetail?id=' + areaCurrentEditItem.Id;
        }

        // delete area
        function deleteAreaOnclick(isLocked) {
            if (isLocked) {
                toastr.info("Record Locked");
            } else {
                $("#deleteConfirmationAreaModal").modal({
                    "show": true,
                    "backdrop": "static"
                });

                document.getElementById("btnConfirmDeleteArea").innerHTML = "Delete";
                $("#btnConfirmDeleteArea").prop("disabled", false);
                $("#btnCloseDeleteAreaModal").prop("disabled", false);
            }
        }

        function btnConfirmDeleteAreaOnclick() {
            document.getElementById("btnConfirmDeleteArea").innerHTML = "<i class='fa fa-spinner fa-spin fa-fw'></i> Deleting";
            $("#btnConfirmDeleteArea").prop("disabled", true);
            $("#btnCloseDeleteAreaModal").prop("disabled", true);

            areaCollectionView.editItem(areaCollectionView.currentItem);
            var id = areaCollectionView.currentEditItem.Id;
            $.ajax({
                url: '/api/area/delete/' + id,
                type: "DELETE",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                statusCode: {
                    200: function () {
                        toastr.success("Delete Successful");

                        $('#deleteConfirmationAreaModal').modal('hide');

                        areaCollectionView = new wijmo.collections.CollectionView(getAreaList());
                        areaCollectionView.canFilter = true;

                        var filterText = '';
                        $('#searchArea').keyup(function () {
                            filterText = this.value.toLowerCase();
                            areaCollectionView.refresh();
                        });

                        areaCollectionView.filter = function (item) {
                            return !filterText || (item.AreaNumber.toLowerCase().indexOf(filterText) > -1)
                                               || (item.Area.toLowerCase().indexOf(filterText) > -1)
                                               || (item.Discription.toLowerCase().indexOf(filterText) > -1)
                                               || (item.SupervisorStaff.toLowerCase().indexOf(filterText) > -1)
                                               || (item.CollectorStaff.toLowerCase().indexOf(filterText) > -1);
                        }

                        // Flex Grid
                        areaFlexGrid.itemsSource = areaCollectionView;
                        areaFlexGrid.trackChanges = true;
                    },
                    404: function () {
                        toastr.error("Delete Not Found");
                        $('#deleteConfirmationAreaModal').modal('hide');
                        $("#btnConfirmDeleteArea").prop("disabled", false);
                        $("#btnCloseDeleteAreaModal").prop("disabled", false);
                    },
                    400: function () {
                        toastr.error("Bad Request");
                        $('#deleteConfirmationAreaModal').modal('hide');
                        $("#btnConfirmDeleteArea").prop("disabled", false);
                        $("#btnCloseDeleteAreaModal").prop("disabled", false);
                    }
                }
            });
        }

        // add new area
        function btnAddAreaOnclick() {
            $("#btnAddArea").prop("disabled", true);
            document.getElementById("btnAddArea").innerHTML = "<i class='fa fa-spinner fa-spin fa-fw'></i> Adding new Area";

            $.ajax({
                type: "POST",
                url: '/api/area/add',
                contentType: "application/json; charset=utf-8",
                success: function (id) {
                    if (id > 0) {
                        window.location = '/Software/AreaDetail?id=' + id;
                    } else {
                        toastr.error("Internal Server Error");
                    }
                }
            });
        }

        // stamp security
        function updateStampSecurity() {
            var item = areaCollectionView.currentItem;
            document.getElementById('stampCreatedBy').innerHTML = item.CreatedByUser;
            document.getElementById('stampCreatedDate').innerHTML = item.CreatedDateTime;
            document.getElementById('stampUpdatedBy').innerHTML = item.UpdatedByUser;
            document.getElementById('stampUpdatedDate').innerHTML = item.UpdatedDateTime;
        }

        // ready function
        window.onload = function () {
            NProgress.start();
            toastrModification();

            areaCollectionView = new wijmo.collections.CollectionView(getAreaList());
            areaCollectionView.canFilter = true;

            var filterText = '';
            $('#searchArea').keyup(function () {
                filterText = this.value.toLowerCase();
                areaCollectionView.refresh();
            });

            areaCollectionView.filter = function (item) {
                return !filterText || (item.AreaNumber.toLowerCase().indexOf(filterText) > -1)
                                   || (item.Area.toLowerCase().indexOf(filterText) > -1)
                                   || (item.Discription.toLowerCase().indexOf(filterText) > -1)
                                   || (item.SupervisorStaff.toLowerCase().indexOf(filterText) > -1)
                                   || (item.CollectorStaff.toLowerCase().indexOf(filterText) > -1);
            }

            areaCollectionView.currentChanged.addHandler(function (sender, args) {
                updateStampSecurity();
            });

            // Flex Grid
            areaFlexGrid = new wijmo.grid.FlexGrid('#areaListFlexGrid');
            areaFlexGrid.initialize({
                columns: [
                            {
                                "header": "Edit",
                                "binding": "EditButton",
                                "width": 80,
                                "align": "center",
                                "allowResizing": false,
                                "isContentHtml": true
                            },
                            {
                                "header": "Delete",
                                "binding": "DeleteButton",
                                "width": 80,
                                "align": "center",
                                "allowResizing": false,
                                "isContentHtml": true
                            },
                            {
                                "header": "Area Number",
                                "binding": "AreaNumber",
                                "allowSorting": true,
                                "width": "1.5*"
                            },
                            {
                                "header": "Area",
                                "binding": "Area",
                                "allowSorting": true,
                                "width": "2.5*"
                            },
                            {
                                "header": "Description",
                                "binding": "Description",
                                "allowSorting": true,
                                "width": "3*"
                            },
                            {
                                "header": "Supervisor Staff",
                                "binding": "SupervisorStaff",
                                "allowSorting": true,
                                "width": "2*"
                            },
                            {
                                "header": "Collector Staff",
                                "binding": "CollectorStaff",
                                "allowSorting": true,
                                "width": "2*"
                            },
                            {
                                "header": "L",
                                "binding": "IsLocked",
                                "allowSorting": true,
                                "width": "0.5*"
                            }
                ],
                autoGenerateColumns: false,
                itemsSource: areaCollectionView,
                isReadOnly: true,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            areaFlexGrid.trackChanges = true;
        }
    </script>
</body>
</html>