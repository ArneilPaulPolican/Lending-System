<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <!-- Title -->
    <title>Expense Detail</title>

    <!-- Styles -->
    @Styles.Render("~/Content/css")
</head>
<body>
    <!-- Header -->
    @Html.Partial("HomeHeader")

    <section class="software-section">
        <div class="container">
            @Html.Partial("SoftwareMenu")
            <br /><br />
            <div class="panel panel-default">
                <div class="panel-heading">
                    <table style="width: 100%">
                        <tr>
                            <td>
                                <h4><i class="fa fa-credit-card fa-fw"></i> Expenses Detail</h4>
                            </td>
                            <td align="right">
                                <button class="btn btn-primary" id="btnLock" onclick="btnLockOnClick()">
                                    <i class="fa fa-lock fa-fw"></i> Lock
                                </button>
                                <button class="btn btn-primary" id="btnUnlock" onclick="btnUnlockOnClick()">
                                    <i class="fa fa-unlock fa-fw"></i> Unlock
                                </button>
                                <button class="btn btn-primary" id="btnPrint" onclick="btnPrintOnClick()">
                                    <i class="fa fa-file-pdf-o fa-fw"></i> PDF
                                </button>
                                <button class="btn btn-danger" id="btnClose" onclick="window.location = '/Software/ExpensesList'">
                                    <i class="fa fa-close fa-fw"></i> Close
                                </button>
                            </td>
                        </tr>
                    </table>
                </div>
                <div class="panel-body">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="panel panel-default">
                                <div class="panel-body">
                                    <div class="form-group">
                                        <label>Expenses Number</label><br />
                                        <input type="text" class="form-control requiredExpenses" id="expensesNumber" placeholder="Expenses Number" />
                                    </div>
                                    <div class="form-group">
                                        <label>Expenses Date</label><br />
                                        <div id="expensesDate"></div>
                                    </div>
                                    <div class="form-group">
                                        <label>Account</label><br />
                                        <div id="expensesAccount"></div>
                                    </div>
                                    <div class="form-group">
                                        <label>Collector</label><br />
                                        <div id="cboCollector"></div>
                                    </div>
                                    <div class="form-group">
                                        <label>Expense Type</label><br />
                                        <div id="cboExpenseType"></div>
                                    </div>
                                    <div class="form-group">
                                        <label>Particulars</label><br />
                                        <textarea class="form-control requiredExpenses" rows="5" id="expensesParticulars" placeholder="Particulars"></textarea>
                                    </div>
                                    <div class="form-group">
                                        <label>Expense Amount</label><br />
                                        <div class="input-group numberField">
                                            <span class="input-group-addon">&#8369;</span>
                                            <input type="text" id="expensesAmount" class="form-control numberField requiredExpenses" placeholder="0.00">
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label>Prepared by</label><br />
                                        <div id="expensesPreparedBy"></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="panel panel-default">
                                <div class="panel-body">
                                    <p>Created by:</p>
                                    <div style="padding-left: 10px;">
                                        <i class="fa fa-key fa-fw"></i> <label id="stampCreatedBy">NA</label>
                                        <br />
                                        <small><i class="fa fa-calendar fa-fw"></i> &nbsp;<span id="stampCreatedDate">mm/dd/yyyy</span></small>
                                    </div>
                                    <br />
                                    <p>Updated by:</p>
                                    <div style="padding-left: 10px;">
                                        <i class="fa fa-key fa-fw"></i> <label id="stampUpdatedBy">NA</label>
                                        <br />
                                        <small><i class="fa fa-calendar fa-fw"></i> &nbsp;<span id="stampUpdatedDate">mm/dd/yyyy</span></small>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- Footer -->
    @Html.Partial("HomeFooter")

    <!-- Scripts -->
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    <script type="text/javascript">
        // global varibles
        var cboExpensesDate;
        var cboExpensesAccount;
        var cboExpensesPreparedBy;

        // create expenses Date
        function createExpensesDate() {
            cboExpensesDate = new wijmo.input.InputDate('#expensesDate', {
                format: 'MM-dd-yyyy',
                value: new Date(),
                mask: '99-99-9999'
            });

            cboExpensesAccount = new wijmo.input.ComboBox('#expensesAccount');
            getAccount();
        }

        // get account
        function getAccount() {
            var accountArray = new Array();
            $.ajax({
                url: '/api/account/listAccountTransactionTypeId/3',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (accountResults) {
                    var disabled = true;
                    if (accountResults.length > 0) {
                        for (i = 0; i < accountResults.length; i++) {
                            accountArray.push({
                                Id: accountResults[i]["Id"],
                                Account: accountResults[i]["Account"],
                            });
                        }

                        disabled = false;

                        cboCollector = new wijmo.input.ComboBox('#cboCollector');
                        getCollectorByArea();
                    } else {
                        cboCollector = new wijmo.input.ComboBox('#cboCollector');
                        getCollectorByArea();
                    }

                    cboExpensesAccount.dispose();
                    cboExpensesAccount = new wijmo.input.ComboBox('#expensesAccount', {
                        disabled: disabled,
                        placeholder: "Select",
                        itemsSource: accountArray,
                        isEditable: false,
                        required: true,
                        displayMemberPath: "Account",
                        selectedValuePath: "Account"
                    });
                }
            });
        }

        // collector
        function getCollectorByArea() {
            var collectorByAreaArray = new Array();
            $.ajax({
                url: '/api/staff/list/byStaffRoleId/2',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (collectorByAreaResults) {
                    var disabled = true;
                    if (collectorByAreaResults.length > 0) {
                        for (i = 0; i < collectorByAreaResults.length; i++) {
                            collectorByAreaArray.push({
                                Id: collectorByAreaResults[i]["Id"],
                                Staff: collectorByAreaResults[i]["Staff"]
                            });
                        }

                        disabled = false;

                        cboExpenseType = new wijmo.input.ComboBox('#cboExpenseType');
                        getExpenseType();
                    } else {
                        cboExpenseType = new wijmo.input.ComboBox('#cboExpenseType');
                        getExpenseType();
                    }

                    cboCollector.dispose();
                    cboCollector = new wijmo.input.ComboBox('#cboCollector', {
                        disabled: disabled,
                        placeholder: "Select",
                        itemsSource: collectorByAreaArray,
                        isEditable: false,
                        required: true,
                        displayMemberPath: "Staff",
                        selectedValuePath: "Staff"
                    });
                }
            });
        }

        // expense Type
        function getExpenseType() {
            var expenseTypeArray = new Array();
            $.ajax({
                url: '/api/expenseType/list',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (expenseTypeResults) {
                    var disabled = true;
                    if (expenseTypeResults.length > 0) {
                        for (i = 0; i < expenseTypeResults.length; i++) {
                            expenseTypeArray.push({
                                Id: expenseTypeResults[i]["Id"],
                                ExpenseType: expenseTypeResults[i]["ExpenseType"],
                            });
                        }

                        disabled = false;

                        cboExpensesPreparedBy = new wijmo.input.ComboBox('#expensesPreparedBy');
                        getUser();
                    } else {
                        cboExpensesPreparedBy = new wijmo.input.ComboBox('#expensesPreparedBy');
                        getUser();
                    }

                    cboExpenseType.dispose();
                    cboExpenseType = new wijmo.input.ComboBox('#cboExpenseType', {
                        disabled: disabled,
                        placeholder: "Select",
                        itemsSource: expenseTypeArray,
                        isEditable: false,
                        required: true,
                        displayMemberPath: "ExpenseType",
                        selectedValuePath: "ExpenseType"
                    });
                }
            });
        }

        // get users
        function getUser() {
            var userArray = new Array();
            $.ajax({
                url: '/api/user/list',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (userrResults) {
                    var disabled = true;
                    if (userrResults.length > 0) {
                        for (i = 0; i < userrResults.length; i++) {
                            userArray.push({
                                Id: userrResults[i]["Id"],
                                FullName: userrResults[i]["FullName"],
                            });
                        }

                        disabled = false;
                    }

                    cboExpensesPreparedBy.dispose();
                    cboExpensesPreparedBy = new wijmo.input.ComboBox('#expensesPreparedBy', {
                        disabled: disabled,
                        placeholder: "Select",
                        itemsSource: userArray,
                        isEditable: false,
                        required: true,
                        displayMemberPath: "FullName",
                        selectedValuePath: "FullName"
                    });

                    getExpensesById();
                }
            });
        }

        // get expenses by id
        function getExpensesById() {
            $.ajax({
                url: '/api/expenses/getById/' + getUrlParameter("id"),
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (expensesResult) {
                    if (expensesResult != null) {
                        document.getElementById("expensesNumber").disabled = true;
                        document.getElementById("expensesNumber").value = expensesResult.ExpenseNumber;
                        cboExpensesDate.value = new Date(expensesResult.ExpenseDate);
                        cboExpensesAccount.selectedValue = expensesResult.Account;
                        cboCollector.selectedValue = expensesResult.CollectorStaff;
                        cboExpenseType.selectedValue = expensesResult.ExpenseType;
                        document.getElementById("expensesParticulars").value = expensesResult.Particulars;
                        document.getElementById("expensesAmount").value = expensesResult.ExpenseAmount.toLocaleString();
                        cboExpensesPreparedBy.selectedValue = expensesResult.PreparedByUser;
                        document.getElementById('stampCreatedBy').innerHTML = expensesResult.CreatedByUser;
                        document.getElementById('stampCreatedDate').innerHTML = expensesResult.CreatedDateTime;
                        document.getElementById('stampUpdatedBy').innerHTML = expensesResult.UpdatedByUser;
                        document.getElementById('stampUpdatedDate').innerHTML = expensesResult.UpdatedDateTime;

                        if (expensesResult.IsLocked) {
                            $("#btnLock").prop("disabled", true);
                            cboExpensesDate.disabled = true;
                            cboExpensesAccount.disabled = true;
                            cboCollector.disabled = true;
                            cboExpenseType.disabled = true;
                            cboExpensesPreparedBy.disabled = true;
                            document.getElementById("expensesParticulars").disabled = true;
                            document.getElementById("expensesAmount").disabled = true;

                            isLocked = true;
                        } else {
                            $("#btnUnlock").prop("disabled", true);
                            $("#btnPrint").prop("disabled", true);
                        }
                    } else {
                        alert("The record you'd requested has no data");
                        window.history.back();
                    }

                    NProgress.done();
                }
            });
        }

        // form input validation
        function inputValidationForExpenses() {
            var isValid = true;
            $('.requiredExpenses').each(function () {
                if ($.trim($(this).val()) == '') {
                    isValid = false;
                    $(this).css({
                        "border": "1px solid red"
                    });
                } else {
                    $(this).css({
                        "border": "",
                    });
                }
            });

            return isValid;
        }

        // lock loan
        function btnLockOnClick() {
            if (inputValidationForExpenses()) {
                $("#btnLock").prop("disabled", true);
                document.getElementById("btnLock").innerHTML = "<i class='fa fa-spinner fa-spin fa-fw'></i> Locking";
                $("#btnClose").prop("disabled", true);

                var expensesObject = new Object();
                expensesObject.ExpenseDate = cboExpensesDate.value;
                expensesObject.AccountId = cboExpensesAccount.selectedItem["Id"];
                expensesObject.CollectorStaffId = cboCollector.selectedItem["Id"];
                expensesObject.ExpenseTypeId = cboExpenseType.selectedItem["Id"];
                expensesObject.Particulars = document.getElementById("expensesParticulars").value;
                expensesObject.ExpenseAmount = document.getElementById("expensesAmount").value;
                expensesObject.PreparedByUserId = cboExpensesPreparedBy.selectedItem["Id"];
                var expensesData = JSON.stringify(expensesObject);

                $.ajax({
                    type: "PUT",
                    url: '/api/expenses/lock/' + getUrlParameter("id"),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    data: expensesData,
                    statusCode: {
                        200: function () {
                            toastr.success("Reloading the page", "Lock Successful");
                            window.setTimeout(function () {
                                location.reload();
                            }, 1500);
                        },
                        404: function () {
                            toastr.error("Not Found");
                            $("#btnLock").prop("disabled", false);
                            document.getElementById("btnLock").innerHTML = "<i class='fa fa-lock fa-fw'></i> Lock";
                            $("#btnClose").prop("disabled", false);
                        },
                        400: function () {
                            toastr.error("Bad Request");
                            $("#btnLock").prop("disabled", false);
                            document.getElementById("btnLock").innerHTML = "<i class='fa fa-lock fa-fw'></i> Lock";
                            $("#btnClose").prop("disabled", false);
                        }
                    }
                });
            } else {
                toastr.error("Invalid Entry");
            }
        }

        // unlock loan
        function btnUnlockOnClick() {
            $("#btnUnlock").prop("disabled", true);
            $("#btnPrint").prop("disabled", true);
            $("#btnClose").prop("disabled", true);
            document.getElementById("btnUnlock").innerHTML = "<i class='fa fa-spinner fa-spin fa-fw'></i> Unlocking";

            $.ajax({
                type: "PUT",
                url: '/api/expenses/unlock/' + getUrlParameter("id"),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                statusCode: {
                    200: function () {
                        toastr.success("Reloading the page", "Unlock Successful");
                        window.setTimeout(function () {
                            location.reload();
                        }, 1500);
                    },
                    404: function () {
                        toastr.error("Not Found");
                        $("#btnUnlock").prop("disabled", false);
                        $("#btnPrint").prop("disabled", false);
                        $("#btnClose").prop("disabled", false);
                        document.getElementById("btnUnlock").innerHTML = "<i class='fa fa-unlock fa-fw'></i> Unlock";
                    },
                    400: function () {
                        toastr.error("Bad Request");
                        $("#btnLock").prop("disabled", false);
                        document.getElementById("btnLock").innerHTML = "<i class='fa fa-lock fa-fw'></i> Lock";
                        $("#btnClose").prop("disabled", false);
                    }
                }
            });
        }

        // print
        function btnPrintOnClick() {
            $("#btnPrint").prop("disabled", true);
            document.getElementById("btnPrint").innerHTML = "<i class='fa fa-spinner fa-spin fa-fw'></i> Generating PDF File";
            window.location = "/RepExpensesDetail/expensesDetail?expensesId=" + getUrlParameter("id");
        }

        // on load page
        window.onload = function () {
            NProgress.start();
            toastrModification();
            createExpensesDate();

            var canPerformActions = "@ViewData["CanPerformActions"]";
            if (canPerformActions == 1) {
                $('#btnClose').prop('disabled', false);
            } else {
                $(':button').prop('disabled', true);
                $('#btnClose').prop('disabled', false);
            }
        }
    </script>
</body>
</html>