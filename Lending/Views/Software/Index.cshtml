<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <!-- Title -->
    <title>Software</title>

    <!-- Styles -->
    @Styles.Render("~/Content/css")
</head>
<body>
    <div id="wrapper">
        <!-- Header -->
        @Html.Partial("SoftwareHeader")

        <div id="page-wrapper">
            <div class="container-fluid">
                <div class="row">
                    <div class="col-lg-12">
                        <h3 class="">
                            <i class="fa fa-dashboard fa-fw"></i>  Dashboard <small>Main Menu</small>
                        </h3>
                        <ol class="breadcrumb">
                            <li class="active">
                                Dashboard
                            </li>
                        </ol>
                    </div>
                </div>

                <ul class="nav nav-tabs">
                    <li class="active"><a data-toggle="tab" href="#dailyCollectibles">Daily Collectibles</a></li>
                    <li><a data-toggle="tab" href="#menus">Menu</a></li>
                </ul>
                <br />
                <div class="tab-content">
                    <div id="dailyCollectibles" class="tab-pane fade in active">
                        <div class="panel panel-default">
                            <div class="panel-heading">
                                <table border="0" style="width: 100%;">
                                    <tr>
                                        <td style="width: 38%;">
                                            <div class="input-group">
                                                <span class="input-group-addon"><i class="fa fa-search fa-fw"></i> </span>
                                                <input type="text" id="applicantCollectionsSearchInput" class="form-control" placeholder="Search" />
                                            </div>
                                        </td>
                                        <td style="width: 1%;"></td>
                                        <td style="width: 20%;">
                                            <div class="input-group">
                                                <span class="input-group-addon"> Date</span>
                                                <div id="cboDate" style="width: 100%;"></div>
                                            </div>
                                        </td>
                                        <td style="width: 1%;"></td>
                                        <td style="width: 30%;">
                                            <div class="input-group">
                                                <span class="input-group-addon"> Area</span>
                                                <div id="cboArea" style="width: 100%;"></div>
                                            </div>
                                        </td>
                                        <td style="width: 1%;"></td>
                                        <td style="width: 9%;" align="right">
                                            <button class="btn btn-success btn-block" onclick="btnCSV()"><i class="fa fa-file-excel-o fa-fw"></i> CSV</button>
                                        </td>
                                    </tr>
                                </table>
                            </div>
                            <div class="panel-body">
                                <div id="loanlinesflexgrid"></div>
                            </div>
                            <div class="panel-footer">
                                <div class="row">
                                    <div class="btn-group col-md-7" id="naviagtionPageGrid">
                                        <button type="button" class="btn btn-default border-custom" id="btnMoveToFirstPageGrid">
                                            <span class="glyphicon glyphicon-fast-backward"></span> First
                                        </button>
                                        <button type="button" class="btn btn-default border-custom" id="btnMoveToPreviousPageGrid">
                                            <span class="glyphicon glyphicon-step-backward"></span> Previous
                                        </button>
                                        <button type="button" class="btn btn-default border-custom" disabled style="width: 100px" id="btnCurrentPageGrid"></button>
                                        <button type="button" class="btn btn-default border-custom" id="btnMoveToNextPageGrid">
                                            <span class="glyphicon glyphicon-step-forward"></span> Next
                                        </button>
                                        <button type="button" class="btn btn-default border-custom" id="btnMoveToLastPageGrid">
                                            <span class="glyphicon glyphicon-fast-forward"></span> Last
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="panel panel-default">
                                    <div class="panel-body">
                                        <form class="form-horizontal">
                                            <div class="form-group">
                                                <label class="control-label col-sm-4">Total Actives</label>
                                                <div class="col-sm-8">
                                                    <input type="text" class="form-control requiredApplicantDetail numberField" id="totalActives" placeholder="0" disabled />
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label class="control-label col-sm-4">Total Overdues</label>
                                                <div class="col-sm-8">
                                                    <input type="text" class="form-control requiredApplicantDetail numberField" id="totalOverdues" placeholder="0" disabled />
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label class="control-label col-sm-4">=</label>
                                                <div class="col-sm-8">
                                                    <input type="text" class="form-control requiredApplicantDetail numberField" id="totalActiveAndOverdues" placeholder="0" disabled />
                                                </div>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                                <div class="panel panel-default">
                                    <div class="panel-body">
                                        <form class="form-horizontal">
                                            <div class="form-group">
                                                <label class="control-label col-sm-4">Supervisor</label>
                                                <div class="col-sm-8">
                                                    <input type="text" class="form-control" id="areaSupervisor" placeholder="Supervisor" disabled />
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label class="control-label col-sm-4">Collector</label>
                                                <div class="col-sm-8">
                                                    <input type="text" class="form-control" id="areaCollector" placeholder="Collector" disabled />
                                                </div>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="panel panel-default">
                                    <div class="panel-body">
                                        <form class="form-horizontal">
                                            <div class="form-group">
                                                <label class="control-label col-sm-4">Total Collectibles</label>
                                                <div class="col-sm-8">
                                                    <div class="input-group numberField">
                                                        <span class="input-group-addon">&#8369;</span>
                                                        <input type="text" class="form-control numberField" id="totalColletibles" placeholder="0.00" disabled />
                                                    </div>
                                                </div>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                                <div class="panel panel-default">
                                    <div class="panel-body">
                                        <form class="form-horizontal">
                                            <div class="form-group">
                                                <label class="control-label col-sm-4">Total Collection</label>
                                                <div class="col-sm-8">
                                                    <div class="input-group numberField">
                                                        <span class="input-group-addon">&#8369;</span>
                                                        <input type="text" class="form-control numberField" id="totalCollection" placeholder="0.00" disabled />
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label class="control-label col-sm-4">Gas Expense</label>
                                                <div class="col-sm-8">
                                                    <div class="input-group numberField">
                                                        <span class="input-group-addon">&#8369;</span>
                                                        <input type="text" class="form-control numberField" id="totalExpense" placeholder="0.00" disabled />
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label class="control-label col-sm-4">Net Collection </label>
                                                <div class="col-sm-8">
                                                    <div class="input-group numberField">
                                                        <span class="input-group-addon">&#8369;</span>
                                                        <input type="text" class="form-control numberField" id="netCollection" placeholder="0.00" disabled />
                                                    </div>
                                                </div>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div id="menus" class="tab-pane fade">
                        <div class="panel panel-default">
                            <div class="panel-heading">
                                Menus
                            </div>
                            <div class="panel-body">
                                <div class="row">
                                    <div class="col-md-3">
                                        <a href="/Software/StaffList" class="btn btn-success btn-lg btn-block">
                                            <i class="fa fa-user fa-3x fa-fw" style="margin-bottom: 10px;"></i>
                                            <br />
                                            Staff
                                        </a>
                                        <br />
                                        <a href="/Software/AreaList" class="btn btn-success btn-lg btn-block">
                                            <i class="fa fa-map-marker fa-3x fa-fw" style="margin-bottom: 10px;"></i>
                                            <br />
                                            Area
                                        </a>
                                        <br />
                                        <a href="/Software/ApplicantList" class="btn btn-success btn-lg btn-block">
                                            <i class="fa fa-users fa-3x fa-fw" style="margin-bottom: 10px;"></i>
                                            <br />
                                            Applicant
                                        </a>
                                        <br />
                                    </div>
                                    <div class="col-md-3">
                                        <a href="/Software/CompanyList" class="btn btn-success btn-lg btn-block">
                                            <i class="fa fa-building fa-3x fa-fw" style="margin-bottom: 10px;"></i>
                                            <br />
                                            Company
                                        </a>
                                        <br />
                                        <a href="/Software/UserList" class="btn btn-success btn-lg btn-block">
                                            <i class="fa fa-key fa-3x fa-fw" style="margin-bottom: 10px;"></i>
                                            <br />
                                            User
                                        </a>
                                        <br />
                                        <a href="/Software/SystemTables" class="btn btn-success btn-lg btn-block">
                                            <i class="fa fa-table fa-3x fa-fw" style="margin-bottom: 10px;"></i>
                                            <br />
                                            System Tables
                                        </a>
                                        <br />
                                    </div>

                                    <div class="col-md-3">
                                        <a href="/Software/LoanApplicationList" class="btn btn-success btn-lg btn-block">
                                            <i class="fa fa-file-text-o fa-3x fa-fw" style="margin-bottom: 10px;"></i>
                                            <br />
                                            Loan Application
                                        </a>
                                        <br />
                                        <a href="/Software/CollectionList" class="btn btn-success btn-lg btn-block">
                                            <i class="fa fa-money fa-3x fa-fw" style="margin-bottom: 10px;"></i>
                                            <br />
                                            Collection
                                        </a>
                                        <br />
                                        <a href="/Software/ExpensesList" class="btn btn-success btn-lg btn-block">
                                            <i class="fa fa-credit-card fa-3x fa-fw" style="margin-bottom: 10px;"></i>
                                            <br />
                                            Expenses
                                        </a>
                                        <br />
                                    </div>
                                    <div class="col-md-3">
                                        <a href="/Software/ReconstructList" class="btn btn-success btn-lg btn-block">
                                            <i class="fa fa-refresh fa-3x fa-fw" style="margin-bottom: 10px;"></i>
                                            <br />
                                            Reconstruct
                                        </a>
                                        <br />
                                        <a href="/Software/RenewList" class="btn btn-success btn-lg btn-block">
                                            <i class="fa fa-retweet fa-3x fa-fw" style="margin-bottom: 10px;"></i>
                                            <br />
                                            Renew
                                        </a>
                                        <br />
                                        <a href="/Software/Reports" class="btn btn-success btn-lg btn-block">
                                            <i class="fa fa-print fa-3x fa-fw" style="margin-bottom: 10px;"></i>
                                            <br />
                                            Reports
                                        </a>
                                        <br />
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Scripts -->
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    <script type="text/javascript">
        var cboDate;
        var isCboDateSelected = false;
        var cboArea;
        var loanLinesCollectionView;
        var loanLinesFlexgrid;

        function createCboDate() {
            cboDate.dispose();
            cboDate = new wijmo.input.InputDate('#cboDate', {
                format: 'MM-dd-yyyy',
                value: new Date(),
                mask: '99-99-9999',
                onValueChanged: function () {
                    if (isCboDateSelected == true) {
                        NProgress.start();
                        loanLinesCollectionView = new wijmo.collections.CollectionView(getLoanLinesData());
                        loanLinesCollectionView.canFilter = true;
                        loanLinesCollectionView.pageSize = 15;

                        var filterText = '';
                        $('#applicantCollectionsSearchInput').keyup(function () {
                            filterText = this.value.toLowerCase();
                            loanLinesCollectionView.refresh();
                        });

                        loanLinesCollectionView.filter = function (item) {
                            return !filterText || (item.DayReference.toLowerCase().indexOf(filterText) > -1)
                                               || (item.Applicant.toLowerCase().indexOf(filterText) > -1);
                        }

                        loanLinesCollectionView.collectionChanged.addHandler(function (sender, args) {
                            updateNavigateButtons();
                        });

                        loanLinesFlexgrid.itemsSource = loanLinesCollectionView;
                        loanLinesFlexgrid.trackChanges = true;
                        getTotalCollection();
                    } else {
                        isCboDateSelected = true;
                    }
                }
            });

            cboArea = new wijmo.input.ComboBox('#cboArea');
            createCboArea();
        }

        function createCboArea() {
            var areaArray = new Array();
            $.ajax({
                url: '/api/area/list',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (areaResults) {
                    var disabled = true;
                    if (areaResults.length > 0) {
                        for (i = 0; i < areaResults.length; i++) {
                            areaArray.push({
                                Id: areaResults[i]["Id"],
                                Area: areaResults[i]["Area"],
                                SupervisorStaff: areaResults[i]["SupervisorStaff"]
                            });
                        }

                        disabled = false;
                    }

                    cboArea.dispose();
                    cboArea = new wijmo.input.ComboBox('#cboArea', {
                        disabled: disabled,
                        placeholder: "Select",
                        itemsSource: areaArray,
                        isEditable: false,
                        required: true,
                        displayMemberPath: "Area",
                        selectedValuePath: "Area",
                        onSelectedIndexChanged: function () {
                            NProgress.start();
                            loanLinesCollectionView = new wijmo.collections.CollectionView(getLoanLinesData());
                            loanLinesCollectionView.canFilter = true;
                            loanLinesCollectionView.pageSize = 15;

                            var filterText = '';
                            $('#applicantCollectionsSearchInput').keyup(function () {
                                filterText = this.value.toLowerCase();
                                loanLinesCollectionView.refresh();
                            });

                            loanLinesCollectionView.filter = function (item) {
                                return !filterText || (item.DayReference.toLowerCase().indexOf(filterText) > -1)
                                                   || (item.Applicant.toLowerCase().indexOf(filterText) > -1);
                            }

                            loanLinesCollectionView.collectionChanged.addHandler(function (sender, args) {
                                updateNavigateButtons();
                            });

                            loanLinesFlexgrid.itemsSource = loanLinesCollectionView;
                            loanLinesFlexgrid.trackChanges = true;

                            document.getElementById("areaSupervisor").value = this.selectedItem["SupervisorStaff"];
                            getTotalCollection();
                        }
                    });

                    document.getElementById("areaSupervisor").value = cboArea.selectedItem["SupervisorStaff"];
                    createFlexGrid();

                    getTotalCollection();
                }
            });
        }

        function getTotalCollection() {
            var collectibleDate = [cboDate.value.getMonth() + 1, cboDate.value.getDate(), cboDate.value.getFullYear()].join('-');
            $.ajax({
                url: '/api/areaStaff/defaultStaff/' + cboArea.selectedItem["Id"],
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (collectorResults) {
                    if (collectorResults != null) {
                        document.getElementById("areaCollector").value = collectorResults.Staff;

                        $.ajax({
                            url: '/api/expenses/totalExpenses/' + collectibleDate + '/' + collectorResults.StaffId,
                            cache: false,
                            type: 'GET',
                            contentType: 'application/json; charset=utf-8',
                            success: function (totalExpense) {
                                document.getElementById("totalExpense").value = totalExpense.toLocaleString();

                                var totalCollection = document.getElementById("totalCollection").value;
                                var totalExpense = totalExpense.toLocaleString();

                                document.getElementById("netCollection").value = (totalCollection - totalExpense).toLocaleString();
                            }
                        });
                    } else {
                        document.getElementById("totalExpense").value = 0;
                        var totalCollection = document.getElementById("totalCollection").value;
                        document.getElementById("netCollection").value = totalCollection;
                    }
                }
            });
        }

        function getLoanLinesData() {
            var loanLinesArray = new wijmo.collections.ObservableArray;
            var collectibleDate = [cboDate.value.getMonth() + 1, cboDate.value.getDate(), cboDate.value.getFullYear()].join('-');

            $.ajax({
                url: '/api/loanLines/listByCollectibleDateDate/byAreaId/' + collectibleDate + '/' + cboArea.selectedItem["Id"],
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (loanLinesResults) {
                    var totalCollectibles = 0;
                    var totalActives = 0;
                    var totalOverdues = 0;
                    var totalActivesAndOverdues = 0;
                    var totalCollections = 0;

                    if (loanLinesResults.length > 0) {
                        for (i = 0; i < loanLinesResults.length; i++) {
                            totalCollectibles += loanLinesResults[i]["CollectibleAmount"];
                            totalActives += 1;
                            totalCollections += loanLinesResults[i]["PaidAmount"];
                            var loanStatus = "Active";
                            var transactionType = "btnDetailLoan()";
                            if (loanLinesResults[i]["IsLoanReconstruct"]) {
                                loanStatus = "Overdue";
                                totalActives -= 1;
                                totalOverdues += 1;
                                transactionType = "btnDetailReconstruct()"
                            } else {
                                if (loanLinesResults[i]["IsLoanRenew"]) {
                                    loanStatus = "Active (Renew)";
                                    transactionType = "btnDetailRenew()"
                                }
                            }

                            var newDate = new Date(loanLinesResults[i]["CollectibleDate"]);
                            var collectibleDate = ('0' + (newDate.getMonth() + 1)).slice(-2) + '-' + ('0' + newDate.getDate()).slice(-2) + '-' + newDate.getFullYear();

                            loanLinesArray.push({
                                BtnDetail: "<button class='btn btn-primary btn-xs btn-block' onclick='" + transactionType + "'><i class='fa fa-edit fa-fw'></i> Detail</button>",
                                Id: loanLinesResults[i]["Id"],
                                DayReference: loanLinesResults[i]["DayReference"],
                                CollectibleDate: collectibleDate,
                                CollectibleAmount: loanLinesResults[i]["CollectibleAmount"],
                                PaidAmount: loanLinesResults[i]["PaidAmount"],
                                PenaltyAmount: loanLinesResults[i]["PenaltyAmount"],
                                Applicant: loanLinesResults[i]["Applicant"],
                                LoanStatus: loanStatus,
                                LoanId: loanLinesResults[i]["LoanId"],
                            });
                        }
                    }

                    totalActivesAndOverdues = totalActives + totalOverdues;
                    document.getElementById("totalActives").value = totalActives.toLocaleString();
                    document.getElementById("totalOverdues").value = totalOverdues.toLocaleString();
                    document.getElementById("totalActiveAndOverdues").value = totalActivesAndOverdues.toLocaleString();
                    document.getElementById("totalColletibles").value = totalCollectibles.toLocaleString();
                    document.getElementById("totalCollection").value = totalCollections.toLocaleString();

                    NProgress.done();
                }
            });

            return loanLinesArray;
        }

        // Navigation Buttons for loan application
        function updateNavigateButtons() {
            if (loanLinesCollectionView.pageSize <= 0) {
                document.getElementById('naviagtionPageGrid').style.display = 'none';
                return;
            }
            document.getElementById('naviagtionPageGrid').style.display = 'block';
            btnCurrentPageGrid.innerHTML = (loanLinesCollectionView.pageIndex + 1) + ' / ' + loanLinesCollectionView.pageCount;
        }

        function createFlexGrid() {
            loanLinesCollectionView = new wijmo.collections.CollectionView(getLoanLinesData());
            loanLinesCollectionView.canFilter = true;
            loanLinesCollectionView.pageSize = 15;

            var filterText = '';
            $('#applicantCollectionsSearchInput').keyup(function () {
                filterText = this.value.toLowerCase();
                loanLinesCollectionView.refresh();
            });

            loanLinesCollectionView.filter = function (item) {
                return !filterText || (item.DayReference.toLowerCase().indexOf(filterText) > -1)
                                   || (item.Applicant.toLowerCase().indexOf(filterText) > -1);
            }

            loanLinesCollectionView.collectionChanged.addHandler(function (sender, args) {
                updateNavigateButtons();
            });

            loanLinesFlexgrid = new wijmo.grid.FlexGrid('#loanlinesflexgrid');
            loanLinesFlexgrid.initialize({
                columns: [
                            {
                                "header": "Detail",
                                "binding": "BtnDetail",
                                "width": 80,
                                "align": "center",
                                "allowResizing": false,
                                "isContentHtml": true
                            },
                            {
                                "header": "Applicant",
                                "binding": "Applicant",
                                "allowSorting": true,
                                "width": "3.5*",
                            },
                            {
                                "header": "Day Reference",
                                "binding": "DayReference",
                                "allowSorting": true,
                                "width": "7*",
                            },
                            {
                                "header": "Status",
                                "binding": "LoanStatus",
                                "allowSorting": true,
                                "width": "3*",
                            },
                            {
                                "header": "Collectible",
                                "binding": "CollectibleAmount",
                                "allowSorting": true,
                                "width": "2*",
                            },
                            {
                                "header": "Collected",
                                "binding": "PaidAmount",
                                "allowSorting": true,
                                "width": "2*",
                            },
                            {
                                "header": "Penalty",
                                "binding": "PenaltyAmount",
                                "allowSorting": true,
                                "width": "2*",
                            }
                ],
                autoGenerateColumns: false,
                itemsSource: loanLinesCollectionView,
                isReadOnly: true,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            loanLinesFlexgrid.trackChanges = true;

            //Navigation button
            btnFirstPageGrid = document.getElementById('btnMoveToFirstPageGrid');
            btnPreviousPageGrid = document.getElementById('btnMoveToPreviousPageGrid');
            btnNextPageGrid = document.getElementById('btnMoveToNextPageGrid');
            btnLastPageGrid = document.getElementById('btnMoveToLastPageGrid');
            btnCurrentPageGrid = document.getElementById('btnCurrentPageGrid');

            updateNavigateButtons();

            btnFirstPageGrid.addEventListener('click', function () {
                loanLinesCollectionView.moveToFirstPage();
                updateNavigateButtons();
            });
            btnPreviousPageGrid.addEventListener('click', function () {
                loanLinesCollectionView.moveToPreviousPage();
                updateNavigateButtons();
            });
            btnNextPageGrid.addEventListener('click', function () {
                loanLinesCollectionView.moveToNextPage();
                updateNavigateButtons();
            });
            btnLastPageGrid.addEventListener('click', function () {
                loanLinesCollectionView.moveToLastPage();
                updateNavigateButtons();
            });
        }

        function btnDetailLoan() {
            loanLinesCollectionView.editItem(loanLinesCollectionView.currentItem);
            var currentItem = loanLinesCollectionView.currentEditItem;
            window.open("/Software/LoanApplicationDetail?id=" + currentItem.LoanId, "_blank");
        }


        function btnDetailReconstruct() {
            loanLinesCollectionView.editItem(loanLinesCollectionView.currentItem);
            var currentItem = loanLinesCollectionView.currentEditItem;
            window.open("/Software/ReconstructDetail?id=" + currentItem.LoanId, "_blank");
        }

        function btnDetailRenew() {
            loanLinesCollectionView.editItem(loanLinesCollectionView.currentItem);
            var currentItem = loanLinesCollectionView.currentEditItem;
            window.open("/Software/RenewDetail?id=" + currentItem.LoanId, "_blank");
        }

        function btnCSV() {
            var CSV = '';
            var dailyCollectionReport = [];
            var areaName = cboArea.selectedItem["Area"];
            var fileName = areaName + 'DailyCollection.CSV';

            for (i = 0; i < loanLinesCollectionView.items.length; i++) {
                dailyCollectionReport.push({
                    Applicant: loanLinesCollectionView.items[i].Applicant,
                    CollectibleDate: loanLinesCollectionView.items[i].CollectibleDate,
                    DayReference: loanLinesCollectionView.items[i].DayReference,
                    LoanStatus: loanLinesCollectionView.items[i].LoanStatus,
                    CollectibleAmount: loanLinesCollectionView.items[i].CollectibleAmount,
                    PaidAmount: loanLinesCollectionView.items[i].PaidAmount,
                    PenaltyAmount: loanLinesCollectionView.items[i].PenaltyAmount
                });
            }

            // Rows
            var Headers = [];
            Headers.push({
                Applicant: "Applicant",
                CollectibleDate: "Date",
                DayReference: "Day Ref.",
                LoanStatus: "Status",
                CollectibleAmount: "Collectible",
                PaidAmount: "Collected",
                PenaltyAmount: "Penalty"
            });

            var header = '';
            // Rows
            for (var b in Headers[0]) {
                header += '"' + Headers[0][b] + '",';
            }

            CSV = areaName + " Daily Collection" + '\r\n\n';
            CSV += header + '\r\n\n';
            for (var i = 0; i < dailyCollectionReport.length; i++) {
                var row = '';
                for (var a in dailyCollectionReport[i]) {
                    row += '"' + dailyCollectionReport[i][a] + '",';
                }
                row.slice(0, row.length - 1);
                CSV += row + '\r\n';

                if (i == dailyCollectionReport.length - 1) {
                    var totalActive = document.getElementById("totalActives").value;
                    var totalOverdue = document.getElementById("totalOverdues").value;
                    var totalActiveAndTotalOverdue = document.getElementById("totalActiveAndOverdues").value;
                    var totalCollectibles = document.getElementById("totalColletibles").value;
                    var totalCollections = document.getElementById("totalCollection").value;
                    var totalGasExpenses = document.getElementById("totalExpense").value;
                    var netCollection = document.getElementById("netCollection").value;

                    var totalActiveArray = ["Total Actives", totalActive];
                    totalActiveArray.slice(0, totalActiveArray.length - 1);

                    var totalOverdueArray = ["Total Overdues", totalOverdue];
                    totalOverdueArray.slice(0, totalOverdueArray.length - 1);

                    var totalActiveAndTotalOverduerArray = ["=", totalActiveAndTotalOverdue];
                    totalActiveAndTotalOverduerArray.slice(0, totalActiveAndTotalOverduerArray.length - 1);

                    var totalCollectiblesArray = ["Total Collectibles", totalCollectibles];
                    totalCollectiblesArray.slice(0, totalCollectiblesArray.length - 1);

                    var totalCollectionsArray = ["Total Collections", totalCollections];
                    totalCollectionsArray.slice(0, totalCollectionsArray.length - 1);

                    var totalGasExpensesArray = ["Gas Expense", totalGasExpenses];
                    totalGasExpensesArray.slice(0, totalGasExpensesArray.length - 1);

                    var netCollectionArray = ["Net Collection", netCollection];
                    netCollectionArray.slice(0, netCollectionArray.length - 1);

                    CSV += '\r\n' + totalActiveArray + '\r\n';
                    CSV += totalOverdueArray + '\r\n';
                    CSV += totalActiveAndTotalOverduerArray + '\r\n';
                    CSV += '\r\n' + totalCollectiblesArray + '\r\n';
                    CSV += '\r\n' + totalCollectionsArray + '\r\n';
                    CSV += totalGasExpensesArray + '\r\n';
                    CSV += netCollectionArray + '\r\n';

                    var supervisor = document.getElementById("areaSupervisor").value;
                    var collector = document.getElementById("areaCollector").value;

                    var superVisorArray = ["Supervisor Collection", supervisor];
                    superVisorArray.slice(0, superVisorArray.length - 1);

                    var collectorArray = ["Collector", collector];
                    collectorArray.slice(0, collectorArray.length - 1);

                    var checkedByArray = ["Checked By", " "];
                    checkedByArray.slice(0, checkedByArray.length - 1);

                    CSV += '\r\n' + superVisorArray + '\r\n';
                    CSV += collectorArray + '\r\n';
                    CSV += checkedByArray + '\r\n';
                }
            }

            if (CSV == '') {
                toastr.error("No data.");
            } else {
                var link = document.createElement("a");

                if (link.download !== undefined) {
                    var blob = new Blob([CSV], { type: 'text/csv;charset=utf-8;' });
                    var url = URL.createObjectURL(blob);
                    link.setAttribute("href", url);
                    link.setAttribute("download", fileName);
                    link.style = "visibility:hidden";
                }

                if (navigator.msSaveBlob) {
                    link.addEventListener("click", function (event) {
                        var blob = new Blob([CSV], {
                            "type": "text/csv;charset=utf-8;"
                        });
                        navigator.msSaveBlob(blob, fileName);
                    }, false);
                }

                document.body.appendChild(link);
                link.click();
                document.body.removeChild(link);

                toastr.success("Dowload successful.");
            }
        }

        // on load page
        window.onload = function () {
            NProgress.start();
            var canPerformActions = "@ViewData["CanPerformActions"]";
            if (canPerformActions == 1) {
                //$(':button').prop('disabled', false);
                NProgress.done();
            } else {
                $(':button').prop('disabled', true);
                NProgress.done();
                getUserRightsMessageError();
            }

            cboDate = new wijmo.input.InputDate('#cboDate');
            createCboDate();
        }
    </script>
</body>
</html>