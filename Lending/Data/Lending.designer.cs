#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Lending.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="lending")]
	public partial class LendingDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAspNetRole(AspNetRole instance);
    partial void UpdateAspNetRole(AspNetRole instance);
    partial void DeleteAspNetRole(AspNetRole instance);
    partial void InserttrnLoanLogHistory(trnLoanLogHistory instance);
    partial void UpdatetrnLoanLogHistory(trnLoanLogHistory instance);
    partial void DeletetrnLoanLogHistory(trnLoanLogHistory instance);
    partial void InsertAspNetUserClaim(AspNetUserClaim instance);
    partial void UpdateAspNetUserClaim(AspNetUserClaim instance);
    partial void DeleteAspNetUserClaim(AspNetUserClaim instance);
    partial void InsertAspNetUserLogin(AspNetUserLogin instance);
    partial void UpdateAspNetUserLogin(AspNetUserLogin instance);
    partial void DeleteAspNetUserLogin(AspNetUserLogin instance);
    partial void InsertAspNetUserRole(AspNetUserRole instance);
    partial void UpdateAspNetUserRole(AspNetUserRole instance);
    partial void DeleteAspNetUserRole(AspNetUserRole instance);
    partial void InsertAspNetUser(AspNetUser instance);
    partial void UpdateAspNetUser(AspNetUser instance);
    partial void DeleteAspNetUser(AspNetUser instance);
    partial void InsertmstAccount(mstAccount instance);
    partial void UpdatemstAccount(mstAccount instance);
    partial void DeletemstAccount(mstAccount instance);
    partial void InsertmstApplicant(mstApplicant instance);
    partial void UpdatemstApplicant(mstApplicant instance);
    partial void DeletemstApplicant(mstApplicant instance);
    partial void InsertmstApplicantApplianceOwned(mstApplicantApplianceOwned instance);
    partial void UpdatemstApplicantApplianceOwned(mstApplicantApplianceOwned instance);
    partial void DeletemstApplicantApplianceOwned(mstApplicantApplianceOwned instance);
    partial void InsertmstApplicantRealPropertiesOwned(mstApplicantRealPropertiesOwned instance);
    partial void UpdatemstApplicantRealPropertiesOwned(mstApplicantRealPropertiesOwned instance);
    partial void DeletemstApplicantRealPropertiesOwned(mstApplicantRealPropertiesOwned instance);
    partial void InsertmstArea(mstArea instance);
    partial void UpdatemstArea(mstArea instance);
    partial void DeletemstArea(mstArea instance);
    partial void InsertmstBranch(mstBranch instance);
    partial void UpdatemstBranch(mstBranch instance);
    partial void DeletemstBranch(mstBranch instance);
    partial void InsertmstCivilStatus(mstCivilStatus instance);
    partial void UpdatemstCivilStatus(mstCivilStatus instance);
    partial void DeletemstCivilStatus(mstCivilStatus instance);
    partial void InsertmstCollector(mstCollector instance);
    partial void UpdatemstCollector(mstCollector instance);
    partial void DeletemstCollector(mstCollector instance);
    partial void InsertmstCoMakerStatement(mstCoMakerStatement instance);
    partial void UpdatemstCoMakerStatement(mstCoMakerStatement instance);
    partial void DeletemstCoMakerStatement(mstCoMakerStatement instance);
    partial void InsertmstCoMakerStatementApplianceOwned(mstCoMakerStatementApplianceOwned instance);
    partial void UpdatemstCoMakerStatementApplianceOwned(mstCoMakerStatementApplianceOwned instance);
    partial void DeletemstCoMakerStatementApplianceOwned(mstCoMakerStatementApplianceOwned instance);
    partial void InsertmstCoMakerStatementRealPropertiesOwned(mstCoMakerStatementRealPropertiesOwned instance);
    partial void UpdatemstCoMakerStatementRealPropertiesOwned(mstCoMakerStatementRealPropertiesOwned instance);
    partial void DeletemstCoMakerStatementRealPropertiesOwned(mstCoMakerStatementRealPropertiesOwned instance);
    partial void InsertmstCompany(mstCompany instance);
    partial void UpdatemstCompany(mstCompany instance);
    partial void DeletemstCompany(mstCompany instance);
    partial void InsertmstRequirement(mstRequirement instance);
    partial void UpdatemstRequirement(mstRequirement instance);
    partial void DeletemstRequirement(mstRequirement instance);
    partial void InsertmstResidenceType(mstResidenceType instance);
    partial void UpdatemstResidenceType(mstResidenceType instance);
    partial void DeletemstResidenceType(mstResidenceType instance);
    partial void InsertmstTransactionType(mstTransactionType instance);
    partial void UpdatemstTransactionType(mstTransactionType instance);
    partial void DeletemstTransactionType(mstTransactionType instance);
    partial void InsertmstUser(mstUser instance);
    partial void UpdatemstUser(mstUser instance);
    partial void DeletemstUser(mstUser instance);
    partial void InserttrnCollectionLogHistory(trnCollectionLogHistory instance);
    partial void UpdatetrnCollectionLogHistory(trnCollectionLogHistory instance);
    partial void DeletetrnCollectionLogHistory(trnCollectionLogHistory instance);
    partial void InserttrnDisbursement(trnDisbursement instance);
    partial void UpdatetrnDisbursement(trnDisbursement instance);
    partial void DeletetrnDisbursement(trnDisbursement instance);
    partial void InserttrnJournal(trnJournal instance);
    partial void UpdatetrnJournal(trnJournal instance);
    partial void DeletetrnJournal(trnJournal instance);
    partial void InserttrnLoanApplication(trnLoanApplication instance);
    partial void UpdatetrnLoanApplication(trnLoanApplication instance);
    partial void DeletetrnLoanApplication(trnLoanApplication instance);
    partial void InserttrnLoanApplicationCollateral(trnLoanApplicationCollateral instance);
    partial void UpdatetrnLoanApplicationCollateral(trnLoanApplicationCollateral instance);
    partial void DeletetrnLoanApplicationCollateral(trnLoanApplicationCollateral instance);
    partial void InserttrnLoanApplicationRequirement(trnLoanApplicationRequirement instance);
    partial void UpdatetrnLoanApplicationRequirement(trnLoanApplicationRequirement instance);
    partial void DeletetrnLoanApplicationRequirement(trnLoanApplicationRequirement instance);
    #endregion
		
		public LendingDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["DefaultConnection"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public LendingDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LendingDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LendingDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LendingDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<AspNetRole> AspNetRoles
		{
			get
			{
				return this.GetTable<AspNetRole>();
			}
		}
		
		public System.Data.Linq.Table<trnLoanLogHistory> trnLoanLogHistories
		{
			get
			{
				return this.GetTable<trnLoanLogHistory>();
			}
		}
		
		public System.Data.Linq.Table<AspNetUserClaim> AspNetUserClaims
		{
			get
			{
				return this.GetTable<AspNetUserClaim>();
			}
		}
		
		public System.Data.Linq.Table<AspNetUserLogin> AspNetUserLogins
		{
			get
			{
				return this.GetTable<AspNetUserLogin>();
			}
		}
		
		public System.Data.Linq.Table<AspNetUserRole> AspNetUserRoles
		{
			get
			{
				return this.GetTable<AspNetUserRole>();
			}
		}
		
		public System.Data.Linq.Table<AspNetUser> AspNetUsers
		{
			get
			{
				return this.GetTable<AspNetUser>();
			}
		}
		
		public System.Data.Linq.Table<mstAccount> mstAccounts
		{
			get
			{
				return this.GetTable<mstAccount>();
			}
		}
		
		public System.Data.Linq.Table<mstApplicant> mstApplicants
		{
			get
			{
				return this.GetTable<mstApplicant>();
			}
		}
		
		public System.Data.Linq.Table<mstApplicantApplianceOwned> mstApplicantApplianceOwneds
		{
			get
			{
				return this.GetTable<mstApplicantApplianceOwned>();
			}
		}
		
		public System.Data.Linq.Table<mstApplicantRealPropertiesOwned> mstApplicantRealPropertiesOwneds
		{
			get
			{
				return this.GetTable<mstApplicantRealPropertiesOwned>();
			}
		}
		
		public System.Data.Linq.Table<mstArea> mstAreas
		{
			get
			{
				return this.GetTable<mstArea>();
			}
		}
		
		public System.Data.Linq.Table<mstBranch> mstBranches
		{
			get
			{
				return this.GetTable<mstBranch>();
			}
		}
		
		public System.Data.Linq.Table<mstCivilStatus> mstCivilStatus
		{
			get
			{
				return this.GetTable<mstCivilStatus>();
			}
		}
		
		public System.Data.Linq.Table<mstCollector> mstCollectors
		{
			get
			{
				return this.GetTable<mstCollector>();
			}
		}
		
		public System.Data.Linq.Table<mstCoMakerStatement> mstCoMakerStatements
		{
			get
			{
				return this.GetTable<mstCoMakerStatement>();
			}
		}
		
		public System.Data.Linq.Table<mstCoMakerStatementApplianceOwned> mstCoMakerStatementApplianceOwneds
		{
			get
			{
				return this.GetTable<mstCoMakerStatementApplianceOwned>();
			}
		}
		
		public System.Data.Linq.Table<mstCoMakerStatementRealPropertiesOwned> mstCoMakerStatementRealPropertiesOwneds
		{
			get
			{
				return this.GetTable<mstCoMakerStatementRealPropertiesOwned>();
			}
		}
		
		public System.Data.Linq.Table<mstCompany> mstCompanies
		{
			get
			{
				return this.GetTable<mstCompany>();
			}
		}
		
		public System.Data.Linq.Table<mstRequirement> mstRequirements
		{
			get
			{
				return this.GetTable<mstRequirement>();
			}
		}
		
		public System.Data.Linq.Table<mstResidenceType> mstResidenceTypes
		{
			get
			{
				return this.GetTable<mstResidenceType>();
			}
		}
		
		public System.Data.Linq.Table<mstTransactionType> mstTransactionTypes
		{
			get
			{
				return this.GetTable<mstTransactionType>();
			}
		}
		
		public System.Data.Linq.Table<mstUser> mstUsers
		{
			get
			{
				return this.GetTable<mstUser>();
			}
		}
		
		public System.Data.Linq.Table<trnCollectionLogHistory> trnCollectionLogHistories
		{
			get
			{
				return this.GetTable<trnCollectionLogHistory>();
			}
		}
		
		public System.Data.Linq.Table<trnDisbursement> trnDisbursements
		{
			get
			{
				return this.GetTable<trnDisbursement>();
			}
		}
		
		public System.Data.Linq.Table<trnJournal> trnJournals
		{
			get
			{
				return this.GetTable<trnJournal>();
			}
		}
		
		public System.Data.Linq.Table<trnLoanApplication> trnLoanApplications
		{
			get
			{
				return this.GetTable<trnLoanApplication>();
			}
		}
		
		public System.Data.Linq.Table<trnLoanApplicationCollateral> trnLoanApplicationCollaterals
		{
			get
			{
				return this.GetTable<trnLoanApplicationCollateral>();
			}
		}
		
		public System.Data.Linq.Table<trnLoanApplicationRequirement> trnLoanApplicationRequirements
		{
			get
			{
				return this.GetTable<trnLoanApplicationRequirement>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AspNetRoles")]
	public partial class AspNetRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private string _Name;
		
		private EntitySet<AspNetUserRole> _AspNetUserRoles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public AspNetRole()
		{
			this._AspNetUserRoles = new EntitySet<AspNetUserRole>(new Action<AspNetUserRole>(this.attach_AspNetUserRoles), new Action<AspNetUserRole>(this.detach_AspNetUserRoles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetRole_AspNetUserRole", Storage="_AspNetUserRoles", ThisKey="Id", OtherKey="RoleId")]
		public EntitySet<AspNetUserRole> AspNetUserRoles
		{
			get
			{
				return this._AspNetUserRoles;
			}
			set
			{
				this._AspNetUserRoles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AspNetUserRoles(AspNetUserRole entity)
		{
			this.SendPropertyChanging();
			entity.AspNetRole = this;
		}
		
		private void detach_AspNetUserRoles(AspNetUserRole entity)
		{
			this.SendPropertyChanging();
			entity.AspNetRole = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.trnLoanLogHistory")]
	public partial class trnLoanLogHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _LoanId;
		
		private System.DateTime _CollectionDate;
		
		private decimal _NetAmount;
		
		private decimal _CollectibleAmount;
		
		private decimal _PenaltyAmount;
		
		private decimal _PaidAmount;
		
		private decimal _PreviousBalanceAmount;
		
		private decimal _CurrentBalanceAmount;
		
		private bool _IsCleared;
		
		private bool _IsPenalty;
		
		private bool _IsOverdue;
		
		private bool _IsFullyPaid;
		
		private EntityRef<trnLoanApplication> _trnLoanApplication;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnLoanIdChanging(int value);
    partial void OnLoanIdChanged();
    partial void OnCollectionDateChanging(System.DateTime value);
    partial void OnCollectionDateChanged();
    partial void OnNetAmountChanging(decimal value);
    partial void OnNetAmountChanged();
    partial void OnCollectibleAmountChanging(decimal value);
    partial void OnCollectibleAmountChanged();
    partial void OnPenaltyAmountChanging(decimal value);
    partial void OnPenaltyAmountChanged();
    partial void OnPaidAmountChanging(decimal value);
    partial void OnPaidAmountChanged();
    partial void OnPreviousBalanceAmountChanging(decimal value);
    partial void OnPreviousBalanceAmountChanged();
    partial void OnCurrentBalanceAmountChanging(decimal value);
    partial void OnCurrentBalanceAmountChanged();
    partial void OnIsClearedChanging(bool value);
    partial void OnIsClearedChanged();
    partial void OnIsPenaltyChanging(bool value);
    partial void OnIsPenaltyChanged();
    partial void OnIsOverdueChanging(bool value);
    partial void OnIsOverdueChanged();
    partial void OnIsFullyPaidChanging(bool value);
    partial void OnIsFullyPaidChanged();
    #endregion
		
		public trnLoanLogHistory()
		{
			this._trnLoanApplication = default(EntityRef<trnLoanApplication>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanId", DbType="Int NOT NULL")]
		public int LoanId
		{
			get
			{
				return this._LoanId;
			}
			set
			{
				if ((this._LoanId != value))
				{
					if (this._trnLoanApplication.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLoanIdChanging(value);
					this.SendPropertyChanging();
					this._LoanId = value;
					this.SendPropertyChanged("LoanId");
					this.OnLoanIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CollectionDate", DbType="DateTime NOT NULL")]
		public System.DateTime CollectionDate
		{
			get
			{
				return this._CollectionDate;
			}
			set
			{
				if ((this._CollectionDate != value))
				{
					this.OnCollectionDateChanging(value);
					this.SendPropertyChanging();
					this._CollectionDate = value;
					this.SendPropertyChanged("CollectionDate");
					this.OnCollectionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NetAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal NetAmount
		{
			get
			{
				return this._NetAmount;
			}
			set
			{
				if ((this._NetAmount != value))
				{
					this.OnNetAmountChanging(value);
					this.SendPropertyChanging();
					this._NetAmount = value;
					this.SendPropertyChanged("NetAmount");
					this.OnNetAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CollectibleAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal CollectibleAmount
		{
			get
			{
				return this._CollectibleAmount;
			}
			set
			{
				if ((this._CollectibleAmount != value))
				{
					this.OnCollectibleAmountChanging(value);
					this.SendPropertyChanging();
					this._CollectibleAmount = value;
					this.SendPropertyChanged("CollectibleAmount");
					this.OnCollectibleAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PenaltyAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal PenaltyAmount
		{
			get
			{
				return this._PenaltyAmount;
			}
			set
			{
				if ((this._PenaltyAmount != value))
				{
					this.OnPenaltyAmountChanging(value);
					this.SendPropertyChanging();
					this._PenaltyAmount = value;
					this.SendPropertyChanged("PenaltyAmount");
					this.OnPenaltyAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaidAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal PaidAmount
		{
			get
			{
				return this._PaidAmount;
			}
			set
			{
				if ((this._PaidAmount != value))
				{
					this.OnPaidAmountChanging(value);
					this.SendPropertyChanging();
					this._PaidAmount = value;
					this.SendPropertyChanged("PaidAmount");
					this.OnPaidAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreviousBalanceAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal PreviousBalanceAmount
		{
			get
			{
				return this._PreviousBalanceAmount;
			}
			set
			{
				if ((this._PreviousBalanceAmount != value))
				{
					this.OnPreviousBalanceAmountChanging(value);
					this.SendPropertyChanging();
					this._PreviousBalanceAmount = value;
					this.SendPropertyChanged("PreviousBalanceAmount");
					this.OnPreviousBalanceAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentBalanceAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal CurrentBalanceAmount
		{
			get
			{
				return this._CurrentBalanceAmount;
			}
			set
			{
				if ((this._CurrentBalanceAmount != value))
				{
					this.OnCurrentBalanceAmountChanging(value);
					this.SendPropertyChanging();
					this._CurrentBalanceAmount = value;
					this.SendPropertyChanged("CurrentBalanceAmount");
					this.OnCurrentBalanceAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCleared", DbType="Bit NOT NULL")]
		public bool IsCleared
		{
			get
			{
				return this._IsCleared;
			}
			set
			{
				if ((this._IsCleared != value))
				{
					this.OnIsClearedChanging(value);
					this.SendPropertyChanging();
					this._IsCleared = value;
					this.SendPropertyChanged("IsCleared");
					this.OnIsClearedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPenalty", DbType="Bit NOT NULL")]
		public bool IsPenalty
		{
			get
			{
				return this._IsPenalty;
			}
			set
			{
				if ((this._IsPenalty != value))
				{
					this.OnIsPenaltyChanging(value);
					this.SendPropertyChanging();
					this._IsPenalty = value;
					this.SendPropertyChanged("IsPenalty");
					this.OnIsPenaltyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOverdue", DbType="Bit NOT NULL")]
		public bool IsOverdue
		{
			get
			{
				return this._IsOverdue;
			}
			set
			{
				if ((this._IsOverdue != value))
				{
					this.OnIsOverdueChanging(value);
					this.SendPropertyChanging();
					this._IsOverdue = value;
					this.SendPropertyChanged("IsOverdue");
					this.OnIsOverdueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFullyPaid", DbType="Bit NOT NULL")]
		public bool IsFullyPaid
		{
			get
			{
				return this._IsFullyPaid;
			}
			set
			{
				if ((this._IsFullyPaid != value))
				{
					this.OnIsFullyPaidChanging(value);
					this.SendPropertyChanging();
					this._IsFullyPaid = value;
					this.SendPropertyChanged("IsFullyPaid");
					this.OnIsFullyPaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="trnLoanApplication_trnLoanLogHistory", Storage="_trnLoanApplication", ThisKey="LoanId", OtherKey="Id", IsForeignKey=true)]
		public trnLoanApplication trnLoanApplication
		{
			get
			{
				return this._trnLoanApplication.Entity;
			}
			set
			{
				trnLoanApplication previousValue = this._trnLoanApplication.Entity;
				if (((previousValue != value) 
							|| (this._trnLoanApplication.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._trnLoanApplication.Entity = null;
						previousValue.trnLoanLogHistories.Remove(this);
					}
					this._trnLoanApplication.Entity = value;
					if ((value != null))
					{
						value.trnLoanLogHistories.Add(this);
						this._LoanId = value.Id;
					}
					else
					{
						this._LoanId = default(int);
					}
					this.SendPropertyChanged("trnLoanApplication");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AspNetUserClaims")]
	public partial class AspNetUserClaim : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _UserId;
		
		private string _ClaimType;
		
		private string _ClaimValue;
		
		private EntityRef<AspNetUser> _AspNetUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    partial void OnClaimTypeChanging(string value);
    partial void OnClaimTypeChanged();
    partial void OnClaimValueChanging(string value);
    partial void OnClaimValueChanged();
    #endregion
		
		public AspNetUserClaim()
		{
			this._AspNetUser = default(EntityRef<AspNetUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._AspNetUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClaimType", DbType="NVarChar(MAX)")]
		public string ClaimType
		{
			get
			{
				return this._ClaimType;
			}
			set
			{
				if ((this._ClaimType != value))
				{
					this.OnClaimTypeChanging(value);
					this.SendPropertyChanging();
					this._ClaimType = value;
					this.SendPropertyChanged("ClaimType");
					this.OnClaimTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClaimValue", DbType="NVarChar(MAX)")]
		public string ClaimValue
		{
			get
			{
				return this._ClaimValue;
			}
			set
			{
				if ((this._ClaimValue != value))
				{
					this.OnClaimValueChanging(value);
					this.SendPropertyChanging();
					this._ClaimValue = value;
					this.SendPropertyChanged("ClaimValue");
					this.OnClaimValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetUser_AspNetUserClaim", Storage="_AspNetUser", ThisKey="UserId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public AspNetUser AspNetUser
		{
			get
			{
				return this._AspNetUser.Entity;
			}
			set
			{
				AspNetUser previousValue = this._AspNetUser.Entity;
				if (((previousValue != value) 
							|| (this._AspNetUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AspNetUser.Entity = null;
						previousValue.AspNetUserClaims.Remove(this);
					}
					this._AspNetUser.Entity = value;
					if ((value != null))
					{
						value.AspNetUserClaims.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(string);
					}
					this.SendPropertyChanged("AspNetUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AspNetUserLogins")]
	public partial class AspNetUserLogin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _LoginProvider;
		
		private string _ProviderKey;
		
		private string _UserId;
		
		private EntityRef<AspNetUser> _AspNetUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLoginProviderChanging(string value);
    partial void OnLoginProviderChanged();
    partial void OnProviderKeyChanging(string value);
    partial void OnProviderKeyChanged();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    #endregion
		
		public AspNetUserLogin()
		{
			this._AspNetUser = default(EntityRef<AspNetUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginProvider", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string LoginProvider
		{
			get
			{
				return this._LoginProvider;
			}
			set
			{
				if ((this._LoginProvider != value))
				{
					this.OnLoginProviderChanging(value);
					this.SendPropertyChanging();
					this._LoginProvider = value;
					this.SendPropertyChanged("LoginProvider");
					this.OnLoginProviderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProviderKey", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ProviderKey
		{
			get
			{
				return this._ProviderKey;
			}
			set
			{
				if ((this._ProviderKey != value))
				{
					this.OnProviderKeyChanging(value);
					this.SendPropertyChanging();
					this._ProviderKey = value;
					this.SendPropertyChanged("ProviderKey");
					this.OnProviderKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._AspNetUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetUser_AspNetUserLogin", Storage="_AspNetUser", ThisKey="UserId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public AspNetUser AspNetUser
		{
			get
			{
				return this._AspNetUser.Entity;
			}
			set
			{
				AspNetUser previousValue = this._AspNetUser.Entity;
				if (((previousValue != value) 
							|| (this._AspNetUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AspNetUser.Entity = null;
						previousValue.AspNetUserLogins.Remove(this);
					}
					this._AspNetUser.Entity = value;
					if ((value != null))
					{
						value.AspNetUserLogins.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(string);
					}
					this.SendPropertyChanged("AspNetUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AspNetUserRoles")]
	public partial class AspNetUserRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UserId;
		
		private string _RoleId;
		
		private EntityRef<AspNetRole> _AspNetRole;
		
		private EntityRef<AspNetUser> _AspNetUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    partial void OnRoleIdChanging(string value);
    partial void OnRoleIdChanged();
    #endregion
		
		public AspNetUserRole()
		{
			this._AspNetRole = default(EntityRef<AspNetRole>);
			this._AspNetUser = default(EntityRef<AspNetUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._AspNetUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._AspNetRole.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetRole_AspNetUserRole", Storage="_AspNetRole", ThisKey="RoleId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public AspNetRole AspNetRole
		{
			get
			{
				return this._AspNetRole.Entity;
			}
			set
			{
				AspNetRole previousValue = this._AspNetRole.Entity;
				if (((previousValue != value) 
							|| (this._AspNetRole.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AspNetRole.Entity = null;
						previousValue.AspNetUserRoles.Remove(this);
					}
					this._AspNetRole.Entity = value;
					if ((value != null))
					{
						value.AspNetUserRoles.Add(this);
						this._RoleId = value.Id;
					}
					else
					{
						this._RoleId = default(string);
					}
					this.SendPropertyChanged("AspNetRole");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetUser_AspNetUserRole", Storage="_AspNetUser", ThisKey="UserId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public AspNetUser AspNetUser
		{
			get
			{
				return this._AspNetUser.Entity;
			}
			set
			{
				AspNetUser previousValue = this._AspNetUser.Entity;
				if (((previousValue != value) 
							|| (this._AspNetUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AspNetUser.Entity = null;
						previousValue.AspNetUserRoles.Remove(this);
					}
					this._AspNetUser.Entity = value;
					if ((value != null))
					{
						value.AspNetUserRoles.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(string);
					}
					this.SendPropertyChanged("AspNetUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AspNetUsers")]
	public partial class AspNetUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private string _UserName;
		
		private string _PasswordHash;
		
		private string _FullName;
		
		private string _Email;
		
		private System.Nullable<bool> _EmailConfirmed;
		
		private string _SecurityStamp;
		
		private string _PhoneNumber;
		
		private System.Nullable<bool> _PhoneNumberConfirmed;
		
		private System.Nullable<bool> _TwoFactorEnabled;
		
		private System.Nullable<System.DateTime> _LockoutEndDateUtc;
		
		private System.Nullable<bool> _LockoutEnabled;
		
		private System.Nullable<int> _AccessFailedCount;
		
		private EntitySet<AspNetUserClaim> _AspNetUserClaims;
		
		private EntitySet<AspNetUserLogin> _AspNetUserLogins;
		
		private EntitySet<AspNetUserRole> _AspNetUserRoles;
		
		private EntitySet<mstUser> _mstUsers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordHashChanging(string value);
    partial void OnPasswordHashChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnEmailConfirmedChanging(System.Nullable<bool> value);
    partial void OnEmailConfirmedChanged();
    partial void OnSecurityStampChanging(string value);
    partial void OnSecurityStampChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnPhoneNumberConfirmedChanging(System.Nullable<bool> value);
    partial void OnPhoneNumberConfirmedChanged();
    partial void OnTwoFactorEnabledChanging(System.Nullable<bool> value);
    partial void OnTwoFactorEnabledChanged();
    partial void OnLockoutEndDateUtcChanging(System.Nullable<System.DateTime> value);
    partial void OnLockoutEndDateUtcChanged();
    partial void OnLockoutEnabledChanging(System.Nullable<bool> value);
    partial void OnLockoutEnabledChanged();
    partial void OnAccessFailedCountChanging(System.Nullable<int> value);
    partial void OnAccessFailedCountChanged();
    #endregion
		
		public AspNetUser()
		{
			this._AspNetUserClaims = new EntitySet<AspNetUserClaim>(new Action<AspNetUserClaim>(this.attach_AspNetUserClaims), new Action<AspNetUserClaim>(this.detach_AspNetUserClaims));
			this._AspNetUserLogins = new EntitySet<AspNetUserLogin>(new Action<AspNetUserLogin>(this.attach_AspNetUserLogins), new Action<AspNetUserLogin>(this.detach_AspNetUserLogins));
			this._AspNetUserRoles = new EntitySet<AspNetUserRole>(new Action<AspNetUserRole>(this.attach_AspNetUserRoles), new Action<AspNetUserRole>(this.detach_AspNetUserRoles));
			this._mstUsers = new EntitySet<mstUser>(new Action<mstUser>(this.attach_mstUsers), new Action<mstUser>(this.detach_mstUsers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordHash", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string PasswordHash
		{
			get
			{
				return this._PasswordHash;
			}
			set
			{
				if ((this._PasswordHash != value))
				{
					this.OnPasswordHashChanging(value);
					this.SendPropertyChanging();
					this._PasswordHash = value;
					this.SendPropertyChanged("PasswordHash");
					this.OnPasswordHashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(256)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailConfirmed", DbType="Bit")]
		public System.Nullable<bool> EmailConfirmed
		{
			get
			{
				return this._EmailConfirmed;
			}
			set
			{
				if ((this._EmailConfirmed != value))
				{
					this.OnEmailConfirmedChanging(value);
					this.SendPropertyChanging();
					this._EmailConfirmed = value;
					this.SendPropertyChanged("EmailConfirmed");
					this.OnEmailConfirmedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecurityStamp", DbType="NVarChar(MAX)")]
		public string SecurityStamp
		{
			get
			{
				return this._SecurityStamp;
			}
			set
			{
				if ((this._SecurityStamp != value))
				{
					this.OnSecurityStampChanging(value);
					this.SendPropertyChanging();
					this._SecurityStamp = value;
					this.SendPropertyChanged("SecurityStamp");
					this.OnSecurityStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="NVarChar(MAX)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumberConfirmed", DbType="Bit")]
		public System.Nullable<bool> PhoneNumberConfirmed
		{
			get
			{
				return this._PhoneNumberConfirmed;
			}
			set
			{
				if ((this._PhoneNumberConfirmed != value))
				{
					this.OnPhoneNumberConfirmedChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumberConfirmed = value;
					this.SendPropertyChanged("PhoneNumberConfirmed");
					this.OnPhoneNumberConfirmedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TwoFactorEnabled", DbType="Bit")]
		public System.Nullable<bool> TwoFactorEnabled
		{
			get
			{
				return this._TwoFactorEnabled;
			}
			set
			{
				if ((this._TwoFactorEnabled != value))
				{
					this.OnTwoFactorEnabledChanging(value);
					this.SendPropertyChanging();
					this._TwoFactorEnabled = value;
					this.SendPropertyChanged("TwoFactorEnabled");
					this.OnTwoFactorEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LockoutEndDateUtc", DbType="DateTime")]
		public System.Nullable<System.DateTime> LockoutEndDateUtc
		{
			get
			{
				return this._LockoutEndDateUtc;
			}
			set
			{
				if ((this._LockoutEndDateUtc != value))
				{
					this.OnLockoutEndDateUtcChanging(value);
					this.SendPropertyChanging();
					this._LockoutEndDateUtc = value;
					this.SendPropertyChanged("LockoutEndDateUtc");
					this.OnLockoutEndDateUtcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LockoutEnabled", DbType="Bit")]
		public System.Nullable<bool> LockoutEnabled
		{
			get
			{
				return this._LockoutEnabled;
			}
			set
			{
				if ((this._LockoutEnabled != value))
				{
					this.OnLockoutEnabledChanging(value);
					this.SendPropertyChanging();
					this._LockoutEnabled = value;
					this.SendPropertyChanged("LockoutEnabled");
					this.OnLockoutEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessFailedCount", DbType="Int")]
		public System.Nullable<int> AccessFailedCount
		{
			get
			{
				return this._AccessFailedCount;
			}
			set
			{
				if ((this._AccessFailedCount != value))
				{
					this.OnAccessFailedCountChanging(value);
					this.SendPropertyChanging();
					this._AccessFailedCount = value;
					this.SendPropertyChanged("AccessFailedCount");
					this.OnAccessFailedCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetUser_AspNetUserClaim", Storage="_AspNetUserClaims", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<AspNetUserClaim> AspNetUserClaims
		{
			get
			{
				return this._AspNetUserClaims;
			}
			set
			{
				this._AspNetUserClaims.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetUser_AspNetUserLogin", Storage="_AspNetUserLogins", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<AspNetUserLogin> AspNetUserLogins
		{
			get
			{
				return this._AspNetUserLogins;
			}
			set
			{
				this._AspNetUserLogins.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetUser_AspNetUserRole", Storage="_AspNetUserRoles", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<AspNetUserRole> AspNetUserRoles
		{
			get
			{
				return this._AspNetUserRoles;
			}
			set
			{
				this._AspNetUserRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetUser_mstUser", Storage="_mstUsers", ThisKey="Id", OtherKey="AspUserId")]
		public EntitySet<mstUser> mstUsers
		{
			get
			{
				return this._mstUsers;
			}
			set
			{
				this._mstUsers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AspNetUserClaims(AspNetUserClaim entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUser = this;
		}
		
		private void detach_AspNetUserClaims(AspNetUserClaim entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUser = null;
		}
		
		private void attach_AspNetUserLogins(AspNetUserLogin entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUser = this;
		}
		
		private void detach_AspNetUserLogins(AspNetUserLogin entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUser = null;
		}
		
		private void attach_AspNetUserRoles(AspNetUserRole entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUser = this;
		}
		
		private void detach_AspNetUserRoles(AspNetUserRole entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUser = null;
		}
		
		private void attach_mstUsers(mstUser entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUser = this;
		}
		
		private void detach_mstUsers(mstUser entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUser = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mstAccount")]
	public partial class mstAccount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Account;
		
		private string _Description;
		
		private int _AccountTransactionTypeId;
		
		private int _CreatedByUserId;
		
		private System.DateTime _CreatedDateTime;
		
		private int _UpdatedByUserId;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntitySet<trnDisbursement> _trnDisbursements;
		
		private EntitySet<trnJournal> _trnJournals;
		
		private EntitySet<trnLoanApplication> _trnLoanApplications;
		
		private EntityRef<mstTransactionType> _mstTransactionType;
		
		private EntityRef<mstUser> _mstUser;
		
		private EntityRef<mstUser> _mstUser1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAccountChanging(string value);
    partial void OnAccountChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnAccountTransactionTypeIdChanging(int value);
    partial void OnAccountTransactionTypeIdChanged();
    partial void OnCreatedByUserIdChanging(int value);
    partial void OnCreatedByUserIdChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByUserIdChanging(int value);
    partial void OnUpdatedByUserIdChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public mstAccount()
		{
			this._trnDisbursements = new EntitySet<trnDisbursement>(new Action<trnDisbursement>(this.attach_trnDisbursements), new Action<trnDisbursement>(this.detach_trnDisbursements));
			this._trnJournals = new EntitySet<trnJournal>(new Action<trnJournal>(this.attach_trnJournals), new Action<trnJournal>(this.detach_trnJournals));
			this._trnLoanApplications = new EntitySet<trnLoanApplication>(new Action<trnLoanApplication>(this.attach_trnLoanApplications), new Action<trnLoanApplication>(this.detach_trnLoanApplications));
			this._mstTransactionType = default(EntityRef<mstTransactionType>);
			this._mstUser = default(EntityRef<mstUser>);
			this._mstUser1 = default(EntityRef<mstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Account", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Account
		{
			get
			{
				return this._Account;
			}
			set
			{
				if ((this._Account != value))
				{
					this.OnAccountChanging(value);
					this.SendPropertyChanging();
					this._Account = value;
					this.SendPropertyChanged("Account");
					this.OnAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountTransactionTypeId", DbType="Int NOT NULL")]
		public int AccountTransactionTypeId
		{
			get
			{
				return this._AccountTransactionTypeId;
			}
			set
			{
				if ((this._AccountTransactionTypeId != value))
				{
					if (this._mstTransactionType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountTransactionTypeIdChanging(value);
					this.SendPropertyChanging();
					this._AccountTransactionTypeId = value;
					this.SendPropertyChanged("AccountTransactionTypeId");
					this.OnAccountTransactionTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserId", DbType="Int NOT NULL")]
		public int CreatedByUserId
		{
			get
			{
				return this._CreatedByUserId;
			}
			set
			{
				if ((this._CreatedByUserId != value))
				{
					if (this._mstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserId = value;
					this.SendPropertyChanged("CreatedByUserId");
					this.OnCreatedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedByUserId", DbType="Int NOT NULL")]
		public int UpdatedByUserId
		{
			get
			{
				return this._UpdatedByUserId;
			}
			set
			{
				if ((this._UpdatedByUserId != value))
				{
					if (this._mstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedByUserId = value;
					this.SendPropertyChanged("UpdatedByUserId");
					this.OnUpdatedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstAccount_trnDisbursement", Storage="_trnDisbursements", ThisKey="Id", OtherKey="AccountId")]
		public EntitySet<trnDisbursement> trnDisbursements
		{
			get
			{
				return this._trnDisbursements;
			}
			set
			{
				this._trnDisbursements.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstAccount_trnJournal", Storage="_trnJournals", ThisKey="Id", OtherKey="AccountId")]
		public EntitySet<trnJournal> trnJournals
		{
			get
			{
				return this._trnJournals;
			}
			set
			{
				this._trnJournals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstAccount_trnLoanApplication", Storage="_trnLoanApplications", ThisKey="Id", OtherKey="AccountId")]
		public EntitySet<trnLoanApplication> trnLoanApplications
		{
			get
			{
				return this._trnLoanApplications;
			}
			set
			{
				this._trnLoanApplications.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstTransactionType_mstAccount", Storage="_mstTransactionType", ThisKey="AccountTransactionTypeId", OtherKey="Id", IsForeignKey=true)]
		public mstTransactionType mstTransactionType
		{
			get
			{
				return this._mstTransactionType.Entity;
			}
			set
			{
				mstTransactionType previousValue = this._mstTransactionType.Entity;
				if (((previousValue != value) 
							|| (this._mstTransactionType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstTransactionType.Entity = null;
						previousValue.mstAccounts.Remove(this);
					}
					this._mstTransactionType.Entity = value;
					if ((value != null))
					{
						value.mstAccounts.Add(this);
						this._AccountTransactionTypeId = value.Id;
					}
					else
					{
						this._AccountTransactionTypeId = default(int);
					}
					this.SendPropertyChanged("mstTransactionType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUser_mstAccount", Storage="_mstUser", ThisKey="CreatedByUserId", OtherKey="Id", IsForeignKey=true)]
		public mstUser mstUser
		{
			get
			{
				return this._mstUser.Entity;
			}
			set
			{
				mstUser previousValue = this._mstUser.Entity;
				if (((previousValue != value) 
							|| (this._mstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstUser.Entity = null;
						previousValue.mstAccounts.Remove(this);
					}
					this._mstUser.Entity = value;
					if ((value != null))
					{
						value.mstAccounts.Add(this);
						this._CreatedByUserId = value.Id;
					}
					else
					{
						this._CreatedByUserId = default(int);
					}
					this.SendPropertyChanged("mstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUser_mstAccount1", Storage="_mstUser1", ThisKey="UpdatedByUserId", OtherKey="Id", IsForeignKey=true)]
		public mstUser mstUser1
		{
			get
			{
				return this._mstUser1.Entity;
			}
			set
			{
				mstUser previousValue = this._mstUser1.Entity;
				if (((previousValue != value) 
							|| (this._mstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstUser1.Entity = null;
						previousValue.mstAccounts1.Remove(this);
					}
					this._mstUser1.Entity = value;
					if ((value != null))
					{
						value.mstAccounts1.Add(this);
						this._UpdatedByUserId = value.Id;
					}
					else
					{
						this._UpdatedByUserId = default(int);
					}
					this.SendPropertyChanged("mstUser1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_trnDisbursements(trnDisbursement entity)
		{
			this.SendPropertyChanging();
			entity.mstAccount = this;
		}
		
		private void detach_trnDisbursements(trnDisbursement entity)
		{
			this.SendPropertyChanging();
			entity.mstAccount = null;
		}
		
		private void attach_trnJournals(trnJournal entity)
		{
			this.SendPropertyChanging();
			entity.mstAccount = this;
		}
		
		private void detach_trnJournals(trnJournal entity)
		{
			this.SendPropertyChanging();
			entity.mstAccount = null;
		}
		
		private void attach_trnLoanApplications(trnLoanApplication entity)
		{
			this.SendPropertyChanging();
			entity.mstAccount = this;
		}
		
		private void detach_trnLoanApplications(trnLoanApplication entity)
		{
			this.SendPropertyChanging();
			entity.mstAccount = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mstApplicant")]
	public partial class mstApplicant : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _ApplicantNumber;
		
		private System.Data.Linq.Binary _Photo;
		
		private int _AreaId;
		
		private string _ApplicantLastName;
		
		private string _ApplicantFirstName;
		
		private string _ApplicantMiddleName;
		
		private System.DateTime _BirthDate;
		
		private int _CivilStatusId;
		
		private string _CityAddress;
		
		private string _ProvinceAddress;
		
		private string _ContactNumber;
		
		private int _ResidenceTypeId;
		
		private decimal _ResidenceMonthlyRentAmount;
		
		private int _LandResidenceTypeId;
		
		private decimal _LandResidenceMonthlyRentAmount;
		
		private string _LengthOfStay;
		
		private string _BusinessAddress;
		
		private string _BusinessKaratulaName;
		
		private string _BusinessTelephoneNumber;
		
		private string _BusinessYear;
		
		private string _BusinessMerchandise;
		
		private decimal _BusinessStockValues;
		
		private decimal _BusinessBeginningCapital;
		
		private string _BusinessLowSalesPeriod;
		
		private decimal _BusinessLowestDailySales;
		
		private decimal _BusinessAverageDailySales;
		
		private string _EmployedCompany;
		
		private string _EmployedCompanyAddress;
		
		private string _EmployedPositionOccupied;
		
		private string _EmployedServiceLength;
		
		private string _EmployedTelephoneNumber;
		
		private string _SpouseFullName;
		
		private string _SpouseEmployerBusiness;
		
		private string _SpouseEmployerBusinessAddress;
		
		private string _SpouseBusinessTelephoneNumber;
		
		private string _SpousePositionOccupied;
		
		private decimal _SpouseMonthlySalary;
		
		private string _SpouseLengthOfService;
		
		private string _NumberOfChildren;
		
		private string _Studying;
		
		private string _Schools;
		
		private bool _IsLocked;
		
		private int _CreatedByUserId;
		
		private System.DateTime _CreatedDateTime;
		
		private int _UpdatedByUserId;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntitySet<mstApplicantApplianceOwned> _mstApplicantApplianceOwneds;
		
		private EntitySet<mstApplicantRealPropertiesOwned> _mstApplicantRealPropertiesOwneds;
		
		private EntitySet<mstCoMakerStatement> _mstCoMakerStatements;
		
		private EntitySet<trnLoanApplication> _trnLoanApplications;
		
		private EntityRef<mstArea> _mstArea;
		
		private EntityRef<mstCivilStatus> _mstCivilStatus;
		
		private EntityRef<mstResidenceType> _mstResidenceType;
		
		private EntityRef<mstResidenceType> _mstResidenceType1;
		
		private EntityRef<mstUser> _mstUser;
		
		private EntityRef<mstUser> _mstUser1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnApplicantNumberChanging(string value);
    partial void OnApplicantNumberChanged();
    partial void OnPhotoChanging(System.Data.Linq.Binary value);
    partial void OnPhotoChanged();
    partial void OnAreaIdChanging(int value);
    partial void OnAreaIdChanged();
    partial void OnApplicantLastNameChanging(string value);
    partial void OnApplicantLastNameChanged();
    partial void OnApplicantFirstNameChanging(string value);
    partial void OnApplicantFirstNameChanged();
    partial void OnApplicantMiddleNameChanging(string value);
    partial void OnApplicantMiddleNameChanged();
    partial void OnBirthDateChanging(System.DateTime value);
    partial void OnBirthDateChanged();
    partial void OnCivilStatusIdChanging(int value);
    partial void OnCivilStatusIdChanged();
    partial void OnCityAddressChanging(string value);
    partial void OnCityAddressChanged();
    partial void OnProvinceAddressChanging(string value);
    partial void OnProvinceAddressChanged();
    partial void OnContactNumberChanging(string value);
    partial void OnContactNumberChanged();
    partial void OnResidenceTypeIdChanging(int value);
    partial void OnResidenceTypeIdChanged();
    partial void OnResidenceMonthlyRentAmountChanging(decimal value);
    partial void OnResidenceMonthlyRentAmountChanged();
    partial void OnLandResidenceTypeIdChanging(int value);
    partial void OnLandResidenceTypeIdChanged();
    partial void OnLandResidenceMonthlyRentAmountChanging(decimal value);
    partial void OnLandResidenceMonthlyRentAmountChanged();
    partial void OnLengthOfStayChanging(string value);
    partial void OnLengthOfStayChanged();
    partial void OnBusinessAddressChanging(string value);
    partial void OnBusinessAddressChanged();
    partial void OnBusinessKaratulaNameChanging(string value);
    partial void OnBusinessKaratulaNameChanged();
    partial void OnBusinessTelephoneNumberChanging(string value);
    partial void OnBusinessTelephoneNumberChanged();
    partial void OnBusinessYearChanging(string value);
    partial void OnBusinessYearChanged();
    partial void OnBusinessMerchandiseChanging(string value);
    partial void OnBusinessMerchandiseChanged();
    partial void OnBusinessStockValuesChanging(decimal value);
    partial void OnBusinessStockValuesChanged();
    partial void OnBusinessBeginningCapitalChanging(decimal value);
    partial void OnBusinessBeginningCapitalChanged();
    partial void OnBusinessLowSalesPeriodChanging(string value);
    partial void OnBusinessLowSalesPeriodChanged();
    partial void OnBusinessLowestDailySalesChanging(decimal value);
    partial void OnBusinessLowestDailySalesChanged();
    partial void OnBusinessAverageDailySalesChanging(decimal value);
    partial void OnBusinessAverageDailySalesChanged();
    partial void OnEmployedCompanyChanging(string value);
    partial void OnEmployedCompanyChanged();
    partial void OnEmployedCompanyAddressChanging(string value);
    partial void OnEmployedCompanyAddressChanged();
    partial void OnEmployedPositionOccupiedChanging(string value);
    partial void OnEmployedPositionOccupiedChanged();
    partial void OnEmployedServiceLengthChanging(string value);
    partial void OnEmployedServiceLengthChanged();
    partial void OnEmployedTelephoneNumberChanging(string value);
    partial void OnEmployedTelephoneNumberChanged();
    partial void OnSpouseFullNameChanging(string value);
    partial void OnSpouseFullNameChanged();
    partial void OnSpouseEmployerBusinessChanging(string value);
    partial void OnSpouseEmployerBusinessChanged();
    partial void OnSpouseEmployerBusinessAddressChanging(string value);
    partial void OnSpouseEmployerBusinessAddressChanged();
    partial void OnSpouseBusinessTelephoneNumberChanging(string value);
    partial void OnSpouseBusinessTelephoneNumberChanged();
    partial void OnSpousePositionOccupiedChanging(string value);
    partial void OnSpousePositionOccupiedChanged();
    partial void OnSpouseMonthlySalaryChanging(decimal value);
    partial void OnSpouseMonthlySalaryChanged();
    partial void OnSpouseLengthOfServiceChanging(string value);
    partial void OnSpouseLengthOfServiceChanged();
    partial void OnNumberOfChildrenChanging(string value);
    partial void OnNumberOfChildrenChanged();
    partial void OnStudyingChanging(string value);
    partial void OnStudyingChanged();
    partial void OnSchoolsChanging(string value);
    partial void OnSchoolsChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByUserIdChanging(int value);
    partial void OnCreatedByUserIdChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByUserIdChanging(int value);
    partial void OnUpdatedByUserIdChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public mstApplicant()
		{
			this._mstApplicantApplianceOwneds = new EntitySet<mstApplicantApplianceOwned>(new Action<mstApplicantApplianceOwned>(this.attach_mstApplicantApplianceOwneds), new Action<mstApplicantApplianceOwned>(this.detach_mstApplicantApplianceOwneds));
			this._mstApplicantRealPropertiesOwneds = new EntitySet<mstApplicantRealPropertiesOwned>(new Action<mstApplicantRealPropertiesOwned>(this.attach_mstApplicantRealPropertiesOwneds), new Action<mstApplicantRealPropertiesOwned>(this.detach_mstApplicantRealPropertiesOwneds));
			this._mstCoMakerStatements = new EntitySet<mstCoMakerStatement>(new Action<mstCoMakerStatement>(this.attach_mstCoMakerStatements), new Action<mstCoMakerStatement>(this.detach_mstCoMakerStatements));
			this._trnLoanApplications = new EntitySet<trnLoanApplication>(new Action<trnLoanApplication>(this.attach_trnLoanApplications), new Action<trnLoanApplication>(this.detach_trnLoanApplications));
			this._mstArea = default(EntityRef<mstArea>);
			this._mstCivilStatus = default(EntityRef<mstCivilStatus>);
			this._mstResidenceType = default(EntityRef<mstResidenceType>);
			this._mstResidenceType1 = default(EntityRef<mstResidenceType>);
			this._mstUser = default(EntityRef<mstUser>);
			this._mstUser1 = default(EntityRef<mstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicantNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ApplicantNumber
		{
			get
			{
				return this._ApplicantNumber;
			}
			set
			{
				if ((this._ApplicantNumber != value))
				{
					this.OnApplicantNumberChanging(value);
					this.SendPropertyChanging();
					this._ApplicantNumber = value;
					this.SendPropertyChanged("ApplicantNumber");
					this.OnApplicantNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Photo", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Photo
		{
			get
			{
				return this._Photo;
			}
			set
			{
				if ((this._Photo != value))
				{
					this.OnPhotoChanging(value);
					this.SendPropertyChanging();
					this._Photo = value;
					this.SendPropertyChanged("Photo");
					this.OnPhotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AreaId", DbType="Int NOT NULL")]
		public int AreaId
		{
			get
			{
				return this._AreaId;
			}
			set
			{
				if ((this._AreaId != value))
				{
					if (this._mstArea.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAreaIdChanging(value);
					this.SendPropertyChanging();
					this._AreaId = value;
					this.SendPropertyChanged("AreaId");
					this.OnAreaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicantLastName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ApplicantLastName
		{
			get
			{
				return this._ApplicantLastName;
			}
			set
			{
				if ((this._ApplicantLastName != value))
				{
					this.OnApplicantLastNameChanging(value);
					this.SendPropertyChanging();
					this._ApplicantLastName = value;
					this.SendPropertyChanged("ApplicantLastName");
					this.OnApplicantLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicantFirstName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ApplicantFirstName
		{
			get
			{
				return this._ApplicantFirstName;
			}
			set
			{
				if ((this._ApplicantFirstName != value))
				{
					this.OnApplicantFirstNameChanging(value);
					this.SendPropertyChanging();
					this._ApplicantFirstName = value;
					this.SendPropertyChanged("ApplicantFirstName");
					this.OnApplicantFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicantMiddleName", DbType="NVarChar(255)")]
		public string ApplicantMiddleName
		{
			get
			{
				return this._ApplicantMiddleName;
			}
			set
			{
				if ((this._ApplicantMiddleName != value))
				{
					this.OnApplicantMiddleNameChanging(value);
					this.SendPropertyChanging();
					this._ApplicantMiddleName = value;
					this.SendPropertyChanged("ApplicantMiddleName");
					this.OnApplicantMiddleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDate", DbType="DateTime NOT NULL")]
		public System.DateTime BirthDate
		{
			get
			{
				return this._BirthDate;
			}
			set
			{
				if ((this._BirthDate != value))
				{
					this.OnBirthDateChanging(value);
					this.SendPropertyChanging();
					this._BirthDate = value;
					this.SendPropertyChanged("BirthDate");
					this.OnBirthDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CivilStatusId", DbType="Int NOT NULL")]
		public int CivilStatusId
		{
			get
			{
				return this._CivilStatusId;
			}
			set
			{
				if ((this._CivilStatusId != value))
				{
					if (this._mstCivilStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCivilStatusIdChanging(value);
					this.SendPropertyChanging();
					this._CivilStatusId = value;
					this.SendPropertyChanged("CivilStatusId");
					this.OnCivilStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityAddress", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string CityAddress
		{
			get
			{
				return this._CityAddress;
			}
			set
			{
				if ((this._CityAddress != value))
				{
					this.OnCityAddressChanging(value);
					this.SendPropertyChanging();
					this._CityAddress = value;
					this.SendPropertyChanged("CityAddress");
					this.OnCityAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProvinceAddress", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ProvinceAddress
		{
			get
			{
				return this._ProvinceAddress;
			}
			set
			{
				if ((this._ProvinceAddress != value))
				{
					this.OnProvinceAddressChanging(value);
					this.SendPropertyChanging();
					this._ProvinceAddress = value;
					this.SendPropertyChanged("ProvinceAddress");
					this.OnProvinceAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ContactNumber
		{
			get
			{
				return this._ContactNumber;
			}
			set
			{
				if ((this._ContactNumber != value))
				{
					this.OnContactNumberChanging(value);
					this.SendPropertyChanging();
					this._ContactNumber = value;
					this.SendPropertyChanged("ContactNumber");
					this.OnContactNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResidenceTypeId", DbType="Int NOT NULL")]
		public int ResidenceTypeId
		{
			get
			{
				return this._ResidenceTypeId;
			}
			set
			{
				if ((this._ResidenceTypeId != value))
				{
					if (this._mstResidenceType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnResidenceTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ResidenceTypeId = value;
					this.SendPropertyChanged("ResidenceTypeId");
					this.OnResidenceTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResidenceMonthlyRentAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal ResidenceMonthlyRentAmount
		{
			get
			{
				return this._ResidenceMonthlyRentAmount;
			}
			set
			{
				if ((this._ResidenceMonthlyRentAmount != value))
				{
					this.OnResidenceMonthlyRentAmountChanging(value);
					this.SendPropertyChanging();
					this._ResidenceMonthlyRentAmount = value;
					this.SendPropertyChanged("ResidenceMonthlyRentAmount");
					this.OnResidenceMonthlyRentAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LandResidenceTypeId", DbType="Int NOT NULL")]
		public int LandResidenceTypeId
		{
			get
			{
				return this._LandResidenceTypeId;
			}
			set
			{
				if ((this._LandResidenceTypeId != value))
				{
					if (this._mstResidenceType1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLandResidenceTypeIdChanging(value);
					this.SendPropertyChanging();
					this._LandResidenceTypeId = value;
					this.SendPropertyChanged("LandResidenceTypeId");
					this.OnLandResidenceTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LandResidenceMonthlyRentAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal LandResidenceMonthlyRentAmount
		{
			get
			{
				return this._LandResidenceMonthlyRentAmount;
			}
			set
			{
				if ((this._LandResidenceMonthlyRentAmount != value))
				{
					this.OnLandResidenceMonthlyRentAmountChanging(value);
					this.SendPropertyChanging();
					this._LandResidenceMonthlyRentAmount = value;
					this.SendPropertyChanged("LandResidenceMonthlyRentAmount");
					this.OnLandResidenceMonthlyRentAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LengthOfStay", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string LengthOfStay
		{
			get
			{
				return this._LengthOfStay;
			}
			set
			{
				if ((this._LengthOfStay != value))
				{
					this.OnLengthOfStayChanging(value);
					this.SendPropertyChanging();
					this._LengthOfStay = value;
					this.SendPropertyChanged("LengthOfStay");
					this.OnLengthOfStayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessAddress", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string BusinessAddress
		{
			get
			{
				return this._BusinessAddress;
			}
			set
			{
				if ((this._BusinessAddress != value))
				{
					this.OnBusinessAddressChanging(value);
					this.SendPropertyChanging();
					this._BusinessAddress = value;
					this.SendPropertyChanged("BusinessAddress");
					this.OnBusinessAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessKaratulaName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string BusinessKaratulaName
		{
			get
			{
				return this._BusinessKaratulaName;
			}
			set
			{
				if ((this._BusinessKaratulaName != value))
				{
					this.OnBusinessKaratulaNameChanging(value);
					this.SendPropertyChanging();
					this._BusinessKaratulaName = value;
					this.SendPropertyChanged("BusinessKaratulaName");
					this.OnBusinessKaratulaNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessTelephoneNumber", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string BusinessTelephoneNumber
		{
			get
			{
				return this._BusinessTelephoneNumber;
			}
			set
			{
				if ((this._BusinessTelephoneNumber != value))
				{
					this.OnBusinessTelephoneNumberChanging(value);
					this.SendPropertyChanging();
					this._BusinessTelephoneNumber = value;
					this.SendPropertyChanged("BusinessTelephoneNumber");
					this.OnBusinessTelephoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessYear", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string BusinessYear
		{
			get
			{
				return this._BusinessYear;
			}
			set
			{
				if ((this._BusinessYear != value))
				{
					this.OnBusinessYearChanging(value);
					this.SendPropertyChanging();
					this._BusinessYear = value;
					this.SendPropertyChanged("BusinessYear");
					this.OnBusinessYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessMerchandise", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string BusinessMerchandise
		{
			get
			{
				return this._BusinessMerchandise;
			}
			set
			{
				if ((this._BusinessMerchandise != value))
				{
					this.OnBusinessMerchandiseChanging(value);
					this.SendPropertyChanging();
					this._BusinessMerchandise = value;
					this.SendPropertyChanged("BusinessMerchandise");
					this.OnBusinessMerchandiseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessStockValues", DbType="Decimal(18,5) NOT NULL")]
		public decimal BusinessStockValues
		{
			get
			{
				return this._BusinessStockValues;
			}
			set
			{
				if ((this._BusinessStockValues != value))
				{
					this.OnBusinessStockValuesChanging(value);
					this.SendPropertyChanging();
					this._BusinessStockValues = value;
					this.SendPropertyChanged("BusinessStockValues");
					this.OnBusinessStockValuesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessBeginningCapital", DbType="Decimal(18,5) NOT NULL")]
		public decimal BusinessBeginningCapital
		{
			get
			{
				return this._BusinessBeginningCapital;
			}
			set
			{
				if ((this._BusinessBeginningCapital != value))
				{
					this.OnBusinessBeginningCapitalChanging(value);
					this.SendPropertyChanging();
					this._BusinessBeginningCapital = value;
					this.SendPropertyChanged("BusinessBeginningCapital");
					this.OnBusinessBeginningCapitalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessLowSalesPeriod", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string BusinessLowSalesPeriod
		{
			get
			{
				return this._BusinessLowSalesPeriod;
			}
			set
			{
				if ((this._BusinessLowSalesPeriod != value))
				{
					this.OnBusinessLowSalesPeriodChanging(value);
					this.SendPropertyChanging();
					this._BusinessLowSalesPeriod = value;
					this.SendPropertyChanged("BusinessLowSalesPeriod");
					this.OnBusinessLowSalesPeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessLowestDailySales", DbType="Decimal(18,5) NOT NULL")]
		public decimal BusinessLowestDailySales
		{
			get
			{
				return this._BusinessLowestDailySales;
			}
			set
			{
				if ((this._BusinessLowestDailySales != value))
				{
					this.OnBusinessLowestDailySalesChanging(value);
					this.SendPropertyChanging();
					this._BusinessLowestDailySales = value;
					this.SendPropertyChanged("BusinessLowestDailySales");
					this.OnBusinessLowestDailySalesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessAverageDailySales", DbType="Decimal(18,5) NOT NULL")]
		public decimal BusinessAverageDailySales
		{
			get
			{
				return this._BusinessAverageDailySales;
			}
			set
			{
				if ((this._BusinessAverageDailySales != value))
				{
					this.OnBusinessAverageDailySalesChanging(value);
					this.SendPropertyChanging();
					this._BusinessAverageDailySales = value;
					this.SendPropertyChanged("BusinessAverageDailySales");
					this.OnBusinessAverageDailySalesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployedCompany", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string EmployedCompany
		{
			get
			{
				return this._EmployedCompany;
			}
			set
			{
				if ((this._EmployedCompany != value))
				{
					this.OnEmployedCompanyChanging(value);
					this.SendPropertyChanging();
					this._EmployedCompany = value;
					this.SendPropertyChanged("EmployedCompany");
					this.OnEmployedCompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployedCompanyAddress", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string EmployedCompanyAddress
		{
			get
			{
				return this._EmployedCompanyAddress;
			}
			set
			{
				if ((this._EmployedCompanyAddress != value))
				{
					this.OnEmployedCompanyAddressChanging(value);
					this.SendPropertyChanging();
					this._EmployedCompanyAddress = value;
					this.SendPropertyChanged("EmployedCompanyAddress");
					this.OnEmployedCompanyAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployedPositionOccupied", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string EmployedPositionOccupied
		{
			get
			{
				return this._EmployedPositionOccupied;
			}
			set
			{
				if ((this._EmployedPositionOccupied != value))
				{
					this.OnEmployedPositionOccupiedChanging(value);
					this.SendPropertyChanging();
					this._EmployedPositionOccupied = value;
					this.SendPropertyChanged("EmployedPositionOccupied");
					this.OnEmployedPositionOccupiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployedServiceLength", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string EmployedServiceLength
		{
			get
			{
				return this._EmployedServiceLength;
			}
			set
			{
				if ((this._EmployedServiceLength != value))
				{
					this.OnEmployedServiceLengthChanging(value);
					this.SendPropertyChanging();
					this._EmployedServiceLength = value;
					this.SendPropertyChanged("EmployedServiceLength");
					this.OnEmployedServiceLengthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployedTelephoneNumber", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string EmployedTelephoneNumber
		{
			get
			{
				return this._EmployedTelephoneNumber;
			}
			set
			{
				if ((this._EmployedTelephoneNumber != value))
				{
					this.OnEmployedTelephoneNumberChanging(value);
					this.SendPropertyChanging();
					this._EmployedTelephoneNumber = value;
					this.SendPropertyChanged("EmployedTelephoneNumber");
					this.OnEmployedTelephoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpouseFullName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string SpouseFullName
		{
			get
			{
				return this._SpouseFullName;
			}
			set
			{
				if ((this._SpouseFullName != value))
				{
					this.OnSpouseFullNameChanging(value);
					this.SendPropertyChanging();
					this._SpouseFullName = value;
					this.SendPropertyChanged("SpouseFullName");
					this.OnSpouseFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpouseEmployerBusiness", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string SpouseEmployerBusiness
		{
			get
			{
				return this._SpouseEmployerBusiness;
			}
			set
			{
				if ((this._SpouseEmployerBusiness != value))
				{
					this.OnSpouseEmployerBusinessChanging(value);
					this.SendPropertyChanging();
					this._SpouseEmployerBusiness = value;
					this.SendPropertyChanged("SpouseEmployerBusiness");
					this.OnSpouseEmployerBusinessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpouseEmployerBusinessAddress", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string SpouseEmployerBusinessAddress
		{
			get
			{
				return this._SpouseEmployerBusinessAddress;
			}
			set
			{
				if ((this._SpouseEmployerBusinessAddress != value))
				{
					this.OnSpouseEmployerBusinessAddressChanging(value);
					this.SendPropertyChanging();
					this._SpouseEmployerBusinessAddress = value;
					this.SendPropertyChanged("SpouseEmployerBusinessAddress");
					this.OnSpouseEmployerBusinessAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpouseBusinessTelephoneNumber", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string SpouseBusinessTelephoneNumber
		{
			get
			{
				return this._SpouseBusinessTelephoneNumber;
			}
			set
			{
				if ((this._SpouseBusinessTelephoneNumber != value))
				{
					this.OnSpouseBusinessTelephoneNumberChanging(value);
					this.SendPropertyChanging();
					this._SpouseBusinessTelephoneNumber = value;
					this.SendPropertyChanged("SpouseBusinessTelephoneNumber");
					this.OnSpouseBusinessTelephoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpousePositionOccupied", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string SpousePositionOccupied
		{
			get
			{
				return this._SpousePositionOccupied;
			}
			set
			{
				if ((this._SpousePositionOccupied != value))
				{
					this.OnSpousePositionOccupiedChanging(value);
					this.SendPropertyChanging();
					this._SpousePositionOccupied = value;
					this.SendPropertyChanged("SpousePositionOccupied");
					this.OnSpousePositionOccupiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpouseMonthlySalary", DbType="Decimal(18,5) NOT NULL")]
		public decimal SpouseMonthlySalary
		{
			get
			{
				return this._SpouseMonthlySalary;
			}
			set
			{
				if ((this._SpouseMonthlySalary != value))
				{
					this.OnSpouseMonthlySalaryChanging(value);
					this.SendPropertyChanging();
					this._SpouseMonthlySalary = value;
					this.SendPropertyChanged("SpouseMonthlySalary");
					this.OnSpouseMonthlySalaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpouseLengthOfService", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string SpouseLengthOfService
		{
			get
			{
				return this._SpouseLengthOfService;
			}
			set
			{
				if ((this._SpouseLengthOfService != value))
				{
					this.OnSpouseLengthOfServiceChanging(value);
					this.SendPropertyChanging();
					this._SpouseLengthOfService = value;
					this.SendPropertyChanged("SpouseLengthOfService");
					this.OnSpouseLengthOfServiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfChildren", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string NumberOfChildren
		{
			get
			{
				return this._NumberOfChildren;
			}
			set
			{
				if ((this._NumberOfChildren != value))
				{
					this.OnNumberOfChildrenChanging(value);
					this.SendPropertyChanging();
					this._NumberOfChildren = value;
					this.SendPropertyChanged("NumberOfChildren");
					this.OnNumberOfChildrenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Studying", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Studying
		{
			get
			{
				return this._Studying;
			}
			set
			{
				if ((this._Studying != value))
				{
					this.OnStudyingChanging(value);
					this.SendPropertyChanging();
					this._Studying = value;
					this.SendPropertyChanged("Studying");
					this.OnStudyingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Schools", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Schools
		{
			get
			{
				return this._Schools;
			}
			set
			{
				if ((this._Schools != value))
				{
					this.OnSchoolsChanging(value);
					this.SendPropertyChanging();
					this._Schools = value;
					this.SendPropertyChanged("Schools");
					this.OnSchoolsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserId", DbType="Int NOT NULL")]
		public int CreatedByUserId
		{
			get
			{
				return this._CreatedByUserId;
			}
			set
			{
				if ((this._CreatedByUserId != value))
				{
					if (this._mstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserId = value;
					this.SendPropertyChanged("CreatedByUserId");
					this.OnCreatedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedByUserId", DbType="Int NOT NULL")]
		public int UpdatedByUserId
		{
			get
			{
				return this._UpdatedByUserId;
			}
			set
			{
				if ((this._UpdatedByUserId != value))
				{
					if (this._mstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedByUserId = value;
					this.SendPropertyChanged("UpdatedByUserId");
					this.OnUpdatedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstApplicant_mstApplicantApplianceOwned", Storage="_mstApplicantApplianceOwneds", ThisKey="Id", OtherKey="ApplicantId")]
		public EntitySet<mstApplicantApplianceOwned> mstApplicantApplianceOwneds
		{
			get
			{
				return this._mstApplicantApplianceOwneds;
			}
			set
			{
				this._mstApplicantApplianceOwneds.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstApplicant_mstApplicantRealPropertiesOwned", Storage="_mstApplicantRealPropertiesOwneds", ThisKey="Id", OtherKey="ApplicantId")]
		public EntitySet<mstApplicantRealPropertiesOwned> mstApplicantRealPropertiesOwneds
		{
			get
			{
				return this._mstApplicantRealPropertiesOwneds;
			}
			set
			{
				this._mstApplicantRealPropertiesOwneds.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstApplicant_mstCoMakerStatement", Storage="_mstCoMakerStatements", ThisKey="Id", OtherKey="ApplicantId")]
		public EntitySet<mstCoMakerStatement> mstCoMakerStatements
		{
			get
			{
				return this._mstCoMakerStatements;
			}
			set
			{
				this._mstCoMakerStatements.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstApplicant_trnLoanApplication", Storage="_trnLoanApplications", ThisKey="Id", OtherKey="ApplicantId")]
		public EntitySet<trnLoanApplication> trnLoanApplications
		{
			get
			{
				return this._trnLoanApplications;
			}
			set
			{
				this._trnLoanApplications.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstArea_mstApplicant", Storage="_mstArea", ThisKey="AreaId", OtherKey="Id", IsForeignKey=true)]
		public mstArea mstArea
		{
			get
			{
				return this._mstArea.Entity;
			}
			set
			{
				mstArea previousValue = this._mstArea.Entity;
				if (((previousValue != value) 
							|| (this._mstArea.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstArea.Entity = null;
						previousValue.mstApplicants.Remove(this);
					}
					this._mstArea.Entity = value;
					if ((value != null))
					{
						value.mstApplicants.Add(this);
						this._AreaId = value.Id;
					}
					else
					{
						this._AreaId = default(int);
					}
					this.SendPropertyChanged("mstArea");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstCivilStatus_mstApplicant", Storage="_mstCivilStatus", ThisKey="CivilStatusId", OtherKey="Id", IsForeignKey=true)]
		public mstCivilStatus mstCivilStatus
		{
			get
			{
				return this._mstCivilStatus.Entity;
			}
			set
			{
				mstCivilStatus previousValue = this._mstCivilStatus.Entity;
				if (((previousValue != value) 
							|| (this._mstCivilStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstCivilStatus.Entity = null;
						previousValue.mstApplicants.Remove(this);
					}
					this._mstCivilStatus.Entity = value;
					if ((value != null))
					{
						value.mstApplicants.Add(this);
						this._CivilStatusId = value.Id;
					}
					else
					{
						this._CivilStatusId = default(int);
					}
					this.SendPropertyChanged("mstCivilStatus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstResidenceType_mstApplicant", Storage="_mstResidenceType", ThisKey="ResidenceTypeId", OtherKey="Id", IsForeignKey=true)]
		public mstResidenceType mstResidenceType
		{
			get
			{
				return this._mstResidenceType.Entity;
			}
			set
			{
				mstResidenceType previousValue = this._mstResidenceType.Entity;
				if (((previousValue != value) 
							|| (this._mstResidenceType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstResidenceType.Entity = null;
						previousValue.mstApplicants.Remove(this);
					}
					this._mstResidenceType.Entity = value;
					if ((value != null))
					{
						value.mstApplicants.Add(this);
						this._ResidenceTypeId = value.Id;
					}
					else
					{
						this._ResidenceTypeId = default(int);
					}
					this.SendPropertyChanged("mstResidenceType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstResidenceType_mstApplicant1", Storage="_mstResidenceType1", ThisKey="LandResidenceTypeId", OtherKey="Id", IsForeignKey=true)]
		public mstResidenceType mstResidenceType1
		{
			get
			{
				return this._mstResidenceType1.Entity;
			}
			set
			{
				mstResidenceType previousValue = this._mstResidenceType1.Entity;
				if (((previousValue != value) 
							|| (this._mstResidenceType1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstResidenceType1.Entity = null;
						previousValue.mstApplicants1.Remove(this);
					}
					this._mstResidenceType1.Entity = value;
					if ((value != null))
					{
						value.mstApplicants1.Add(this);
						this._LandResidenceTypeId = value.Id;
					}
					else
					{
						this._LandResidenceTypeId = default(int);
					}
					this.SendPropertyChanged("mstResidenceType1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUser_mstApplicant", Storage="_mstUser", ThisKey="CreatedByUserId", OtherKey="Id", IsForeignKey=true)]
		public mstUser mstUser
		{
			get
			{
				return this._mstUser.Entity;
			}
			set
			{
				mstUser previousValue = this._mstUser.Entity;
				if (((previousValue != value) 
							|| (this._mstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstUser.Entity = null;
						previousValue.mstApplicants.Remove(this);
					}
					this._mstUser.Entity = value;
					if ((value != null))
					{
						value.mstApplicants.Add(this);
						this._CreatedByUserId = value.Id;
					}
					else
					{
						this._CreatedByUserId = default(int);
					}
					this.SendPropertyChanged("mstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUser_mstApplicant1", Storage="_mstUser1", ThisKey="UpdatedByUserId", OtherKey="Id", IsForeignKey=true)]
		public mstUser mstUser1
		{
			get
			{
				return this._mstUser1.Entity;
			}
			set
			{
				mstUser previousValue = this._mstUser1.Entity;
				if (((previousValue != value) 
							|| (this._mstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstUser1.Entity = null;
						previousValue.mstApplicants1.Remove(this);
					}
					this._mstUser1.Entity = value;
					if ((value != null))
					{
						value.mstApplicants1.Add(this);
						this._UpdatedByUserId = value.Id;
					}
					else
					{
						this._UpdatedByUserId = default(int);
					}
					this.SendPropertyChanged("mstUser1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_mstApplicantApplianceOwneds(mstApplicantApplianceOwned entity)
		{
			this.SendPropertyChanging();
			entity.mstApplicant = this;
		}
		
		private void detach_mstApplicantApplianceOwneds(mstApplicantApplianceOwned entity)
		{
			this.SendPropertyChanging();
			entity.mstApplicant = null;
		}
		
		private void attach_mstApplicantRealPropertiesOwneds(mstApplicantRealPropertiesOwned entity)
		{
			this.SendPropertyChanging();
			entity.mstApplicant = this;
		}
		
		private void detach_mstApplicantRealPropertiesOwneds(mstApplicantRealPropertiesOwned entity)
		{
			this.SendPropertyChanging();
			entity.mstApplicant = null;
		}
		
		private void attach_mstCoMakerStatements(mstCoMakerStatement entity)
		{
			this.SendPropertyChanging();
			entity.mstApplicant = this;
		}
		
		private void detach_mstCoMakerStatements(mstCoMakerStatement entity)
		{
			this.SendPropertyChanging();
			entity.mstApplicant = null;
		}
		
		private void attach_trnLoanApplications(trnLoanApplication entity)
		{
			this.SendPropertyChanging();
			entity.mstApplicant = this;
		}
		
		private void detach_trnLoanApplications(trnLoanApplication entity)
		{
			this.SendPropertyChanging();
			entity.mstApplicant = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mstApplicantApplianceOwned")]
	public partial class mstApplicantApplianceOwned : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ApplicantId;
		
		private string _ApplianceBrand;
		
		private string _PresentValue;
		
		private EntityRef<mstApplicant> _mstApplicant;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnApplicantIdChanging(int value);
    partial void OnApplicantIdChanged();
    partial void OnApplianceBrandChanging(string value);
    partial void OnApplianceBrandChanged();
    partial void OnPresentValueChanging(string value);
    partial void OnPresentValueChanged();
    #endregion
		
		public mstApplicantApplianceOwned()
		{
			this._mstApplicant = default(EntityRef<mstApplicant>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicantId", DbType="Int NOT NULL")]
		public int ApplicantId
		{
			get
			{
				return this._ApplicantId;
			}
			set
			{
				if ((this._ApplicantId != value))
				{
					if (this._mstApplicant.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicantIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicantId = value;
					this.SendPropertyChanged("ApplicantId");
					this.OnApplicantIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplianceBrand", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string ApplianceBrand
		{
			get
			{
				return this._ApplianceBrand;
			}
			set
			{
				if ((this._ApplianceBrand != value))
				{
					this.OnApplianceBrandChanging(value);
					this.SendPropertyChanging();
					this._ApplianceBrand = value;
					this.SendPropertyChanged("ApplianceBrand");
					this.OnApplianceBrandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PresentValue", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string PresentValue
		{
			get
			{
				return this._PresentValue;
			}
			set
			{
				if ((this._PresentValue != value))
				{
					this.OnPresentValueChanging(value);
					this.SendPropertyChanging();
					this._PresentValue = value;
					this.SendPropertyChanged("PresentValue");
					this.OnPresentValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstApplicant_mstApplicantApplianceOwned", Storage="_mstApplicant", ThisKey="ApplicantId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public mstApplicant mstApplicant
		{
			get
			{
				return this._mstApplicant.Entity;
			}
			set
			{
				mstApplicant previousValue = this._mstApplicant.Entity;
				if (((previousValue != value) 
							|| (this._mstApplicant.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstApplicant.Entity = null;
						previousValue.mstApplicantApplianceOwneds.Remove(this);
					}
					this._mstApplicant.Entity = value;
					if ((value != null))
					{
						value.mstApplicantApplianceOwneds.Add(this);
						this._ApplicantId = value.Id;
					}
					else
					{
						this._ApplicantId = default(int);
					}
					this.SendPropertyChanged("mstApplicant");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mstApplicantRealPropertiesOwned")]
	public partial class mstApplicantRealPropertiesOwned : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ApplicantId;
		
		private string _Real;
		
		private string _Location;
		
		private string _PresentValue;
		
		private string _EcumberedTo;
		
		private EntityRef<mstApplicant> _mstApplicant;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnApplicantIdChanging(int value);
    partial void OnApplicantIdChanged();
    partial void OnRealChanging(string value);
    partial void OnRealChanged();
    partial void OnLocationChanging(string value);
    partial void OnLocationChanged();
    partial void OnPresentValueChanging(string value);
    partial void OnPresentValueChanged();
    partial void OnEcumberedToChanging(string value);
    partial void OnEcumberedToChanged();
    #endregion
		
		public mstApplicantRealPropertiesOwned()
		{
			this._mstApplicant = default(EntityRef<mstApplicant>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicantId", DbType="Int NOT NULL")]
		public int ApplicantId
		{
			get
			{
				return this._ApplicantId;
			}
			set
			{
				if ((this._ApplicantId != value))
				{
					if (this._mstApplicant.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicantIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicantId = value;
					this.SendPropertyChanged("ApplicantId");
					this.OnApplicantIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Real", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Real
		{
			get
			{
				return this._Real;
			}
			set
			{
				if ((this._Real != value))
				{
					this.OnRealChanging(value);
					this.SendPropertyChanging();
					this._Real = value;
					this.SendPropertyChanged("Real");
					this.OnRealChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this.OnLocationChanging(value);
					this.SendPropertyChanging();
					this._Location = value;
					this.SendPropertyChanged("Location");
					this.OnLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PresentValue", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string PresentValue
		{
			get
			{
				return this._PresentValue;
			}
			set
			{
				if ((this._PresentValue != value))
				{
					this.OnPresentValueChanging(value);
					this.SendPropertyChanging();
					this._PresentValue = value;
					this.SendPropertyChanged("PresentValue");
					this.OnPresentValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EcumberedTo", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string EcumberedTo
		{
			get
			{
				return this._EcumberedTo;
			}
			set
			{
				if ((this._EcumberedTo != value))
				{
					this.OnEcumberedToChanging(value);
					this.SendPropertyChanging();
					this._EcumberedTo = value;
					this.SendPropertyChanged("EcumberedTo");
					this.OnEcumberedToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstApplicant_mstApplicantRealPropertiesOwned", Storage="_mstApplicant", ThisKey="ApplicantId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public mstApplicant mstApplicant
		{
			get
			{
				return this._mstApplicant.Entity;
			}
			set
			{
				mstApplicant previousValue = this._mstApplicant.Entity;
				if (((previousValue != value) 
							|| (this._mstApplicant.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstApplicant.Entity = null;
						previousValue.mstApplicantRealPropertiesOwneds.Remove(this);
					}
					this._mstApplicant.Entity = value;
					if ((value != null))
					{
						value.mstApplicantRealPropertiesOwneds.Add(this);
						this._ApplicantId = value.Id;
					}
					else
					{
						this._ApplicantId = default(int);
					}
					this.SendPropertyChanged("mstApplicant");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mstArea")]
	public partial class mstArea : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Area;
		
		private string _Description;
		
		private int _CreatedByUserId;
		
		private System.DateTime _CreatedDateTime;
		
		private int _UpdatedByUserId;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntitySet<mstApplicant> _mstApplicants;
		
		private EntityRef<mstUser> _mstUser;
		
		private EntityRef<mstUser> _mstUser1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAreaChanging(string value);
    partial void OnAreaChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreatedByUserIdChanging(int value);
    partial void OnCreatedByUserIdChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByUserIdChanging(int value);
    partial void OnUpdatedByUserIdChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public mstArea()
		{
			this._mstApplicants = new EntitySet<mstApplicant>(new Action<mstApplicant>(this.attach_mstApplicants), new Action<mstApplicant>(this.detach_mstApplicants));
			this._mstUser = default(EntityRef<mstUser>);
			this._mstUser1 = default(EntityRef<mstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Area", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Area
		{
			get
			{
				return this._Area;
			}
			set
			{
				if ((this._Area != value))
				{
					this.OnAreaChanging(value);
					this.SendPropertyChanging();
					this._Area = value;
					this.SendPropertyChanged("Area");
					this.OnAreaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserId", DbType="Int NOT NULL")]
		public int CreatedByUserId
		{
			get
			{
				return this._CreatedByUserId;
			}
			set
			{
				if ((this._CreatedByUserId != value))
				{
					if (this._mstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserId = value;
					this.SendPropertyChanged("CreatedByUserId");
					this.OnCreatedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedByUserId", DbType="Int NOT NULL")]
		public int UpdatedByUserId
		{
			get
			{
				return this._UpdatedByUserId;
			}
			set
			{
				if ((this._UpdatedByUserId != value))
				{
					if (this._mstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedByUserId = value;
					this.SendPropertyChanged("UpdatedByUserId");
					this.OnUpdatedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstArea_mstApplicant", Storage="_mstApplicants", ThisKey="Id", OtherKey="AreaId")]
		public EntitySet<mstApplicant> mstApplicants
		{
			get
			{
				return this._mstApplicants;
			}
			set
			{
				this._mstApplicants.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUser_mstArea", Storage="_mstUser", ThisKey="CreatedByUserId", OtherKey="Id", IsForeignKey=true)]
		public mstUser mstUser
		{
			get
			{
				return this._mstUser.Entity;
			}
			set
			{
				mstUser previousValue = this._mstUser.Entity;
				if (((previousValue != value) 
							|| (this._mstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstUser.Entity = null;
						previousValue.mstAreas.Remove(this);
					}
					this._mstUser.Entity = value;
					if ((value != null))
					{
						value.mstAreas.Add(this);
						this._CreatedByUserId = value.Id;
					}
					else
					{
						this._CreatedByUserId = default(int);
					}
					this.SendPropertyChanged("mstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUser_mstArea1", Storage="_mstUser1", ThisKey="UpdatedByUserId", OtherKey="Id", IsForeignKey=true)]
		public mstUser mstUser1
		{
			get
			{
				return this._mstUser1.Entity;
			}
			set
			{
				mstUser previousValue = this._mstUser1.Entity;
				if (((previousValue != value) 
							|| (this._mstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstUser1.Entity = null;
						previousValue.mstAreas1.Remove(this);
					}
					this._mstUser1.Entity = value;
					if ((value != null))
					{
						value.mstAreas1.Add(this);
						this._UpdatedByUserId = value.Id;
					}
					else
					{
						this._UpdatedByUserId = default(int);
					}
					this.SendPropertyChanged("mstUser1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_mstApplicants(mstApplicant entity)
		{
			this.SendPropertyChanging();
			entity.mstArea = this;
		}
		
		private void detach_mstApplicants(mstApplicant entity)
		{
			this.SendPropertyChanging();
			entity.mstArea = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mstBranch")]
	public partial class mstBranch : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _CompanyId;
		
		private string _Branch;
		
		private string _Address;
		
		private string _ContactNumber;
		
		private EntityRef<mstCompany> _mstCompany;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    partial void OnBranchChanging(string value);
    partial void OnBranchChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnContactNumberChanging(string value);
    partial void OnContactNumberChanged();
    #endregion
		
		public mstBranch()
		{
			this._mstCompany = default(EntityRef<mstCompany>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", DbType="Int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._CompanyId;
			}
			set
			{
				if ((this._CompanyId != value))
				{
					if (this._mstCompany.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._CompanyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Branch", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Branch
		{
			get
			{
				return this._Branch;
			}
			set
			{
				if ((this._Branch != value))
				{
					this.OnBranchChanging(value);
					this.SendPropertyChanging();
					this._Branch = value;
					this.SendPropertyChanged("Branch");
					this.OnBranchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ContactNumber
		{
			get
			{
				return this._ContactNumber;
			}
			set
			{
				if ((this._ContactNumber != value))
				{
					this.OnContactNumberChanging(value);
					this.SendPropertyChanging();
					this._ContactNumber = value;
					this.SendPropertyChanged("ContactNumber");
					this.OnContactNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstCompany_mstBranch", Storage="_mstCompany", ThisKey="CompanyId", OtherKey="Id", IsForeignKey=true)]
		public mstCompany mstCompany
		{
			get
			{
				return this._mstCompany.Entity;
			}
			set
			{
				mstCompany previousValue = this._mstCompany.Entity;
				if (((previousValue != value) 
							|| (this._mstCompany.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstCompany.Entity = null;
						previousValue.mstBranches.Remove(this);
					}
					this._mstCompany.Entity = value;
					if ((value != null))
					{
						value.mstBranches.Add(this);
						this._CompanyId = value.Id;
					}
					else
					{
						this._CompanyId = default(int);
					}
					this.SendPropertyChanged("mstCompany");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mstCivilStatus")]
	public partial class mstCivilStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _CivilStatus;
		
		private EntitySet<mstApplicant> _mstApplicants;
		
		private EntityRef<mstCivilStatus> _mstCivilStatus2;
		
		private EntitySet<mstCoMakerStatement> _mstCoMakerStatements;
		
		private EntityRef<mstCivilStatus> _mstCivilStatus1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCivilStatusChanging(string value);
    partial void OnCivilStatusChanged();
    #endregion
		
		public mstCivilStatus()
		{
			this._mstApplicants = new EntitySet<mstApplicant>(new Action<mstApplicant>(this.attach_mstApplicants), new Action<mstApplicant>(this.detach_mstApplicants));
			this._mstCivilStatus2 = default(EntityRef<mstCivilStatus>);
			this._mstCoMakerStatements = new EntitySet<mstCoMakerStatement>(new Action<mstCoMakerStatement>(this.attach_mstCoMakerStatements), new Action<mstCoMakerStatement>(this.detach_mstCoMakerStatements));
			this._mstCivilStatus1 = default(EntityRef<mstCivilStatus>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					if (this._mstCivilStatus1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CivilStatus", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CivilStatus
		{
			get
			{
				return this._CivilStatus;
			}
			set
			{
				if ((this._CivilStatus != value))
				{
					this.OnCivilStatusChanging(value);
					this.SendPropertyChanging();
					this._CivilStatus = value;
					this.SendPropertyChanged("CivilStatus");
					this.OnCivilStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstCivilStatus_mstApplicant", Storage="_mstApplicants", ThisKey="Id", OtherKey="CivilStatusId")]
		public EntitySet<mstApplicant> mstApplicants
		{
			get
			{
				return this._mstApplicants;
			}
			set
			{
				this._mstApplicants.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstCivilStatus_mstCivilStatus", Storage="_mstCivilStatus2", ThisKey="Id", OtherKey="Id", IsUnique=true, IsForeignKey=false)]
		public mstCivilStatus mstCivilStatus2
		{
			get
			{
				return this._mstCivilStatus2.Entity;
			}
			set
			{
				mstCivilStatus previousValue = this._mstCivilStatus2.Entity;
				if (((previousValue != value) 
							|| (this._mstCivilStatus2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstCivilStatus2.Entity = null;
						previousValue.mstCivilStatus1 = null;
					}
					this._mstCivilStatus2.Entity = value;
					if ((value != null))
					{
						value.mstCivilStatus1 = this;
					}
					this.SendPropertyChanged("mstCivilStatus2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstCivilStatus_mstCoMakerStatement", Storage="_mstCoMakerStatements", ThisKey="Id", OtherKey="CivilStatusId")]
		public EntitySet<mstCoMakerStatement> mstCoMakerStatements
		{
			get
			{
				return this._mstCoMakerStatements;
			}
			set
			{
				this._mstCoMakerStatements.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstCivilStatus_mstCivilStatus", Storage="_mstCivilStatus1", ThisKey="Id", OtherKey="Id", IsForeignKey=true)]
		public mstCivilStatus mstCivilStatus1
		{
			get
			{
				return this._mstCivilStatus1.Entity;
			}
			set
			{
				mstCivilStatus previousValue = this._mstCivilStatus1.Entity;
				if (((previousValue != value) 
							|| (this._mstCivilStatus1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstCivilStatus1.Entity = null;
						previousValue.mstCivilStatus2 = null;
					}
					this._mstCivilStatus1.Entity = value;
					if ((value != null))
					{
						value.mstCivilStatus2 = this;
						this._Id = value.Id;
					}
					else
					{
						this._Id = default(int);
					}
					this.SendPropertyChanged("mstCivilStatus1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_mstApplicants(mstApplicant entity)
		{
			this.SendPropertyChanging();
			entity.mstCivilStatus = this;
		}
		
		private void detach_mstApplicants(mstApplicant entity)
		{
			this.SendPropertyChanging();
			entity.mstCivilStatus = null;
		}
		
		private void attach_mstCoMakerStatements(mstCoMakerStatement entity)
		{
			this.SendPropertyChanging();
			entity.mstCivilStatus = this;
		}
		
		private void detach_mstCoMakerStatements(mstCoMakerStatement entity)
		{
			this.SendPropertyChanging();
			entity.mstCivilStatus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mstCollector")]
	public partial class mstCollector : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Collector;
		
		private string _ContactNumber;
		
		private int _CreatedByUserId;
		
		private System.DateTime _CreatedDateTime;
		
		private int _UpdatedByUserId;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntitySet<trnCollectionLogHistory> _trnCollectionLogHistories;
		
		private EntityRef<mstUser> _mstUser;
		
		private EntityRef<mstUser> _mstUser1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCollectorChanging(string value);
    partial void OnCollectorChanged();
    partial void OnContactNumberChanging(string value);
    partial void OnContactNumberChanged();
    partial void OnCreatedByUserIdChanging(int value);
    partial void OnCreatedByUserIdChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByUserIdChanging(int value);
    partial void OnUpdatedByUserIdChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public mstCollector()
		{
			this._trnCollectionLogHistories = new EntitySet<trnCollectionLogHistory>(new Action<trnCollectionLogHistory>(this.attach_trnCollectionLogHistories), new Action<trnCollectionLogHistory>(this.detach_trnCollectionLogHistories));
			this._mstUser = default(EntityRef<mstUser>);
			this._mstUser1 = default(EntityRef<mstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Collector", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Collector
		{
			get
			{
				return this._Collector;
			}
			set
			{
				if ((this._Collector != value))
				{
					this.OnCollectorChanging(value);
					this.SendPropertyChanging();
					this._Collector = value;
					this.SendPropertyChanged("Collector");
					this.OnCollectorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ContactNumber
		{
			get
			{
				return this._ContactNumber;
			}
			set
			{
				if ((this._ContactNumber != value))
				{
					this.OnContactNumberChanging(value);
					this.SendPropertyChanging();
					this._ContactNumber = value;
					this.SendPropertyChanged("ContactNumber");
					this.OnContactNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserId", DbType="Int NOT NULL")]
		public int CreatedByUserId
		{
			get
			{
				return this._CreatedByUserId;
			}
			set
			{
				if ((this._CreatedByUserId != value))
				{
					if (this._mstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserId = value;
					this.SendPropertyChanged("CreatedByUserId");
					this.OnCreatedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedByUserId", DbType="Int NOT NULL")]
		public int UpdatedByUserId
		{
			get
			{
				return this._UpdatedByUserId;
			}
			set
			{
				if ((this._UpdatedByUserId != value))
				{
					if (this._mstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedByUserId = value;
					this.SendPropertyChanged("UpdatedByUserId");
					this.OnUpdatedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstCollector_trnCollectionLogHistory", Storage="_trnCollectionLogHistories", ThisKey="Id", OtherKey="CollectorId")]
		public EntitySet<trnCollectionLogHistory> trnCollectionLogHistories
		{
			get
			{
				return this._trnCollectionLogHistories;
			}
			set
			{
				this._trnCollectionLogHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUser_mstCollector", Storage="_mstUser", ThisKey="CreatedByUserId", OtherKey="Id", IsForeignKey=true)]
		public mstUser mstUser
		{
			get
			{
				return this._mstUser.Entity;
			}
			set
			{
				mstUser previousValue = this._mstUser.Entity;
				if (((previousValue != value) 
							|| (this._mstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstUser.Entity = null;
						previousValue.mstCollectors.Remove(this);
					}
					this._mstUser.Entity = value;
					if ((value != null))
					{
						value.mstCollectors.Add(this);
						this._CreatedByUserId = value.Id;
					}
					else
					{
						this._CreatedByUserId = default(int);
					}
					this.SendPropertyChanged("mstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUser_mstCollector1", Storage="_mstUser1", ThisKey="UpdatedByUserId", OtherKey="Id", IsForeignKey=true)]
		public mstUser mstUser1
		{
			get
			{
				return this._mstUser1.Entity;
			}
			set
			{
				mstUser previousValue = this._mstUser1.Entity;
				if (((previousValue != value) 
							|| (this._mstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstUser1.Entity = null;
						previousValue.mstCollectors1.Remove(this);
					}
					this._mstUser1.Entity = value;
					if ((value != null))
					{
						value.mstCollectors1.Add(this);
						this._UpdatedByUserId = value.Id;
					}
					else
					{
						this._UpdatedByUserId = default(int);
					}
					this.SendPropertyChanged("mstUser1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_trnCollectionLogHistories(trnCollectionLogHistory entity)
		{
			this.SendPropertyChanging();
			entity.mstCollector = this;
		}
		
		private void detach_trnCollectionLogHistories(trnCollectionLogHistory entity)
		{
			this.SendPropertyChanging();
			entity.mstCollector = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mstCoMakerStatement")]
	public partial class mstCoMakerStatement : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ApplicantId;
		
		private string _CoMakerLastName;
		
		private string _CoMakerFirstName;
		
		private string _CoMakerMiddleName;
		
		private System.DateTime _BirthDate;
		
		private int _CivilStatusId;
		
		private string _CityAddress;
		
		private string _ProvinceAddress;
		
		private string _ContactNumber;
		
		private int _ResidenceTypeId;
		
		private decimal _ResidenceMonthlyRentAmount;
		
		private int _LandResidenceTypeId;
		
		private decimal _LandResidenceMonthlyRentAmount;
		
		private string _LengthOfStay;
		
		private string _BusinessAddress;
		
		private string _BusinessKaratulaName;
		
		private string _BusinessTelephoneNumber;
		
		private string _BusinessYear;
		
		private string _BusinessMerchandise;
		
		private decimal _BusinessStockValues;
		
		private decimal _BusinessBeginningCapital;
		
		private string _BusinessLowSalesPeriod;
		
		private decimal _BusinessLowestDailySales;
		
		private decimal _BusinessAverageDailySales;
		
		private string _EmployedCompany;
		
		private string _EmployedCompanyAddress;
		
		private string _EmployedPositionOccupied;
		
		private string _EmployedServiceLength;
		
		private string _EmployedTelephoneNumber;
		
		private string _SpouseFullName;
		
		private string _SpouseEmployerBusiness;
		
		private string _SpouseEmployerBusinessAddress;
		
		private string _SpouseBusinessTelephoneNumber;
		
		private string _SpousePositionOccupied;
		
		private decimal _SpouseMonthlySalary;
		
		private string _SpouseLengthOfService;
		
		private string _NumberOfChildren;
		
		private string _Studying;
		
		private string _Schools;
		
		private EntitySet<mstCoMakerStatementApplianceOwned> _mstCoMakerStatementApplianceOwneds;
		
		private EntitySet<mstCoMakerStatementRealPropertiesOwned> _mstCoMakerStatementRealPropertiesOwneds;
		
		private EntityRef<mstApplicant> _mstApplicant;
		
		private EntityRef<mstCivilStatus> _mstCivilStatus;
		
		private EntityRef<mstResidenceType> _mstResidenceType;
		
		private EntityRef<mstResidenceType> _mstResidenceType1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnApplicantIdChanging(int value);
    partial void OnApplicantIdChanged();
    partial void OnCoMakerLastNameChanging(string value);
    partial void OnCoMakerLastNameChanged();
    partial void OnCoMakerFirstNameChanging(string value);
    partial void OnCoMakerFirstNameChanged();
    partial void OnCoMakerMiddleNameChanging(string value);
    partial void OnCoMakerMiddleNameChanged();
    partial void OnBirthDateChanging(System.DateTime value);
    partial void OnBirthDateChanged();
    partial void OnCivilStatusIdChanging(int value);
    partial void OnCivilStatusIdChanged();
    partial void OnCityAddressChanging(string value);
    partial void OnCityAddressChanged();
    partial void OnProvinceAddressChanging(string value);
    partial void OnProvinceAddressChanged();
    partial void OnContactNumberChanging(string value);
    partial void OnContactNumberChanged();
    partial void OnResidenceTypeIdChanging(int value);
    partial void OnResidenceTypeIdChanged();
    partial void OnResidenceMonthlyRentAmountChanging(decimal value);
    partial void OnResidenceMonthlyRentAmountChanged();
    partial void OnLandResidenceTypeIdChanging(int value);
    partial void OnLandResidenceTypeIdChanged();
    partial void OnLandResidenceMonthlyRentAmountChanging(decimal value);
    partial void OnLandResidenceMonthlyRentAmountChanged();
    partial void OnLengthOfStayChanging(string value);
    partial void OnLengthOfStayChanged();
    partial void OnBusinessAddressChanging(string value);
    partial void OnBusinessAddressChanged();
    partial void OnBusinessKaratulaNameChanging(string value);
    partial void OnBusinessKaratulaNameChanged();
    partial void OnBusinessTelephoneNumberChanging(string value);
    partial void OnBusinessTelephoneNumberChanged();
    partial void OnBusinessYearChanging(string value);
    partial void OnBusinessYearChanged();
    partial void OnBusinessMerchandiseChanging(string value);
    partial void OnBusinessMerchandiseChanged();
    partial void OnBusinessStockValuesChanging(decimal value);
    partial void OnBusinessStockValuesChanged();
    partial void OnBusinessBeginningCapitalChanging(decimal value);
    partial void OnBusinessBeginningCapitalChanged();
    partial void OnBusinessLowSalesPeriodChanging(string value);
    partial void OnBusinessLowSalesPeriodChanged();
    partial void OnBusinessLowestDailySalesChanging(decimal value);
    partial void OnBusinessLowestDailySalesChanged();
    partial void OnBusinessAverageDailySalesChanging(decimal value);
    partial void OnBusinessAverageDailySalesChanged();
    partial void OnEmployedCompanyChanging(string value);
    partial void OnEmployedCompanyChanged();
    partial void OnEmployedCompanyAddressChanging(string value);
    partial void OnEmployedCompanyAddressChanged();
    partial void OnEmployedPositionOccupiedChanging(string value);
    partial void OnEmployedPositionOccupiedChanged();
    partial void OnEmployedServiceLengthChanging(string value);
    partial void OnEmployedServiceLengthChanged();
    partial void OnEmployedTelephoneNumberChanging(string value);
    partial void OnEmployedTelephoneNumberChanged();
    partial void OnSpouseFullNameChanging(string value);
    partial void OnSpouseFullNameChanged();
    partial void OnSpouseEmployerBusinessChanging(string value);
    partial void OnSpouseEmployerBusinessChanged();
    partial void OnSpouseEmployerBusinessAddressChanging(string value);
    partial void OnSpouseEmployerBusinessAddressChanged();
    partial void OnSpouseBusinessTelephoneNumberChanging(string value);
    partial void OnSpouseBusinessTelephoneNumberChanged();
    partial void OnSpousePositionOccupiedChanging(string value);
    partial void OnSpousePositionOccupiedChanged();
    partial void OnSpouseMonthlySalaryChanging(decimal value);
    partial void OnSpouseMonthlySalaryChanged();
    partial void OnSpouseLengthOfServiceChanging(string value);
    partial void OnSpouseLengthOfServiceChanged();
    partial void OnNumberOfChildrenChanging(string value);
    partial void OnNumberOfChildrenChanged();
    partial void OnStudyingChanging(string value);
    partial void OnStudyingChanged();
    partial void OnSchoolsChanging(string value);
    partial void OnSchoolsChanged();
    #endregion
		
		public mstCoMakerStatement()
		{
			this._mstCoMakerStatementApplianceOwneds = new EntitySet<mstCoMakerStatementApplianceOwned>(new Action<mstCoMakerStatementApplianceOwned>(this.attach_mstCoMakerStatementApplianceOwneds), new Action<mstCoMakerStatementApplianceOwned>(this.detach_mstCoMakerStatementApplianceOwneds));
			this._mstCoMakerStatementRealPropertiesOwneds = new EntitySet<mstCoMakerStatementRealPropertiesOwned>(new Action<mstCoMakerStatementRealPropertiesOwned>(this.attach_mstCoMakerStatementRealPropertiesOwneds), new Action<mstCoMakerStatementRealPropertiesOwned>(this.detach_mstCoMakerStatementRealPropertiesOwneds));
			this._mstApplicant = default(EntityRef<mstApplicant>);
			this._mstCivilStatus = default(EntityRef<mstCivilStatus>);
			this._mstResidenceType = default(EntityRef<mstResidenceType>);
			this._mstResidenceType1 = default(EntityRef<mstResidenceType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicantId", DbType="Int NOT NULL")]
		public int ApplicantId
		{
			get
			{
				return this._ApplicantId;
			}
			set
			{
				if ((this._ApplicantId != value))
				{
					if (this._mstApplicant.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicantIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicantId = value;
					this.SendPropertyChanged("ApplicantId");
					this.OnApplicantIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CoMakerLastName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string CoMakerLastName
		{
			get
			{
				return this._CoMakerLastName;
			}
			set
			{
				if ((this._CoMakerLastName != value))
				{
					this.OnCoMakerLastNameChanging(value);
					this.SendPropertyChanging();
					this._CoMakerLastName = value;
					this.SendPropertyChanged("CoMakerLastName");
					this.OnCoMakerLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CoMakerFirstName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string CoMakerFirstName
		{
			get
			{
				return this._CoMakerFirstName;
			}
			set
			{
				if ((this._CoMakerFirstName != value))
				{
					this.OnCoMakerFirstNameChanging(value);
					this.SendPropertyChanging();
					this._CoMakerFirstName = value;
					this.SendPropertyChanged("CoMakerFirstName");
					this.OnCoMakerFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CoMakerMiddleName", DbType="NVarChar(255)")]
		public string CoMakerMiddleName
		{
			get
			{
				return this._CoMakerMiddleName;
			}
			set
			{
				if ((this._CoMakerMiddleName != value))
				{
					this.OnCoMakerMiddleNameChanging(value);
					this.SendPropertyChanging();
					this._CoMakerMiddleName = value;
					this.SendPropertyChanged("CoMakerMiddleName");
					this.OnCoMakerMiddleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDate", DbType="DateTime NOT NULL")]
		public System.DateTime BirthDate
		{
			get
			{
				return this._BirthDate;
			}
			set
			{
				if ((this._BirthDate != value))
				{
					this.OnBirthDateChanging(value);
					this.SendPropertyChanging();
					this._BirthDate = value;
					this.SendPropertyChanged("BirthDate");
					this.OnBirthDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CivilStatusId", DbType="Int NOT NULL")]
		public int CivilStatusId
		{
			get
			{
				return this._CivilStatusId;
			}
			set
			{
				if ((this._CivilStatusId != value))
				{
					if (this._mstCivilStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCivilStatusIdChanging(value);
					this.SendPropertyChanging();
					this._CivilStatusId = value;
					this.SendPropertyChanged("CivilStatusId");
					this.OnCivilStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityAddress", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string CityAddress
		{
			get
			{
				return this._CityAddress;
			}
			set
			{
				if ((this._CityAddress != value))
				{
					this.OnCityAddressChanging(value);
					this.SendPropertyChanging();
					this._CityAddress = value;
					this.SendPropertyChanged("CityAddress");
					this.OnCityAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProvinceAddress", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ProvinceAddress
		{
			get
			{
				return this._ProvinceAddress;
			}
			set
			{
				if ((this._ProvinceAddress != value))
				{
					this.OnProvinceAddressChanging(value);
					this.SendPropertyChanging();
					this._ProvinceAddress = value;
					this.SendPropertyChanged("ProvinceAddress");
					this.OnProvinceAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ContactNumber
		{
			get
			{
				return this._ContactNumber;
			}
			set
			{
				if ((this._ContactNumber != value))
				{
					this.OnContactNumberChanging(value);
					this.SendPropertyChanging();
					this._ContactNumber = value;
					this.SendPropertyChanged("ContactNumber");
					this.OnContactNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResidenceTypeId", DbType="Int NOT NULL")]
		public int ResidenceTypeId
		{
			get
			{
				return this._ResidenceTypeId;
			}
			set
			{
				if ((this._ResidenceTypeId != value))
				{
					if (this._mstResidenceType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnResidenceTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ResidenceTypeId = value;
					this.SendPropertyChanged("ResidenceTypeId");
					this.OnResidenceTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResidenceMonthlyRentAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal ResidenceMonthlyRentAmount
		{
			get
			{
				return this._ResidenceMonthlyRentAmount;
			}
			set
			{
				if ((this._ResidenceMonthlyRentAmount != value))
				{
					this.OnResidenceMonthlyRentAmountChanging(value);
					this.SendPropertyChanging();
					this._ResidenceMonthlyRentAmount = value;
					this.SendPropertyChanged("ResidenceMonthlyRentAmount");
					this.OnResidenceMonthlyRentAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LandResidenceTypeId", DbType="Int NOT NULL")]
		public int LandResidenceTypeId
		{
			get
			{
				return this._LandResidenceTypeId;
			}
			set
			{
				if ((this._LandResidenceTypeId != value))
				{
					if (this._mstResidenceType1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLandResidenceTypeIdChanging(value);
					this.SendPropertyChanging();
					this._LandResidenceTypeId = value;
					this.SendPropertyChanged("LandResidenceTypeId");
					this.OnLandResidenceTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LandResidenceMonthlyRentAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal LandResidenceMonthlyRentAmount
		{
			get
			{
				return this._LandResidenceMonthlyRentAmount;
			}
			set
			{
				if ((this._LandResidenceMonthlyRentAmount != value))
				{
					this.OnLandResidenceMonthlyRentAmountChanging(value);
					this.SendPropertyChanging();
					this._LandResidenceMonthlyRentAmount = value;
					this.SendPropertyChanged("LandResidenceMonthlyRentAmount");
					this.OnLandResidenceMonthlyRentAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LengthOfStay", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string LengthOfStay
		{
			get
			{
				return this._LengthOfStay;
			}
			set
			{
				if ((this._LengthOfStay != value))
				{
					this.OnLengthOfStayChanging(value);
					this.SendPropertyChanging();
					this._LengthOfStay = value;
					this.SendPropertyChanged("LengthOfStay");
					this.OnLengthOfStayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessAddress", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string BusinessAddress
		{
			get
			{
				return this._BusinessAddress;
			}
			set
			{
				if ((this._BusinessAddress != value))
				{
					this.OnBusinessAddressChanging(value);
					this.SendPropertyChanging();
					this._BusinessAddress = value;
					this.SendPropertyChanged("BusinessAddress");
					this.OnBusinessAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessKaratulaName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string BusinessKaratulaName
		{
			get
			{
				return this._BusinessKaratulaName;
			}
			set
			{
				if ((this._BusinessKaratulaName != value))
				{
					this.OnBusinessKaratulaNameChanging(value);
					this.SendPropertyChanging();
					this._BusinessKaratulaName = value;
					this.SendPropertyChanged("BusinessKaratulaName");
					this.OnBusinessKaratulaNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessTelephoneNumber", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string BusinessTelephoneNumber
		{
			get
			{
				return this._BusinessTelephoneNumber;
			}
			set
			{
				if ((this._BusinessTelephoneNumber != value))
				{
					this.OnBusinessTelephoneNumberChanging(value);
					this.SendPropertyChanging();
					this._BusinessTelephoneNumber = value;
					this.SendPropertyChanged("BusinessTelephoneNumber");
					this.OnBusinessTelephoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessYear", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string BusinessYear
		{
			get
			{
				return this._BusinessYear;
			}
			set
			{
				if ((this._BusinessYear != value))
				{
					this.OnBusinessYearChanging(value);
					this.SendPropertyChanging();
					this._BusinessYear = value;
					this.SendPropertyChanged("BusinessYear");
					this.OnBusinessYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessMerchandise", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string BusinessMerchandise
		{
			get
			{
				return this._BusinessMerchandise;
			}
			set
			{
				if ((this._BusinessMerchandise != value))
				{
					this.OnBusinessMerchandiseChanging(value);
					this.SendPropertyChanging();
					this._BusinessMerchandise = value;
					this.SendPropertyChanged("BusinessMerchandise");
					this.OnBusinessMerchandiseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessStockValues", DbType="Decimal(18,5) NOT NULL")]
		public decimal BusinessStockValues
		{
			get
			{
				return this._BusinessStockValues;
			}
			set
			{
				if ((this._BusinessStockValues != value))
				{
					this.OnBusinessStockValuesChanging(value);
					this.SendPropertyChanging();
					this._BusinessStockValues = value;
					this.SendPropertyChanged("BusinessStockValues");
					this.OnBusinessStockValuesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessBeginningCapital", DbType="Decimal(18,5) NOT NULL")]
		public decimal BusinessBeginningCapital
		{
			get
			{
				return this._BusinessBeginningCapital;
			}
			set
			{
				if ((this._BusinessBeginningCapital != value))
				{
					this.OnBusinessBeginningCapitalChanging(value);
					this.SendPropertyChanging();
					this._BusinessBeginningCapital = value;
					this.SendPropertyChanged("BusinessBeginningCapital");
					this.OnBusinessBeginningCapitalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessLowSalesPeriod", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string BusinessLowSalesPeriod
		{
			get
			{
				return this._BusinessLowSalesPeriod;
			}
			set
			{
				if ((this._BusinessLowSalesPeriod != value))
				{
					this.OnBusinessLowSalesPeriodChanging(value);
					this.SendPropertyChanging();
					this._BusinessLowSalesPeriod = value;
					this.SendPropertyChanged("BusinessLowSalesPeriod");
					this.OnBusinessLowSalesPeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessLowestDailySales", DbType="Decimal(18,5) NOT NULL")]
		public decimal BusinessLowestDailySales
		{
			get
			{
				return this._BusinessLowestDailySales;
			}
			set
			{
				if ((this._BusinessLowestDailySales != value))
				{
					this.OnBusinessLowestDailySalesChanging(value);
					this.SendPropertyChanging();
					this._BusinessLowestDailySales = value;
					this.SendPropertyChanged("BusinessLowestDailySales");
					this.OnBusinessLowestDailySalesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessAverageDailySales", DbType="Decimal(18,5) NOT NULL")]
		public decimal BusinessAverageDailySales
		{
			get
			{
				return this._BusinessAverageDailySales;
			}
			set
			{
				if ((this._BusinessAverageDailySales != value))
				{
					this.OnBusinessAverageDailySalesChanging(value);
					this.SendPropertyChanging();
					this._BusinessAverageDailySales = value;
					this.SendPropertyChanged("BusinessAverageDailySales");
					this.OnBusinessAverageDailySalesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployedCompany", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string EmployedCompany
		{
			get
			{
				return this._EmployedCompany;
			}
			set
			{
				if ((this._EmployedCompany != value))
				{
					this.OnEmployedCompanyChanging(value);
					this.SendPropertyChanging();
					this._EmployedCompany = value;
					this.SendPropertyChanged("EmployedCompany");
					this.OnEmployedCompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployedCompanyAddress", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string EmployedCompanyAddress
		{
			get
			{
				return this._EmployedCompanyAddress;
			}
			set
			{
				if ((this._EmployedCompanyAddress != value))
				{
					this.OnEmployedCompanyAddressChanging(value);
					this.SendPropertyChanging();
					this._EmployedCompanyAddress = value;
					this.SendPropertyChanged("EmployedCompanyAddress");
					this.OnEmployedCompanyAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployedPositionOccupied", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string EmployedPositionOccupied
		{
			get
			{
				return this._EmployedPositionOccupied;
			}
			set
			{
				if ((this._EmployedPositionOccupied != value))
				{
					this.OnEmployedPositionOccupiedChanging(value);
					this.SendPropertyChanging();
					this._EmployedPositionOccupied = value;
					this.SendPropertyChanged("EmployedPositionOccupied");
					this.OnEmployedPositionOccupiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployedServiceLength", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string EmployedServiceLength
		{
			get
			{
				return this._EmployedServiceLength;
			}
			set
			{
				if ((this._EmployedServiceLength != value))
				{
					this.OnEmployedServiceLengthChanging(value);
					this.SendPropertyChanging();
					this._EmployedServiceLength = value;
					this.SendPropertyChanged("EmployedServiceLength");
					this.OnEmployedServiceLengthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployedTelephoneNumber", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string EmployedTelephoneNumber
		{
			get
			{
				return this._EmployedTelephoneNumber;
			}
			set
			{
				if ((this._EmployedTelephoneNumber != value))
				{
					this.OnEmployedTelephoneNumberChanging(value);
					this.SendPropertyChanging();
					this._EmployedTelephoneNumber = value;
					this.SendPropertyChanged("EmployedTelephoneNumber");
					this.OnEmployedTelephoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpouseFullName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string SpouseFullName
		{
			get
			{
				return this._SpouseFullName;
			}
			set
			{
				if ((this._SpouseFullName != value))
				{
					this.OnSpouseFullNameChanging(value);
					this.SendPropertyChanging();
					this._SpouseFullName = value;
					this.SendPropertyChanged("SpouseFullName");
					this.OnSpouseFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpouseEmployerBusiness", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string SpouseEmployerBusiness
		{
			get
			{
				return this._SpouseEmployerBusiness;
			}
			set
			{
				if ((this._SpouseEmployerBusiness != value))
				{
					this.OnSpouseEmployerBusinessChanging(value);
					this.SendPropertyChanging();
					this._SpouseEmployerBusiness = value;
					this.SendPropertyChanged("SpouseEmployerBusiness");
					this.OnSpouseEmployerBusinessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpouseEmployerBusinessAddress", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string SpouseEmployerBusinessAddress
		{
			get
			{
				return this._SpouseEmployerBusinessAddress;
			}
			set
			{
				if ((this._SpouseEmployerBusinessAddress != value))
				{
					this.OnSpouseEmployerBusinessAddressChanging(value);
					this.SendPropertyChanging();
					this._SpouseEmployerBusinessAddress = value;
					this.SendPropertyChanged("SpouseEmployerBusinessAddress");
					this.OnSpouseEmployerBusinessAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpouseBusinessTelephoneNumber", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string SpouseBusinessTelephoneNumber
		{
			get
			{
				return this._SpouseBusinessTelephoneNumber;
			}
			set
			{
				if ((this._SpouseBusinessTelephoneNumber != value))
				{
					this.OnSpouseBusinessTelephoneNumberChanging(value);
					this.SendPropertyChanging();
					this._SpouseBusinessTelephoneNumber = value;
					this.SendPropertyChanged("SpouseBusinessTelephoneNumber");
					this.OnSpouseBusinessTelephoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpousePositionOccupied", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string SpousePositionOccupied
		{
			get
			{
				return this._SpousePositionOccupied;
			}
			set
			{
				if ((this._SpousePositionOccupied != value))
				{
					this.OnSpousePositionOccupiedChanging(value);
					this.SendPropertyChanging();
					this._SpousePositionOccupied = value;
					this.SendPropertyChanged("SpousePositionOccupied");
					this.OnSpousePositionOccupiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpouseMonthlySalary", DbType="Decimal(18,5) NOT NULL")]
		public decimal SpouseMonthlySalary
		{
			get
			{
				return this._SpouseMonthlySalary;
			}
			set
			{
				if ((this._SpouseMonthlySalary != value))
				{
					this.OnSpouseMonthlySalaryChanging(value);
					this.SendPropertyChanging();
					this._SpouseMonthlySalary = value;
					this.SendPropertyChanged("SpouseMonthlySalary");
					this.OnSpouseMonthlySalaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpouseLengthOfService", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string SpouseLengthOfService
		{
			get
			{
				return this._SpouseLengthOfService;
			}
			set
			{
				if ((this._SpouseLengthOfService != value))
				{
					this.OnSpouseLengthOfServiceChanging(value);
					this.SendPropertyChanging();
					this._SpouseLengthOfService = value;
					this.SendPropertyChanged("SpouseLengthOfService");
					this.OnSpouseLengthOfServiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfChildren", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string NumberOfChildren
		{
			get
			{
				return this._NumberOfChildren;
			}
			set
			{
				if ((this._NumberOfChildren != value))
				{
					this.OnNumberOfChildrenChanging(value);
					this.SendPropertyChanging();
					this._NumberOfChildren = value;
					this.SendPropertyChanged("NumberOfChildren");
					this.OnNumberOfChildrenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Studying", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Studying
		{
			get
			{
				return this._Studying;
			}
			set
			{
				if ((this._Studying != value))
				{
					this.OnStudyingChanging(value);
					this.SendPropertyChanging();
					this._Studying = value;
					this.SendPropertyChanged("Studying");
					this.OnStudyingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Schools", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Schools
		{
			get
			{
				return this._Schools;
			}
			set
			{
				if ((this._Schools != value))
				{
					this.OnSchoolsChanging(value);
					this.SendPropertyChanging();
					this._Schools = value;
					this.SendPropertyChanged("Schools");
					this.OnSchoolsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstCoMakerStatement_mstCoMakerStatementApplianceOwned", Storage="_mstCoMakerStatementApplianceOwneds", ThisKey="Id", OtherKey="CoMakerId")]
		public EntitySet<mstCoMakerStatementApplianceOwned> mstCoMakerStatementApplianceOwneds
		{
			get
			{
				return this._mstCoMakerStatementApplianceOwneds;
			}
			set
			{
				this._mstCoMakerStatementApplianceOwneds.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstCoMakerStatement_mstCoMakerStatementRealPropertiesOwned", Storage="_mstCoMakerStatementRealPropertiesOwneds", ThisKey="Id", OtherKey="CoMakerId")]
		public EntitySet<mstCoMakerStatementRealPropertiesOwned> mstCoMakerStatementRealPropertiesOwneds
		{
			get
			{
				return this._mstCoMakerStatementRealPropertiesOwneds;
			}
			set
			{
				this._mstCoMakerStatementRealPropertiesOwneds.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstApplicant_mstCoMakerStatement", Storage="_mstApplicant", ThisKey="ApplicantId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public mstApplicant mstApplicant
		{
			get
			{
				return this._mstApplicant.Entity;
			}
			set
			{
				mstApplicant previousValue = this._mstApplicant.Entity;
				if (((previousValue != value) 
							|| (this._mstApplicant.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstApplicant.Entity = null;
						previousValue.mstCoMakerStatements.Remove(this);
					}
					this._mstApplicant.Entity = value;
					if ((value != null))
					{
						value.mstCoMakerStatements.Add(this);
						this._ApplicantId = value.Id;
					}
					else
					{
						this._ApplicantId = default(int);
					}
					this.SendPropertyChanged("mstApplicant");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstCivilStatus_mstCoMakerStatement", Storage="_mstCivilStatus", ThisKey="CivilStatusId", OtherKey="Id", IsForeignKey=true)]
		public mstCivilStatus mstCivilStatus
		{
			get
			{
				return this._mstCivilStatus.Entity;
			}
			set
			{
				mstCivilStatus previousValue = this._mstCivilStatus.Entity;
				if (((previousValue != value) 
							|| (this._mstCivilStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstCivilStatus.Entity = null;
						previousValue.mstCoMakerStatements.Remove(this);
					}
					this._mstCivilStatus.Entity = value;
					if ((value != null))
					{
						value.mstCoMakerStatements.Add(this);
						this._CivilStatusId = value.Id;
					}
					else
					{
						this._CivilStatusId = default(int);
					}
					this.SendPropertyChanged("mstCivilStatus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstResidenceType_mstCoMakerStatement", Storage="_mstResidenceType", ThisKey="ResidenceTypeId", OtherKey="Id", IsForeignKey=true)]
		public mstResidenceType mstResidenceType
		{
			get
			{
				return this._mstResidenceType.Entity;
			}
			set
			{
				mstResidenceType previousValue = this._mstResidenceType.Entity;
				if (((previousValue != value) 
							|| (this._mstResidenceType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstResidenceType.Entity = null;
						previousValue.mstCoMakerStatements.Remove(this);
					}
					this._mstResidenceType.Entity = value;
					if ((value != null))
					{
						value.mstCoMakerStatements.Add(this);
						this._ResidenceTypeId = value.Id;
					}
					else
					{
						this._ResidenceTypeId = default(int);
					}
					this.SendPropertyChanged("mstResidenceType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstResidenceType_mstCoMakerStatement1", Storage="_mstResidenceType1", ThisKey="LandResidenceTypeId", OtherKey="Id", IsForeignKey=true)]
		public mstResidenceType mstResidenceType1
		{
			get
			{
				return this._mstResidenceType1.Entity;
			}
			set
			{
				mstResidenceType previousValue = this._mstResidenceType1.Entity;
				if (((previousValue != value) 
							|| (this._mstResidenceType1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstResidenceType1.Entity = null;
						previousValue.mstCoMakerStatements1.Remove(this);
					}
					this._mstResidenceType1.Entity = value;
					if ((value != null))
					{
						value.mstCoMakerStatements1.Add(this);
						this._LandResidenceTypeId = value.Id;
					}
					else
					{
						this._LandResidenceTypeId = default(int);
					}
					this.SendPropertyChanged("mstResidenceType1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_mstCoMakerStatementApplianceOwneds(mstCoMakerStatementApplianceOwned entity)
		{
			this.SendPropertyChanging();
			entity.mstCoMakerStatement = this;
		}
		
		private void detach_mstCoMakerStatementApplianceOwneds(mstCoMakerStatementApplianceOwned entity)
		{
			this.SendPropertyChanging();
			entity.mstCoMakerStatement = null;
		}
		
		private void attach_mstCoMakerStatementRealPropertiesOwneds(mstCoMakerStatementRealPropertiesOwned entity)
		{
			this.SendPropertyChanging();
			entity.mstCoMakerStatement = this;
		}
		
		private void detach_mstCoMakerStatementRealPropertiesOwneds(mstCoMakerStatementRealPropertiesOwned entity)
		{
			this.SendPropertyChanging();
			entity.mstCoMakerStatement = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mstCoMakerStatementApplianceOwned")]
	public partial class mstCoMakerStatementApplianceOwned : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _CoMakerId;
		
		private string _ApplianceBrand;
		
		private string _PresentValue;
		
		private EntityRef<mstCoMakerStatement> _mstCoMakerStatement;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCoMakerIdChanging(int value);
    partial void OnCoMakerIdChanged();
    partial void OnApplianceBrandChanging(string value);
    partial void OnApplianceBrandChanged();
    partial void OnPresentValueChanging(string value);
    partial void OnPresentValueChanged();
    #endregion
		
		public mstCoMakerStatementApplianceOwned()
		{
			this._mstCoMakerStatement = default(EntityRef<mstCoMakerStatement>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CoMakerId", DbType="Int NOT NULL")]
		public int CoMakerId
		{
			get
			{
				return this._CoMakerId;
			}
			set
			{
				if ((this._CoMakerId != value))
				{
					if (this._mstCoMakerStatement.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCoMakerIdChanging(value);
					this.SendPropertyChanging();
					this._CoMakerId = value;
					this.SendPropertyChanged("CoMakerId");
					this.OnCoMakerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplianceBrand", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string ApplianceBrand
		{
			get
			{
				return this._ApplianceBrand;
			}
			set
			{
				if ((this._ApplianceBrand != value))
				{
					this.OnApplianceBrandChanging(value);
					this.SendPropertyChanging();
					this._ApplianceBrand = value;
					this.SendPropertyChanged("ApplianceBrand");
					this.OnApplianceBrandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PresentValue", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string PresentValue
		{
			get
			{
				return this._PresentValue;
			}
			set
			{
				if ((this._PresentValue != value))
				{
					this.OnPresentValueChanging(value);
					this.SendPropertyChanging();
					this._PresentValue = value;
					this.SendPropertyChanged("PresentValue");
					this.OnPresentValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstCoMakerStatement_mstCoMakerStatementApplianceOwned", Storage="_mstCoMakerStatement", ThisKey="CoMakerId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public mstCoMakerStatement mstCoMakerStatement
		{
			get
			{
				return this._mstCoMakerStatement.Entity;
			}
			set
			{
				mstCoMakerStatement previousValue = this._mstCoMakerStatement.Entity;
				if (((previousValue != value) 
							|| (this._mstCoMakerStatement.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstCoMakerStatement.Entity = null;
						previousValue.mstCoMakerStatementApplianceOwneds.Remove(this);
					}
					this._mstCoMakerStatement.Entity = value;
					if ((value != null))
					{
						value.mstCoMakerStatementApplianceOwneds.Add(this);
						this._CoMakerId = value.Id;
					}
					else
					{
						this._CoMakerId = default(int);
					}
					this.SendPropertyChanged("mstCoMakerStatement");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mstCoMakerStatementRealPropertiesOwned")]
	public partial class mstCoMakerStatementRealPropertiesOwned : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _CoMakerId;
		
		private string _Real;
		
		private string _Location;
		
		private string _PresentValue;
		
		private string _EcumberedTo;
		
		private EntityRef<mstCoMakerStatement> _mstCoMakerStatement;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCoMakerIdChanging(int value);
    partial void OnCoMakerIdChanged();
    partial void OnRealChanging(string value);
    partial void OnRealChanged();
    partial void OnLocationChanging(string value);
    partial void OnLocationChanged();
    partial void OnPresentValueChanging(string value);
    partial void OnPresentValueChanged();
    partial void OnEcumberedToChanging(string value);
    partial void OnEcumberedToChanged();
    #endregion
		
		public mstCoMakerStatementRealPropertiesOwned()
		{
			this._mstCoMakerStatement = default(EntityRef<mstCoMakerStatement>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CoMakerId", DbType="Int NOT NULL")]
		public int CoMakerId
		{
			get
			{
				return this._CoMakerId;
			}
			set
			{
				if ((this._CoMakerId != value))
				{
					if (this._mstCoMakerStatement.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCoMakerIdChanging(value);
					this.SendPropertyChanging();
					this._CoMakerId = value;
					this.SendPropertyChanged("CoMakerId");
					this.OnCoMakerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Real", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Real
		{
			get
			{
				return this._Real;
			}
			set
			{
				if ((this._Real != value))
				{
					this.OnRealChanging(value);
					this.SendPropertyChanging();
					this._Real = value;
					this.SendPropertyChanged("Real");
					this.OnRealChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this.OnLocationChanging(value);
					this.SendPropertyChanging();
					this._Location = value;
					this.SendPropertyChanged("Location");
					this.OnLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PresentValue", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string PresentValue
		{
			get
			{
				return this._PresentValue;
			}
			set
			{
				if ((this._PresentValue != value))
				{
					this.OnPresentValueChanging(value);
					this.SendPropertyChanging();
					this._PresentValue = value;
					this.SendPropertyChanged("PresentValue");
					this.OnPresentValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EcumberedTo", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string EcumberedTo
		{
			get
			{
				return this._EcumberedTo;
			}
			set
			{
				if ((this._EcumberedTo != value))
				{
					this.OnEcumberedToChanging(value);
					this.SendPropertyChanging();
					this._EcumberedTo = value;
					this.SendPropertyChanged("EcumberedTo");
					this.OnEcumberedToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstCoMakerStatement_mstCoMakerStatementRealPropertiesOwned", Storage="_mstCoMakerStatement", ThisKey="CoMakerId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public mstCoMakerStatement mstCoMakerStatement
		{
			get
			{
				return this._mstCoMakerStatement.Entity;
			}
			set
			{
				mstCoMakerStatement previousValue = this._mstCoMakerStatement.Entity;
				if (((previousValue != value) 
							|| (this._mstCoMakerStatement.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstCoMakerStatement.Entity = null;
						previousValue.mstCoMakerStatementRealPropertiesOwneds.Remove(this);
					}
					this._mstCoMakerStatement.Entity = value;
					if ((value != null))
					{
						value.mstCoMakerStatementRealPropertiesOwneds.Add(this);
						this._CoMakerId = value.Id;
					}
					else
					{
						this._CoMakerId = default(int);
					}
					this.SendPropertyChanged("mstCoMakerStatement");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mstCompany")]
	public partial class mstCompany : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Company;
		
		private string _Address;
		
		private string _ContactNumber;
		
		private bool _IsLocked;
		
		private int _CreatedByUserId;
		
		private System.DateTime _CreatedDateTime;
		
		private int _UpdatedByUserId;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntitySet<mstBranch> _mstBranches;
		
		private EntityRef<mstUser> _mstUser;
		
		private EntityRef<mstUser> _mstUser1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnContactNumberChanging(string value);
    partial void OnContactNumberChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByUserIdChanging(int value);
    partial void OnCreatedByUserIdChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByUserIdChanging(int value);
    partial void OnUpdatedByUserIdChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public mstCompany()
		{
			this._mstBranches = new EntitySet<mstBranch>(new Action<mstBranch>(this.attach_mstBranches), new Action<mstBranch>(this.detach_mstBranches));
			this._mstUser = default(EntityRef<mstUser>);
			this._mstUser1 = default(EntityRef<mstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ContactNumber
		{
			get
			{
				return this._ContactNumber;
			}
			set
			{
				if ((this._ContactNumber != value))
				{
					this.OnContactNumberChanging(value);
					this.SendPropertyChanging();
					this._ContactNumber = value;
					this.SendPropertyChanged("ContactNumber");
					this.OnContactNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserId", DbType="Int NOT NULL")]
		public int CreatedByUserId
		{
			get
			{
				return this._CreatedByUserId;
			}
			set
			{
				if ((this._CreatedByUserId != value))
				{
					if (this._mstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserId = value;
					this.SendPropertyChanged("CreatedByUserId");
					this.OnCreatedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedByUserId", DbType="Int NOT NULL")]
		public int UpdatedByUserId
		{
			get
			{
				return this._UpdatedByUserId;
			}
			set
			{
				if ((this._UpdatedByUserId != value))
				{
					if (this._mstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedByUserId = value;
					this.SendPropertyChanged("UpdatedByUserId");
					this.OnUpdatedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstCompany_mstBranch", Storage="_mstBranches", ThisKey="Id", OtherKey="CompanyId")]
		public EntitySet<mstBranch> mstBranches
		{
			get
			{
				return this._mstBranches;
			}
			set
			{
				this._mstBranches.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUser_mstCompany", Storage="_mstUser", ThisKey="CreatedByUserId", OtherKey="Id", IsForeignKey=true)]
		public mstUser mstUser
		{
			get
			{
				return this._mstUser.Entity;
			}
			set
			{
				mstUser previousValue = this._mstUser.Entity;
				if (((previousValue != value) 
							|| (this._mstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstUser.Entity = null;
						previousValue.mstCompanies.Remove(this);
					}
					this._mstUser.Entity = value;
					if ((value != null))
					{
						value.mstCompanies.Add(this);
						this._CreatedByUserId = value.Id;
					}
					else
					{
						this._CreatedByUserId = default(int);
					}
					this.SendPropertyChanged("mstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUser_mstCompany1", Storage="_mstUser1", ThisKey="UpdatedByUserId", OtherKey="Id", IsForeignKey=true)]
		public mstUser mstUser1
		{
			get
			{
				return this._mstUser1.Entity;
			}
			set
			{
				mstUser previousValue = this._mstUser1.Entity;
				if (((previousValue != value) 
							|| (this._mstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstUser1.Entity = null;
						previousValue.mstCompanies1.Remove(this);
					}
					this._mstUser1.Entity = value;
					if ((value != null))
					{
						value.mstCompanies1.Add(this);
						this._UpdatedByUserId = value.Id;
					}
					else
					{
						this._UpdatedByUserId = default(int);
					}
					this.SendPropertyChanged("mstUser1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_mstBranches(mstBranch entity)
		{
			this.SendPropertyChanging();
			entity.mstCompany = this;
		}
		
		private void detach_mstBranches(mstBranch entity)
		{
			this.SendPropertyChanging();
			entity.mstCompany = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mstRequirements")]
	public partial class mstRequirement : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Requirement;
		
		private string _Description;
		
		private int _CreatedByUserId;
		
		private System.DateTime _CreatedDateTime;
		
		private int _UpdatedByUserId;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntitySet<trnLoanApplicationRequirement> _trnLoanApplicationRequirements;
		
		private EntityRef<mstUser> _mstUser;
		
		private EntityRef<mstUser> _mstUser1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnRequirementChanging(string value);
    partial void OnRequirementChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreatedByUserIdChanging(int value);
    partial void OnCreatedByUserIdChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByUserIdChanging(int value);
    partial void OnUpdatedByUserIdChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public mstRequirement()
		{
			this._trnLoanApplicationRequirements = new EntitySet<trnLoanApplicationRequirement>(new Action<trnLoanApplicationRequirement>(this.attach_trnLoanApplicationRequirements), new Action<trnLoanApplicationRequirement>(this.detach_trnLoanApplicationRequirements));
			this._mstUser = default(EntityRef<mstUser>);
			this._mstUser1 = default(EntityRef<mstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Requirement", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Requirement
		{
			get
			{
				return this._Requirement;
			}
			set
			{
				if ((this._Requirement != value))
				{
					this.OnRequirementChanging(value);
					this.SendPropertyChanging();
					this._Requirement = value;
					this.SendPropertyChanged("Requirement");
					this.OnRequirementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserId", DbType="Int NOT NULL")]
		public int CreatedByUserId
		{
			get
			{
				return this._CreatedByUserId;
			}
			set
			{
				if ((this._CreatedByUserId != value))
				{
					if (this._mstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserId = value;
					this.SendPropertyChanged("CreatedByUserId");
					this.OnCreatedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedByUserId", DbType="Int NOT NULL")]
		public int UpdatedByUserId
		{
			get
			{
				return this._UpdatedByUserId;
			}
			set
			{
				if ((this._UpdatedByUserId != value))
				{
					if (this._mstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedByUserId = value;
					this.SendPropertyChanged("UpdatedByUserId");
					this.OnUpdatedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstRequirement_trnLoanApplicationRequirement", Storage="_trnLoanApplicationRequirements", ThisKey="Id", OtherKey="RequirementId")]
		public EntitySet<trnLoanApplicationRequirement> trnLoanApplicationRequirements
		{
			get
			{
				return this._trnLoanApplicationRequirements;
			}
			set
			{
				this._trnLoanApplicationRequirements.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUser_mstRequirement", Storage="_mstUser", ThisKey="CreatedByUserId", OtherKey="Id", IsForeignKey=true)]
		public mstUser mstUser
		{
			get
			{
				return this._mstUser.Entity;
			}
			set
			{
				mstUser previousValue = this._mstUser.Entity;
				if (((previousValue != value) 
							|| (this._mstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstUser.Entity = null;
						previousValue.mstRequirements.Remove(this);
					}
					this._mstUser.Entity = value;
					if ((value != null))
					{
						value.mstRequirements.Add(this);
						this._CreatedByUserId = value.Id;
					}
					else
					{
						this._CreatedByUserId = default(int);
					}
					this.SendPropertyChanged("mstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUser_mstRequirement1", Storage="_mstUser1", ThisKey="UpdatedByUserId", OtherKey="Id", IsForeignKey=true)]
		public mstUser mstUser1
		{
			get
			{
				return this._mstUser1.Entity;
			}
			set
			{
				mstUser previousValue = this._mstUser1.Entity;
				if (((previousValue != value) 
							|| (this._mstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstUser1.Entity = null;
						previousValue.mstRequirements1.Remove(this);
					}
					this._mstUser1.Entity = value;
					if ((value != null))
					{
						value.mstRequirements1.Add(this);
						this._UpdatedByUserId = value.Id;
					}
					else
					{
						this._UpdatedByUserId = default(int);
					}
					this.SendPropertyChanged("mstUser1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_trnLoanApplicationRequirements(trnLoanApplicationRequirement entity)
		{
			this.SendPropertyChanging();
			entity.mstRequirement = this;
		}
		
		private void detach_trnLoanApplicationRequirements(trnLoanApplicationRequirement entity)
		{
			this.SendPropertyChanging();
			entity.mstRequirement = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mstResidenceType")]
	public partial class mstResidenceType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _ResidenceType;
		
		private EntitySet<mstApplicant> _mstApplicants;
		
		private EntitySet<mstApplicant> _mstApplicants1;
		
		private EntitySet<mstCoMakerStatement> _mstCoMakerStatements;
		
		private EntitySet<mstCoMakerStatement> _mstCoMakerStatements1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnResidenceTypeChanging(string value);
    partial void OnResidenceTypeChanged();
    #endregion
		
		public mstResidenceType()
		{
			this._mstApplicants = new EntitySet<mstApplicant>(new Action<mstApplicant>(this.attach_mstApplicants), new Action<mstApplicant>(this.detach_mstApplicants));
			this._mstApplicants1 = new EntitySet<mstApplicant>(new Action<mstApplicant>(this.attach_mstApplicants1), new Action<mstApplicant>(this.detach_mstApplicants1));
			this._mstCoMakerStatements = new EntitySet<mstCoMakerStatement>(new Action<mstCoMakerStatement>(this.attach_mstCoMakerStatements), new Action<mstCoMakerStatement>(this.detach_mstCoMakerStatements));
			this._mstCoMakerStatements1 = new EntitySet<mstCoMakerStatement>(new Action<mstCoMakerStatement>(this.attach_mstCoMakerStatements1), new Action<mstCoMakerStatement>(this.detach_mstCoMakerStatements1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResidenceType", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ResidenceType
		{
			get
			{
				return this._ResidenceType;
			}
			set
			{
				if ((this._ResidenceType != value))
				{
					this.OnResidenceTypeChanging(value);
					this.SendPropertyChanging();
					this._ResidenceType = value;
					this.SendPropertyChanged("ResidenceType");
					this.OnResidenceTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstResidenceType_mstApplicant", Storage="_mstApplicants", ThisKey="Id", OtherKey="ResidenceTypeId")]
		public EntitySet<mstApplicant> mstApplicants
		{
			get
			{
				return this._mstApplicants;
			}
			set
			{
				this._mstApplicants.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstResidenceType_mstApplicant1", Storage="_mstApplicants1", ThisKey="Id", OtherKey="LandResidenceTypeId")]
		public EntitySet<mstApplicant> mstApplicants1
		{
			get
			{
				return this._mstApplicants1;
			}
			set
			{
				this._mstApplicants1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstResidenceType_mstCoMakerStatement", Storage="_mstCoMakerStatements", ThisKey="Id", OtherKey="ResidenceTypeId")]
		public EntitySet<mstCoMakerStatement> mstCoMakerStatements
		{
			get
			{
				return this._mstCoMakerStatements;
			}
			set
			{
				this._mstCoMakerStatements.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstResidenceType_mstCoMakerStatement1", Storage="_mstCoMakerStatements1", ThisKey="Id", OtherKey="LandResidenceTypeId")]
		public EntitySet<mstCoMakerStatement> mstCoMakerStatements1
		{
			get
			{
				return this._mstCoMakerStatements1;
			}
			set
			{
				this._mstCoMakerStatements1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_mstApplicants(mstApplicant entity)
		{
			this.SendPropertyChanging();
			entity.mstResidenceType = this;
		}
		
		private void detach_mstApplicants(mstApplicant entity)
		{
			this.SendPropertyChanging();
			entity.mstResidenceType = null;
		}
		
		private void attach_mstApplicants1(mstApplicant entity)
		{
			this.SendPropertyChanging();
			entity.mstResidenceType1 = this;
		}
		
		private void detach_mstApplicants1(mstApplicant entity)
		{
			this.SendPropertyChanging();
			entity.mstResidenceType1 = null;
		}
		
		private void attach_mstCoMakerStatements(mstCoMakerStatement entity)
		{
			this.SendPropertyChanging();
			entity.mstResidenceType = this;
		}
		
		private void detach_mstCoMakerStatements(mstCoMakerStatement entity)
		{
			this.SendPropertyChanging();
			entity.mstResidenceType = null;
		}
		
		private void attach_mstCoMakerStatements1(mstCoMakerStatement entity)
		{
			this.SendPropertyChanging();
			entity.mstResidenceType1 = this;
		}
		
		private void detach_mstCoMakerStatements1(mstCoMakerStatement entity)
		{
			this.SendPropertyChanging();
			entity.mstResidenceType1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mstTransactionType")]
	public partial class mstTransactionType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _TransactionType;
		
		private EntitySet<mstAccount> _mstAccounts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTransactionTypeChanging(string value);
    partial void OnTransactionTypeChanged();
    #endregion
		
		public mstTransactionType()
		{
			this._mstAccounts = new EntitySet<mstAccount>(new Action<mstAccount>(this.attach_mstAccounts), new Action<mstAccount>(this.detach_mstAccounts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionType", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string TransactionType
		{
			get
			{
				return this._TransactionType;
			}
			set
			{
				if ((this._TransactionType != value))
				{
					this.OnTransactionTypeChanging(value);
					this.SendPropertyChanging();
					this._TransactionType = value;
					this.SendPropertyChanged("TransactionType");
					this.OnTransactionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstTransactionType_mstAccount", Storage="_mstAccounts", ThisKey="Id", OtherKey="AccountTransactionTypeId")]
		public EntitySet<mstAccount> mstAccounts
		{
			get
			{
				return this._mstAccounts;
			}
			set
			{
				this._mstAccounts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_mstAccounts(mstAccount entity)
		{
			this.SendPropertyChanging();
			entity.mstTransactionType = this;
		}
		
		private void detach_mstAccounts(mstAccount entity)
		{
			this.SendPropertyChanging();
			entity.mstTransactionType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mstUser")]
	public partial class mstUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _AspUserId;
		
		private string _Username;
		
		private string _Password;
		
		private string _FullName;
		
		private System.DateTime _CreatedDate;
		
		private System.DateTime _UpdatedDate;
		
		private EntitySet<mstAccount> _mstAccounts;
		
		private EntitySet<mstAccount> _mstAccounts1;
		
		private EntitySet<mstApplicant> _mstApplicants;
		
		private EntitySet<mstApplicant> _mstApplicants1;
		
		private EntitySet<mstArea> _mstAreas;
		
		private EntitySet<mstArea> _mstAreas1;
		
		private EntitySet<mstCollector> _mstCollectors;
		
		private EntitySet<mstCollector> _mstCollectors1;
		
		private EntitySet<mstCompany> _mstCompanies;
		
		private EntitySet<mstCompany> _mstCompanies1;
		
		private EntitySet<mstRequirement> _mstRequirements;
		
		private EntitySet<mstRequirement> _mstRequirements1;
		
		private EntitySet<trnDisbursement> _trnDisbursements;
		
		private EntitySet<trnDisbursement> _trnDisbursements1;
		
		private EntitySet<trnDisbursement> _trnDisbursements2;
		
		private EntitySet<trnLoanApplication> _trnLoanApplications;
		
		private EntitySet<trnLoanApplication> _trnLoanApplications1;
		
		private EntitySet<trnLoanApplication> _trnLoanApplications2;
		
		private EntityRef<AspNetUser> _AspNetUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAspUserIdChanging(string value);
    partial void OnAspUserIdChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedDateChanging(System.DateTime value);
    partial void OnUpdatedDateChanged();
    #endregion
		
		public mstUser()
		{
			this._mstAccounts = new EntitySet<mstAccount>(new Action<mstAccount>(this.attach_mstAccounts), new Action<mstAccount>(this.detach_mstAccounts));
			this._mstAccounts1 = new EntitySet<mstAccount>(new Action<mstAccount>(this.attach_mstAccounts1), new Action<mstAccount>(this.detach_mstAccounts1));
			this._mstApplicants = new EntitySet<mstApplicant>(new Action<mstApplicant>(this.attach_mstApplicants), new Action<mstApplicant>(this.detach_mstApplicants));
			this._mstApplicants1 = new EntitySet<mstApplicant>(new Action<mstApplicant>(this.attach_mstApplicants1), new Action<mstApplicant>(this.detach_mstApplicants1));
			this._mstAreas = new EntitySet<mstArea>(new Action<mstArea>(this.attach_mstAreas), new Action<mstArea>(this.detach_mstAreas));
			this._mstAreas1 = new EntitySet<mstArea>(new Action<mstArea>(this.attach_mstAreas1), new Action<mstArea>(this.detach_mstAreas1));
			this._mstCollectors = new EntitySet<mstCollector>(new Action<mstCollector>(this.attach_mstCollectors), new Action<mstCollector>(this.detach_mstCollectors));
			this._mstCollectors1 = new EntitySet<mstCollector>(new Action<mstCollector>(this.attach_mstCollectors1), new Action<mstCollector>(this.detach_mstCollectors1));
			this._mstCompanies = new EntitySet<mstCompany>(new Action<mstCompany>(this.attach_mstCompanies), new Action<mstCompany>(this.detach_mstCompanies));
			this._mstCompanies1 = new EntitySet<mstCompany>(new Action<mstCompany>(this.attach_mstCompanies1), new Action<mstCompany>(this.detach_mstCompanies1));
			this._mstRequirements = new EntitySet<mstRequirement>(new Action<mstRequirement>(this.attach_mstRequirements), new Action<mstRequirement>(this.detach_mstRequirements));
			this._mstRequirements1 = new EntitySet<mstRequirement>(new Action<mstRequirement>(this.attach_mstRequirements1), new Action<mstRequirement>(this.detach_mstRequirements1));
			this._trnDisbursements = new EntitySet<trnDisbursement>(new Action<trnDisbursement>(this.attach_trnDisbursements), new Action<trnDisbursement>(this.detach_trnDisbursements));
			this._trnDisbursements1 = new EntitySet<trnDisbursement>(new Action<trnDisbursement>(this.attach_trnDisbursements1), new Action<trnDisbursement>(this.detach_trnDisbursements1));
			this._trnDisbursements2 = new EntitySet<trnDisbursement>(new Action<trnDisbursement>(this.attach_trnDisbursements2), new Action<trnDisbursement>(this.detach_trnDisbursements2));
			this._trnLoanApplications = new EntitySet<trnLoanApplication>(new Action<trnLoanApplication>(this.attach_trnLoanApplications), new Action<trnLoanApplication>(this.detach_trnLoanApplications));
			this._trnLoanApplications1 = new EntitySet<trnLoanApplication>(new Action<trnLoanApplication>(this.attach_trnLoanApplications1), new Action<trnLoanApplication>(this.detach_trnLoanApplications1));
			this._trnLoanApplications2 = new EntitySet<trnLoanApplication>(new Action<trnLoanApplication>(this.attach_trnLoanApplications2), new Action<trnLoanApplication>(this.detach_trnLoanApplications2));
			this._AspNetUser = default(EntityRef<AspNetUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AspUserId", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string AspUserId
		{
			get
			{
				return this._AspUserId;
			}
			set
			{
				if ((this._AspUserId != value))
				{
					if (this._AspNetUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAspUserIdChanging(value);
					this.SendPropertyChanging();
					this._AspUserId = value;
					this.SendPropertyChanged("AspUserId");
					this.OnAspUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUser_mstAccount", Storage="_mstAccounts", ThisKey="Id", OtherKey="CreatedByUserId")]
		public EntitySet<mstAccount> mstAccounts
		{
			get
			{
				return this._mstAccounts;
			}
			set
			{
				this._mstAccounts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUser_mstAccount1", Storage="_mstAccounts1", ThisKey="Id", OtherKey="UpdatedByUserId")]
		public EntitySet<mstAccount> mstAccounts1
		{
			get
			{
				return this._mstAccounts1;
			}
			set
			{
				this._mstAccounts1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUser_mstApplicant", Storage="_mstApplicants", ThisKey="Id", OtherKey="CreatedByUserId")]
		public EntitySet<mstApplicant> mstApplicants
		{
			get
			{
				return this._mstApplicants;
			}
			set
			{
				this._mstApplicants.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUser_mstApplicant1", Storage="_mstApplicants1", ThisKey="Id", OtherKey="UpdatedByUserId")]
		public EntitySet<mstApplicant> mstApplicants1
		{
			get
			{
				return this._mstApplicants1;
			}
			set
			{
				this._mstApplicants1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUser_mstArea", Storage="_mstAreas", ThisKey="Id", OtherKey="CreatedByUserId")]
		public EntitySet<mstArea> mstAreas
		{
			get
			{
				return this._mstAreas;
			}
			set
			{
				this._mstAreas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUser_mstArea1", Storage="_mstAreas1", ThisKey="Id", OtherKey="UpdatedByUserId")]
		public EntitySet<mstArea> mstAreas1
		{
			get
			{
				return this._mstAreas1;
			}
			set
			{
				this._mstAreas1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUser_mstCollector", Storage="_mstCollectors", ThisKey="Id", OtherKey="CreatedByUserId")]
		public EntitySet<mstCollector> mstCollectors
		{
			get
			{
				return this._mstCollectors;
			}
			set
			{
				this._mstCollectors.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUser_mstCollector1", Storage="_mstCollectors1", ThisKey="Id", OtherKey="UpdatedByUserId")]
		public EntitySet<mstCollector> mstCollectors1
		{
			get
			{
				return this._mstCollectors1;
			}
			set
			{
				this._mstCollectors1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUser_mstCompany", Storage="_mstCompanies", ThisKey="Id", OtherKey="CreatedByUserId")]
		public EntitySet<mstCompany> mstCompanies
		{
			get
			{
				return this._mstCompanies;
			}
			set
			{
				this._mstCompanies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUser_mstCompany1", Storage="_mstCompanies1", ThisKey="Id", OtherKey="UpdatedByUserId")]
		public EntitySet<mstCompany> mstCompanies1
		{
			get
			{
				return this._mstCompanies1;
			}
			set
			{
				this._mstCompanies1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUser_mstRequirement", Storage="_mstRequirements", ThisKey="Id", OtherKey="CreatedByUserId")]
		public EntitySet<mstRequirement> mstRequirements
		{
			get
			{
				return this._mstRequirements;
			}
			set
			{
				this._mstRequirements.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUser_mstRequirement1", Storage="_mstRequirements1", ThisKey="Id", OtherKey="UpdatedByUserId")]
		public EntitySet<mstRequirement> mstRequirements1
		{
			get
			{
				return this._mstRequirements1;
			}
			set
			{
				this._mstRequirements1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUser_trnDisbursement", Storage="_trnDisbursements", ThisKey="Id", OtherKey="PreparedByUserId")]
		public EntitySet<trnDisbursement> trnDisbursements
		{
			get
			{
				return this._trnDisbursements;
			}
			set
			{
				this._trnDisbursements.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUser_trnDisbursement1", Storage="_trnDisbursements1", ThisKey="Id", OtherKey="CreatedByUserId")]
		public EntitySet<trnDisbursement> trnDisbursements1
		{
			get
			{
				return this._trnDisbursements1;
			}
			set
			{
				this._trnDisbursements1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUser_trnDisbursement2", Storage="_trnDisbursements2", ThisKey="Id", OtherKey="UpdatedByUserId")]
		public EntitySet<trnDisbursement> trnDisbursements2
		{
			get
			{
				return this._trnDisbursements2;
			}
			set
			{
				this._trnDisbursements2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUser_trnLoanApplication", Storage="_trnLoanApplications", ThisKey="Id", OtherKey="PreparedByUserId")]
		public EntitySet<trnLoanApplication> trnLoanApplications
		{
			get
			{
				return this._trnLoanApplications;
			}
			set
			{
				this._trnLoanApplications.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUser_trnLoanApplication1", Storage="_trnLoanApplications1", ThisKey="Id", OtherKey="CreatedByUserId")]
		public EntitySet<trnLoanApplication> trnLoanApplications1
		{
			get
			{
				return this._trnLoanApplications1;
			}
			set
			{
				this._trnLoanApplications1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUser_trnLoanApplication2", Storage="_trnLoanApplications2", ThisKey="Id", OtherKey="UpdatedByUserId")]
		public EntitySet<trnLoanApplication> trnLoanApplications2
		{
			get
			{
				return this._trnLoanApplications2;
			}
			set
			{
				this._trnLoanApplications2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetUser_mstUser", Storage="_AspNetUser", ThisKey="AspUserId", OtherKey="Id", IsForeignKey=true)]
		public AspNetUser AspNetUser
		{
			get
			{
				return this._AspNetUser.Entity;
			}
			set
			{
				AspNetUser previousValue = this._AspNetUser.Entity;
				if (((previousValue != value) 
							|| (this._AspNetUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AspNetUser.Entity = null;
						previousValue.mstUsers.Remove(this);
					}
					this._AspNetUser.Entity = value;
					if ((value != null))
					{
						value.mstUsers.Add(this);
						this._AspUserId = value.Id;
					}
					else
					{
						this._AspUserId = default(string);
					}
					this.SendPropertyChanged("AspNetUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_mstAccounts(mstAccount entity)
		{
			this.SendPropertyChanging();
			entity.mstUser = this;
		}
		
		private void detach_mstAccounts(mstAccount entity)
		{
			this.SendPropertyChanging();
			entity.mstUser = null;
		}
		
		private void attach_mstAccounts1(mstAccount entity)
		{
			this.SendPropertyChanging();
			entity.mstUser1 = this;
		}
		
		private void detach_mstAccounts1(mstAccount entity)
		{
			this.SendPropertyChanging();
			entity.mstUser1 = null;
		}
		
		private void attach_mstApplicants(mstApplicant entity)
		{
			this.SendPropertyChanging();
			entity.mstUser = this;
		}
		
		private void detach_mstApplicants(mstApplicant entity)
		{
			this.SendPropertyChanging();
			entity.mstUser = null;
		}
		
		private void attach_mstApplicants1(mstApplicant entity)
		{
			this.SendPropertyChanging();
			entity.mstUser1 = this;
		}
		
		private void detach_mstApplicants1(mstApplicant entity)
		{
			this.SendPropertyChanging();
			entity.mstUser1 = null;
		}
		
		private void attach_mstAreas(mstArea entity)
		{
			this.SendPropertyChanging();
			entity.mstUser = this;
		}
		
		private void detach_mstAreas(mstArea entity)
		{
			this.SendPropertyChanging();
			entity.mstUser = null;
		}
		
		private void attach_mstAreas1(mstArea entity)
		{
			this.SendPropertyChanging();
			entity.mstUser1 = this;
		}
		
		private void detach_mstAreas1(mstArea entity)
		{
			this.SendPropertyChanging();
			entity.mstUser1 = null;
		}
		
		private void attach_mstCollectors(mstCollector entity)
		{
			this.SendPropertyChanging();
			entity.mstUser = this;
		}
		
		private void detach_mstCollectors(mstCollector entity)
		{
			this.SendPropertyChanging();
			entity.mstUser = null;
		}
		
		private void attach_mstCollectors1(mstCollector entity)
		{
			this.SendPropertyChanging();
			entity.mstUser1 = this;
		}
		
		private void detach_mstCollectors1(mstCollector entity)
		{
			this.SendPropertyChanging();
			entity.mstUser1 = null;
		}
		
		private void attach_mstCompanies(mstCompany entity)
		{
			this.SendPropertyChanging();
			entity.mstUser = this;
		}
		
		private void detach_mstCompanies(mstCompany entity)
		{
			this.SendPropertyChanging();
			entity.mstUser = null;
		}
		
		private void attach_mstCompanies1(mstCompany entity)
		{
			this.SendPropertyChanging();
			entity.mstUser1 = this;
		}
		
		private void detach_mstCompanies1(mstCompany entity)
		{
			this.SendPropertyChanging();
			entity.mstUser1 = null;
		}
		
		private void attach_mstRequirements(mstRequirement entity)
		{
			this.SendPropertyChanging();
			entity.mstUser = this;
		}
		
		private void detach_mstRequirements(mstRequirement entity)
		{
			this.SendPropertyChanging();
			entity.mstUser = null;
		}
		
		private void attach_mstRequirements1(mstRequirement entity)
		{
			this.SendPropertyChanging();
			entity.mstUser1 = this;
		}
		
		private void detach_mstRequirements1(mstRequirement entity)
		{
			this.SendPropertyChanging();
			entity.mstUser1 = null;
		}
		
		private void attach_trnDisbursements(trnDisbursement entity)
		{
			this.SendPropertyChanging();
			entity.mstUser = this;
		}
		
		private void detach_trnDisbursements(trnDisbursement entity)
		{
			this.SendPropertyChanging();
			entity.mstUser = null;
		}
		
		private void attach_trnDisbursements1(trnDisbursement entity)
		{
			this.SendPropertyChanging();
			entity.mstUser1 = this;
		}
		
		private void detach_trnDisbursements1(trnDisbursement entity)
		{
			this.SendPropertyChanging();
			entity.mstUser1 = null;
		}
		
		private void attach_trnDisbursements2(trnDisbursement entity)
		{
			this.SendPropertyChanging();
			entity.mstUser2 = this;
		}
		
		private void detach_trnDisbursements2(trnDisbursement entity)
		{
			this.SendPropertyChanging();
			entity.mstUser2 = null;
		}
		
		private void attach_trnLoanApplications(trnLoanApplication entity)
		{
			this.SendPropertyChanging();
			entity.mstUser = this;
		}
		
		private void detach_trnLoanApplications(trnLoanApplication entity)
		{
			this.SendPropertyChanging();
			entity.mstUser = null;
		}
		
		private void attach_trnLoanApplications1(trnLoanApplication entity)
		{
			this.SendPropertyChanging();
			entity.mstUser1 = this;
		}
		
		private void detach_trnLoanApplications1(trnLoanApplication entity)
		{
			this.SendPropertyChanging();
			entity.mstUser1 = null;
		}
		
		private void attach_trnLoanApplications2(trnLoanApplication entity)
		{
			this.SendPropertyChanging();
			entity.mstUser2 = this;
		}
		
		private void detach_trnLoanApplications2(trnLoanApplication entity)
		{
			this.SendPropertyChanging();
			entity.mstUser2 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.trnCollectionLogHistory")]
	public partial class trnCollectionLogHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _LoanId;
		
		private System.DateTime _CollectionDate;
		
		private decimal _CollectibleAmount;
		
		private decimal _PaidAmount;
		
		private bool _IsCleared;
		
		private bool _IsPenalty;
		
		private bool _IsOverdue;
		
		private bool _IsFullyPaid;
		
		private int _CollectorId;
		
		private EntityRef<mstCollector> _mstCollector;
		
		private EntityRef<trnLoanApplication> _trnLoanApplication;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnLoanIdChanging(int value);
    partial void OnLoanIdChanged();
    partial void OnCollectionDateChanging(System.DateTime value);
    partial void OnCollectionDateChanged();
    partial void OnCollectibleAmountChanging(decimal value);
    partial void OnCollectibleAmountChanged();
    partial void OnPaidAmountChanging(decimal value);
    partial void OnPaidAmountChanged();
    partial void OnIsClearedChanging(bool value);
    partial void OnIsClearedChanged();
    partial void OnIsPenaltyChanging(bool value);
    partial void OnIsPenaltyChanged();
    partial void OnIsOverdueChanging(bool value);
    partial void OnIsOverdueChanged();
    partial void OnIsFullyPaidChanging(bool value);
    partial void OnIsFullyPaidChanged();
    partial void OnCollectorIdChanging(int value);
    partial void OnCollectorIdChanged();
    #endregion
		
		public trnCollectionLogHistory()
		{
			this._mstCollector = default(EntityRef<mstCollector>);
			this._trnLoanApplication = default(EntityRef<trnLoanApplication>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanId", DbType="Int NOT NULL")]
		public int LoanId
		{
			get
			{
				return this._LoanId;
			}
			set
			{
				if ((this._LoanId != value))
				{
					if (this._trnLoanApplication.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLoanIdChanging(value);
					this.SendPropertyChanging();
					this._LoanId = value;
					this.SendPropertyChanged("LoanId");
					this.OnLoanIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CollectionDate", DbType="DateTime NOT NULL")]
		public System.DateTime CollectionDate
		{
			get
			{
				return this._CollectionDate;
			}
			set
			{
				if ((this._CollectionDate != value))
				{
					this.OnCollectionDateChanging(value);
					this.SendPropertyChanging();
					this._CollectionDate = value;
					this.SendPropertyChanged("CollectionDate");
					this.OnCollectionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CollectibleAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal CollectibleAmount
		{
			get
			{
				return this._CollectibleAmount;
			}
			set
			{
				if ((this._CollectibleAmount != value))
				{
					this.OnCollectibleAmountChanging(value);
					this.SendPropertyChanging();
					this._CollectibleAmount = value;
					this.SendPropertyChanged("CollectibleAmount");
					this.OnCollectibleAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaidAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal PaidAmount
		{
			get
			{
				return this._PaidAmount;
			}
			set
			{
				if ((this._PaidAmount != value))
				{
					this.OnPaidAmountChanging(value);
					this.SendPropertyChanging();
					this._PaidAmount = value;
					this.SendPropertyChanged("PaidAmount");
					this.OnPaidAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCleared", DbType="Bit NOT NULL")]
		public bool IsCleared
		{
			get
			{
				return this._IsCleared;
			}
			set
			{
				if ((this._IsCleared != value))
				{
					this.OnIsClearedChanging(value);
					this.SendPropertyChanging();
					this._IsCleared = value;
					this.SendPropertyChanged("IsCleared");
					this.OnIsClearedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPenalty", DbType="Bit NOT NULL")]
		public bool IsPenalty
		{
			get
			{
				return this._IsPenalty;
			}
			set
			{
				if ((this._IsPenalty != value))
				{
					this.OnIsPenaltyChanging(value);
					this.SendPropertyChanging();
					this._IsPenalty = value;
					this.SendPropertyChanged("IsPenalty");
					this.OnIsPenaltyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOverdue", DbType="Bit NOT NULL")]
		public bool IsOverdue
		{
			get
			{
				return this._IsOverdue;
			}
			set
			{
				if ((this._IsOverdue != value))
				{
					this.OnIsOverdueChanging(value);
					this.SendPropertyChanging();
					this._IsOverdue = value;
					this.SendPropertyChanged("IsOverdue");
					this.OnIsOverdueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFullyPaid", DbType="Bit NOT NULL")]
		public bool IsFullyPaid
		{
			get
			{
				return this._IsFullyPaid;
			}
			set
			{
				if ((this._IsFullyPaid != value))
				{
					this.OnIsFullyPaidChanging(value);
					this.SendPropertyChanging();
					this._IsFullyPaid = value;
					this.SendPropertyChanged("IsFullyPaid");
					this.OnIsFullyPaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CollectorId", DbType="Int NOT NULL")]
		public int CollectorId
		{
			get
			{
				return this._CollectorId;
			}
			set
			{
				if ((this._CollectorId != value))
				{
					if (this._mstCollector.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCollectorIdChanging(value);
					this.SendPropertyChanging();
					this._CollectorId = value;
					this.SendPropertyChanged("CollectorId");
					this.OnCollectorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstCollector_trnCollectionLogHistory", Storage="_mstCollector", ThisKey="CollectorId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public mstCollector mstCollector
		{
			get
			{
				return this._mstCollector.Entity;
			}
			set
			{
				mstCollector previousValue = this._mstCollector.Entity;
				if (((previousValue != value) 
							|| (this._mstCollector.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstCollector.Entity = null;
						previousValue.trnCollectionLogHistories.Remove(this);
					}
					this._mstCollector.Entity = value;
					if ((value != null))
					{
						value.trnCollectionLogHistories.Add(this);
						this._CollectorId = value.Id;
					}
					else
					{
						this._CollectorId = default(int);
					}
					this.SendPropertyChanged("mstCollector");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="trnLoanApplication_trnCollectionLogHistory", Storage="_trnLoanApplication", ThisKey="LoanId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public trnLoanApplication trnLoanApplication
		{
			get
			{
				return this._trnLoanApplication.Entity;
			}
			set
			{
				trnLoanApplication previousValue = this._trnLoanApplication.Entity;
				if (((previousValue != value) 
							|| (this._trnLoanApplication.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._trnLoanApplication.Entity = null;
						previousValue.trnCollectionLogHistories.Remove(this);
					}
					this._trnLoanApplication.Entity = value;
					if ((value != null))
					{
						value.trnCollectionLogHistories.Add(this);
						this._LoanId = value.Id;
					}
					else
					{
						this._LoanId = default(int);
					}
					this.SendPropertyChanged("trnLoanApplication");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.trnDisbursement")]
	public partial class trnDisbursement : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _DisbursementNumber;
		
		private System.DateTime _DisbursementDate;
		
		private int _AccountId;
		
		private string _Payee;
		
		private string _Particulars;
		
		private decimal _DisburseAmount;
		
		private int _PreparedByUserId;
		
		private bool _IsLocked;
		
		private int _CreatedByUserId;
		
		private System.DateTime _CreatedDateTime;
		
		private int _UpdatedByUserId;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntityRef<mstAccount> _mstAccount;
		
		private EntityRef<mstUser> _mstUser;
		
		private EntityRef<mstUser> _mstUser1;
		
		private EntityRef<mstUser> _mstUser2;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDisbursementNumberChanging(string value);
    partial void OnDisbursementNumberChanged();
    partial void OnDisbursementDateChanging(System.DateTime value);
    partial void OnDisbursementDateChanged();
    partial void OnAccountIdChanging(int value);
    partial void OnAccountIdChanged();
    partial void OnPayeeChanging(string value);
    partial void OnPayeeChanged();
    partial void OnParticularsChanging(string value);
    partial void OnParticularsChanged();
    partial void OnDisburseAmountChanging(decimal value);
    partial void OnDisburseAmountChanged();
    partial void OnPreparedByUserIdChanging(int value);
    partial void OnPreparedByUserIdChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByUserIdChanging(int value);
    partial void OnCreatedByUserIdChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByUserIdChanging(int value);
    partial void OnUpdatedByUserIdChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public trnDisbursement()
		{
			this._mstAccount = default(EntityRef<mstAccount>);
			this._mstUser = default(EntityRef<mstUser>);
			this._mstUser1 = default(EntityRef<mstUser>);
			this._mstUser2 = default(EntityRef<mstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisbursementNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DisbursementNumber
		{
			get
			{
				return this._DisbursementNumber;
			}
			set
			{
				if ((this._DisbursementNumber != value))
				{
					this.OnDisbursementNumberChanging(value);
					this.SendPropertyChanging();
					this._DisbursementNumber = value;
					this.SendPropertyChanged("DisbursementNumber");
					this.OnDisbursementNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisbursementDate", DbType="DateTime NOT NULL")]
		public System.DateTime DisbursementDate
		{
			get
			{
				return this._DisbursementDate;
			}
			set
			{
				if ((this._DisbursementDate != value))
				{
					this.OnDisbursementDateChanging(value);
					this.SendPropertyChanging();
					this._DisbursementDate = value;
					this.SendPropertyChanged("DisbursementDate");
					this.OnDisbursementDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="Int NOT NULL")]
		public int AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					if (this._mstAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Payee", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Payee
		{
			get
			{
				return this._Payee;
			}
			set
			{
				if ((this._Payee != value))
				{
					this.OnPayeeChanging(value);
					this.SendPropertyChanging();
					this._Payee = value;
					this.SendPropertyChanged("Payee");
					this.OnPayeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Particulars", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Particulars
		{
			get
			{
				return this._Particulars;
			}
			set
			{
				if ((this._Particulars != value))
				{
					this.OnParticularsChanging(value);
					this.SendPropertyChanging();
					this._Particulars = value;
					this.SendPropertyChanged("Particulars");
					this.OnParticularsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisburseAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal DisburseAmount
		{
			get
			{
				return this._DisburseAmount;
			}
			set
			{
				if ((this._DisburseAmount != value))
				{
					this.OnDisburseAmountChanging(value);
					this.SendPropertyChanging();
					this._DisburseAmount = value;
					this.SendPropertyChanged("DisburseAmount");
					this.OnDisburseAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreparedByUserId", DbType="Int NOT NULL")]
		public int PreparedByUserId
		{
			get
			{
				return this._PreparedByUserId;
			}
			set
			{
				if ((this._PreparedByUserId != value))
				{
					if (this._mstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPreparedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._PreparedByUserId = value;
					this.SendPropertyChanged("PreparedByUserId");
					this.OnPreparedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserId", DbType="Int NOT NULL")]
		public int CreatedByUserId
		{
			get
			{
				return this._CreatedByUserId;
			}
			set
			{
				if ((this._CreatedByUserId != value))
				{
					if (this._mstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserId = value;
					this.SendPropertyChanged("CreatedByUserId");
					this.OnCreatedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedByUserId", DbType="Int NOT NULL")]
		public int UpdatedByUserId
		{
			get
			{
				return this._UpdatedByUserId;
			}
			set
			{
				if ((this._UpdatedByUserId != value))
				{
					if (this._mstUser2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedByUserId = value;
					this.SendPropertyChanged("UpdatedByUserId");
					this.OnUpdatedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstAccount_trnDisbursement", Storage="_mstAccount", ThisKey="AccountId", OtherKey="Id", IsForeignKey=true)]
		public mstAccount mstAccount
		{
			get
			{
				return this._mstAccount.Entity;
			}
			set
			{
				mstAccount previousValue = this._mstAccount.Entity;
				if (((previousValue != value) 
							|| (this._mstAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstAccount.Entity = null;
						previousValue.trnDisbursements.Remove(this);
					}
					this._mstAccount.Entity = value;
					if ((value != null))
					{
						value.trnDisbursements.Add(this);
						this._AccountId = value.Id;
					}
					else
					{
						this._AccountId = default(int);
					}
					this.SendPropertyChanged("mstAccount");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUser_trnDisbursement", Storage="_mstUser", ThisKey="PreparedByUserId", OtherKey="Id", IsForeignKey=true)]
		public mstUser mstUser
		{
			get
			{
				return this._mstUser.Entity;
			}
			set
			{
				mstUser previousValue = this._mstUser.Entity;
				if (((previousValue != value) 
							|| (this._mstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstUser.Entity = null;
						previousValue.trnDisbursements.Remove(this);
					}
					this._mstUser.Entity = value;
					if ((value != null))
					{
						value.trnDisbursements.Add(this);
						this._PreparedByUserId = value.Id;
					}
					else
					{
						this._PreparedByUserId = default(int);
					}
					this.SendPropertyChanged("mstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUser_trnDisbursement1", Storage="_mstUser1", ThisKey="CreatedByUserId", OtherKey="Id", IsForeignKey=true)]
		public mstUser mstUser1
		{
			get
			{
				return this._mstUser1.Entity;
			}
			set
			{
				mstUser previousValue = this._mstUser1.Entity;
				if (((previousValue != value) 
							|| (this._mstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstUser1.Entity = null;
						previousValue.trnDisbursements1.Remove(this);
					}
					this._mstUser1.Entity = value;
					if ((value != null))
					{
						value.trnDisbursements1.Add(this);
						this._CreatedByUserId = value.Id;
					}
					else
					{
						this._CreatedByUserId = default(int);
					}
					this.SendPropertyChanged("mstUser1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUser_trnDisbursement2", Storage="_mstUser2", ThisKey="UpdatedByUserId", OtherKey="Id", IsForeignKey=true)]
		public mstUser mstUser2
		{
			get
			{
				return this._mstUser2.Entity;
			}
			set
			{
				mstUser previousValue = this._mstUser2.Entity;
				if (((previousValue != value) 
							|| (this._mstUser2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstUser2.Entity = null;
						previousValue.trnDisbursements2.Remove(this);
					}
					this._mstUser2.Entity = value;
					if ((value != null))
					{
						value.trnDisbursements2.Add(this);
						this._UpdatedByUserId = value.Id;
					}
					else
					{
						this._UpdatedByUserId = default(int);
					}
					this.SendPropertyChanged("mstUser2");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.trnJournal")]
	public partial class trnJournal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.DateTime _JournalDate;
		
		private int _AccountId;
		
		private string _Particulars;
		
		private decimal _ReleasedAmount;
		
		private decimal _ReceivedAmount;
		
		private string _DocumentReference;
		
		private System.Nullable<int> _LoanId;
		
		private System.Nullable<int> _CollectionId;
		
		private System.Nullable<int> _DisbursementId;
		
		private EntityRef<mstAccount> _mstAccount;
		
		private EntityRef<trnLoanApplication> _trnLoanApplication;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnJournalDateChanging(System.DateTime value);
    partial void OnJournalDateChanged();
    partial void OnAccountIdChanging(int value);
    partial void OnAccountIdChanged();
    partial void OnParticularsChanging(string value);
    partial void OnParticularsChanged();
    partial void OnReleasedAmountChanging(decimal value);
    partial void OnReleasedAmountChanged();
    partial void OnReceivedAmountChanging(decimal value);
    partial void OnReceivedAmountChanged();
    partial void OnDocumentReferenceChanging(string value);
    partial void OnDocumentReferenceChanged();
    partial void OnLoanIdChanging(System.Nullable<int> value);
    partial void OnLoanIdChanged();
    partial void OnCollectionIdChanging(System.Nullable<int> value);
    partial void OnCollectionIdChanged();
    partial void OnDisbursementIdChanging(System.Nullable<int> value);
    partial void OnDisbursementIdChanged();
    #endregion
		
		public trnJournal()
		{
			this._mstAccount = default(EntityRef<mstAccount>);
			this._trnLoanApplication = default(EntityRef<trnLoanApplication>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JournalDate", DbType="DateTime NOT NULL")]
		public System.DateTime JournalDate
		{
			get
			{
				return this._JournalDate;
			}
			set
			{
				if ((this._JournalDate != value))
				{
					this.OnJournalDateChanging(value);
					this.SendPropertyChanging();
					this._JournalDate = value;
					this.SendPropertyChanged("JournalDate");
					this.OnJournalDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="Int NOT NULL")]
		public int AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					if (this._mstAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Particulars", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Particulars
		{
			get
			{
				return this._Particulars;
			}
			set
			{
				if ((this._Particulars != value))
				{
					this.OnParticularsChanging(value);
					this.SendPropertyChanging();
					this._Particulars = value;
					this.SendPropertyChanged("Particulars");
					this.OnParticularsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReleasedAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal ReleasedAmount
		{
			get
			{
				return this._ReleasedAmount;
			}
			set
			{
				if ((this._ReleasedAmount != value))
				{
					this.OnReleasedAmountChanging(value);
					this.SendPropertyChanging();
					this._ReleasedAmount = value;
					this.SendPropertyChanged("ReleasedAmount");
					this.OnReleasedAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceivedAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal ReceivedAmount
		{
			get
			{
				return this._ReceivedAmount;
			}
			set
			{
				if ((this._ReceivedAmount != value))
				{
					this.OnReceivedAmountChanging(value);
					this.SendPropertyChanging();
					this._ReceivedAmount = value;
					this.SendPropertyChanged("ReceivedAmount");
					this.OnReceivedAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentReference", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DocumentReference
		{
			get
			{
				return this._DocumentReference;
			}
			set
			{
				if ((this._DocumentReference != value))
				{
					this.OnDocumentReferenceChanging(value);
					this.SendPropertyChanging();
					this._DocumentReference = value;
					this.SendPropertyChanged("DocumentReference");
					this.OnDocumentReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanId", DbType="Int")]
		public System.Nullable<int> LoanId
		{
			get
			{
				return this._LoanId;
			}
			set
			{
				if ((this._LoanId != value))
				{
					if (this._trnLoanApplication.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLoanIdChanging(value);
					this.SendPropertyChanging();
					this._LoanId = value;
					this.SendPropertyChanged("LoanId");
					this.OnLoanIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CollectionId", DbType="Int")]
		public System.Nullable<int> CollectionId
		{
			get
			{
				return this._CollectionId;
			}
			set
			{
				if ((this._CollectionId != value))
				{
					this.OnCollectionIdChanging(value);
					this.SendPropertyChanging();
					this._CollectionId = value;
					this.SendPropertyChanged("CollectionId");
					this.OnCollectionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisbursementId", DbType="Int")]
		public System.Nullable<int> DisbursementId
		{
			get
			{
				return this._DisbursementId;
			}
			set
			{
				if ((this._DisbursementId != value))
				{
					this.OnDisbursementIdChanging(value);
					this.SendPropertyChanging();
					this._DisbursementId = value;
					this.SendPropertyChanged("DisbursementId");
					this.OnDisbursementIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstAccount_trnJournal", Storage="_mstAccount", ThisKey="AccountId", OtherKey="Id", IsForeignKey=true)]
		public mstAccount mstAccount
		{
			get
			{
				return this._mstAccount.Entity;
			}
			set
			{
				mstAccount previousValue = this._mstAccount.Entity;
				if (((previousValue != value) 
							|| (this._mstAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstAccount.Entity = null;
						previousValue.trnJournals.Remove(this);
					}
					this._mstAccount.Entity = value;
					if ((value != null))
					{
						value.trnJournals.Add(this);
						this._AccountId = value.Id;
					}
					else
					{
						this._AccountId = default(int);
					}
					this.SendPropertyChanged("mstAccount");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="trnLoanApplication_trnJournal", Storage="_trnLoanApplication", ThisKey="LoanId", OtherKey="Id", IsForeignKey=true)]
		public trnLoanApplication trnLoanApplication
		{
			get
			{
				return this._trnLoanApplication.Entity;
			}
			set
			{
				trnLoanApplication previousValue = this._trnLoanApplication.Entity;
				if (((previousValue != value) 
							|| (this._trnLoanApplication.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._trnLoanApplication.Entity = null;
						previousValue.trnJournals.Remove(this);
					}
					this._trnLoanApplication.Entity = value;
					if ((value != null))
					{
						value.trnJournals.Add(this);
						this._LoanId = value.Id;
					}
					else
					{
						this._LoanId = default(Nullable<int>);
					}
					this.SendPropertyChanged("trnLoanApplication");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.trnLoanApplication")]
	public partial class trnLoanApplication : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _LoanNumber;
		
		private System.DateTime _LoanDate;
		
		private System.DateTime _MaturityDate;
		
		private int _AccountId;
		
		private int _ApplicantId;
		
		private string _Particulars;
		
		private int _PreparedByUserId;
		
		private decimal _PrincipalAmount;
		
		private decimal _ProcessingFeeAmount;
		
		private decimal _PassbookAmount;
		
		private decimal _BalanceAmount;
		
		private decimal _PenaltyAmount;
		
		private decimal _LateIntAmount;
		
		private decimal _AdvanceAmount;
		
		private decimal _RequirementsAmount;
		
		private decimal _InsuranceIPIorPPIAmount;
		
		private decimal _NetAmount;
		
		private bool _IsLocked;
		
		private int _CreatedByUserId;
		
		private System.DateTime _CreatedDateTime;
		
		private int _UpdatedByUserId;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntitySet<trnLoanLogHistory> _trnLoanLogHistories;
		
		private EntitySet<trnCollectionLogHistory> _trnCollectionLogHistories;
		
		private EntitySet<trnJournal> _trnJournals;
		
		private EntitySet<trnLoanApplicationRequirement> _trnLoanApplicationRequirements;
		
		private EntityRef<mstAccount> _mstAccount;
		
		private EntityRef<mstApplicant> _mstApplicant;
		
		private EntityRef<mstUser> _mstUser;
		
		private EntityRef<mstUser> _mstUser1;
		
		private EntityRef<mstUser> _mstUser2;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnLoanNumberChanging(string value);
    partial void OnLoanNumberChanged();
    partial void OnLoanDateChanging(System.DateTime value);
    partial void OnLoanDateChanged();
    partial void OnMaturityDateChanging(System.DateTime value);
    partial void OnMaturityDateChanged();
    partial void OnAccountIdChanging(int value);
    partial void OnAccountIdChanged();
    partial void OnApplicantIdChanging(int value);
    partial void OnApplicantIdChanged();
    partial void OnParticularsChanging(string value);
    partial void OnParticularsChanged();
    partial void OnPreparedByUserIdChanging(int value);
    partial void OnPreparedByUserIdChanged();
    partial void OnPrincipalAmountChanging(decimal value);
    partial void OnPrincipalAmountChanged();
    partial void OnProcessingFeeAmountChanging(decimal value);
    partial void OnProcessingFeeAmountChanged();
    partial void OnPassbookAmountChanging(decimal value);
    partial void OnPassbookAmountChanged();
    partial void OnBalanceAmountChanging(decimal value);
    partial void OnBalanceAmountChanged();
    partial void OnPenaltyAmountChanging(decimal value);
    partial void OnPenaltyAmountChanged();
    partial void OnLateIntAmountChanging(decimal value);
    partial void OnLateIntAmountChanged();
    partial void OnAdvanceAmountChanging(decimal value);
    partial void OnAdvanceAmountChanged();
    partial void OnRequirementsAmountChanging(decimal value);
    partial void OnRequirementsAmountChanged();
    partial void OnInsuranceIPIorPPIAmountChanging(decimal value);
    partial void OnInsuranceIPIorPPIAmountChanged();
    partial void OnNetAmountChanging(decimal value);
    partial void OnNetAmountChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByUserIdChanging(int value);
    partial void OnCreatedByUserIdChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByUserIdChanging(int value);
    partial void OnUpdatedByUserIdChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public trnLoanApplication()
		{
			this._trnLoanLogHistories = new EntitySet<trnLoanLogHistory>(new Action<trnLoanLogHistory>(this.attach_trnLoanLogHistories), new Action<trnLoanLogHistory>(this.detach_trnLoanLogHistories));
			this._trnCollectionLogHistories = new EntitySet<trnCollectionLogHistory>(new Action<trnCollectionLogHistory>(this.attach_trnCollectionLogHistories), new Action<trnCollectionLogHistory>(this.detach_trnCollectionLogHistories));
			this._trnJournals = new EntitySet<trnJournal>(new Action<trnJournal>(this.attach_trnJournals), new Action<trnJournal>(this.detach_trnJournals));
			this._trnLoanApplicationRequirements = new EntitySet<trnLoanApplicationRequirement>(new Action<trnLoanApplicationRequirement>(this.attach_trnLoanApplicationRequirements), new Action<trnLoanApplicationRequirement>(this.detach_trnLoanApplicationRequirements));
			this._mstAccount = default(EntityRef<mstAccount>);
			this._mstApplicant = default(EntityRef<mstApplicant>);
			this._mstUser = default(EntityRef<mstUser>);
			this._mstUser1 = default(EntityRef<mstUser>);
			this._mstUser2 = default(EntityRef<mstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LoanNumber
		{
			get
			{
				return this._LoanNumber;
			}
			set
			{
				if ((this._LoanNumber != value))
				{
					this.OnLoanNumberChanging(value);
					this.SendPropertyChanging();
					this._LoanNumber = value;
					this.SendPropertyChanged("LoanNumber");
					this.OnLoanNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanDate", DbType="DateTime NOT NULL")]
		public System.DateTime LoanDate
		{
			get
			{
				return this._LoanDate;
			}
			set
			{
				if ((this._LoanDate != value))
				{
					this.OnLoanDateChanging(value);
					this.SendPropertyChanging();
					this._LoanDate = value;
					this.SendPropertyChanged("LoanDate");
					this.OnLoanDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaturityDate", DbType="DateTime NOT NULL")]
		public System.DateTime MaturityDate
		{
			get
			{
				return this._MaturityDate;
			}
			set
			{
				if ((this._MaturityDate != value))
				{
					this.OnMaturityDateChanging(value);
					this.SendPropertyChanging();
					this._MaturityDate = value;
					this.SendPropertyChanged("MaturityDate");
					this.OnMaturityDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="Int NOT NULL")]
		public int AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					if (this._mstAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicantId", DbType="Int NOT NULL")]
		public int ApplicantId
		{
			get
			{
				return this._ApplicantId;
			}
			set
			{
				if ((this._ApplicantId != value))
				{
					if (this._mstApplicant.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicantIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicantId = value;
					this.SendPropertyChanged("ApplicantId");
					this.OnApplicantIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Particulars", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Particulars
		{
			get
			{
				return this._Particulars;
			}
			set
			{
				if ((this._Particulars != value))
				{
					this.OnParticularsChanging(value);
					this.SendPropertyChanging();
					this._Particulars = value;
					this.SendPropertyChanged("Particulars");
					this.OnParticularsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreparedByUserId", DbType="Int NOT NULL")]
		public int PreparedByUserId
		{
			get
			{
				return this._PreparedByUserId;
			}
			set
			{
				if ((this._PreparedByUserId != value))
				{
					if (this._mstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPreparedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._PreparedByUserId = value;
					this.SendPropertyChanged("PreparedByUserId");
					this.OnPreparedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrincipalAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal PrincipalAmount
		{
			get
			{
				return this._PrincipalAmount;
			}
			set
			{
				if ((this._PrincipalAmount != value))
				{
					this.OnPrincipalAmountChanging(value);
					this.SendPropertyChanging();
					this._PrincipalAmount = value;
					this.SendPropertyChanged("PrincipalAmount");
					this.OnPrincipalAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessingFeeAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal ProcessingFeeAmount
		{
			get
			{
				return this._ProcessingFeeAmount;
			}
			set
			{
				if ((this._ProcessingFeeAmount != value))
				{
					this.OnProcessingFeeAmountChanging(value);
					this.SendPropertyChanging();
					this._ProcessingFeeAmount = value;
					this.SendPropertyChanged("ProcessingFeeAmount");
					this.OnProcessingFeeAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassbookAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal PassbookAmount
		{
			get
			{
				return this._PassbookAmount;
			}
			set
			{
				if ((this._PassbookAmount != value))
				{
					this.OnPassbookAmountChanging(value);
					this.SendPropertyChanging();
					this._PassbookAmount = value;
					this.SendPropertyChanged("PassbookAmount");
					this.OnPassbookAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BalanceAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal BalanceAmount
		{
			get
			{
				return this._BalanceAmount;
			}
			set
			{
				if ((this._BalanceAmount != value))
				{
					this.OnBalanceAmountChanging(value);
					this.SendPropertyChanging();
					this._BalanceAmount = value;
					this.SendPropertyChanged("BalanceAmount");
					this.OnBalanceAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PenaltyAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal PenaltyAmount
		{
			get
			{
				return this._PenaltyAmount;
			}
			set
			{
				if ((this._PenaltyAmount != value))
				{
					this.OnPenaltyAmountChanging(value);
					this.SendPropertyChanging();
					this._PenaltyAmount = value;
					this.SendPropertyChanged("PenaltyAmount");
					this.OnPenaltyAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LateIntAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal LateIntAmount
		{
			get
			{
				return this._LateIntAmount;
			}
			set
			{
				if ((this._LateIntAmount != value))
				{
					this.OnLateIntAmountChanging(value);
					this.SendPropertyChanging();
					this._LateIntAmount = value;
					this.SendPropertyChanged("LateIntAmount");
					this.OnLateIntAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvanceAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal AdvanceAmount
		{
			get
			{
				return this._AdvanceAmount;
			}
			set
			{
				if ((this._AdvanceAmount != value))
				{
					this.OnAdvanceAmountChanging(value);
					this.SendPropertyChanging();
					this._AdvanceAmount = value;
					this.SendPropertyChanged("AdvanceAmount");
					this.OnAdvanceAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequirementsAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal RequirementsAmount
		{
			get
			{
				return this._RequirementsAmount;
			}
			set
			{
				if ((this._RequirementsAmount != value))
				{
					this.OnRequirementsAmountChanging(value);
					this.SendPropertyChanging();
					this._RequirementsAmount = value;
					this.SendPropertyChanged("RequirementsAmount");
					this.OnRequirementsAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsuranceIPIorPPIAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal InsuranceIPIorPPIAmount
		{
			get
			{
				return this._InsuranceIPIorPPIAmount;
			}
			set
			{
				if ((this._InsuranceIPIorPPIAmount != value))
				{
					this.OnInsuranceIPIorPPIAmountChanging(value);
					this.SendPropertyChanging();
					this._InsuranceIPIorPPIAmount = value;
					this.SendPropertyChanged("InsuranceIPIorPPIAmount");
					this.OnInsuranceIPIorPPIAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NetAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal NetAmount
		{
			get
			{
				return this._NetAmount;
			}
			set
			{
				if ((this._NetAmount != value))
				{
					this.OnNetAmountChanging(value);
					this.SendPropertyChanging();
					this._NetAmount = value;
					this.SendPropertyChanged("NetAmount");
					this.OnNetAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserId", DbType="Int NOT NULL")]
		public int CreatedByUserId
		{
			get
			{
				return this._CreatedByUserId;
			}
			set
			{
				if ((this._CreatedByUserId != value))
				{
					if (this._mstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserId = value;
					this.SendPropertyChanged("CreatedByUserId");
					this.OnCreatedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedByUserId", DbType="Int NOT NULL")]
		public int UpdatedByUserId
		{
			get
			{
				return this._UpdatedByUserId;
			}
			set
			{
				if ((this._UpdatedByUserId != value))
				{
					if (this._mstUser2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedByUserId = value;
					this.SendPropertyChanged("UpdatedByUserId");
					this.OnUpdatedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="trnLoanApplication_trnLoanLogHistory", Storage="_trnLoanLogHistories", ThisKey="Id", OtherKey="LoanId")]
		public EntitySet<trnLoanLogHistory> trnLoanLogHistories
		{
			get
			{
				return this._trnLoanLogHistories;
			}
			set
			{
				this._trnLoanLogHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="trnLoanApplication_trnCollectionLogHistory", Storage="_trnCollectionLogHistories", ThisKey="Id", OtherKey="LoanId")]
		public EntitySet<trnCollectionLogHistory> trnCollectionLogHistories
		{
			get
			{
				return this._trnCollectionLogHistories;
			}
			set
			{
				this._trnCollectionLogHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="trnLoanApplication_trnJournal", Storage="_trnJournals", ThisKey="Id", OtherKey="LoanId")]
		public EntitySet<trnJournal> trnJournals
		{
			get
			{
				return this._trnJournals;
			}
			set
			{
				this._trnJournals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="trnLoanApplication_trnLoanApplicationRequirement", Storage="_trnLoanApplicationRequirements", ThisKey="Id", OtherKey="LoanId")]
		public EntitySet<trnLoanApplicationRequirement> trnLoanApplicationRequirements
		{
			get
			{
				return this._trnLoanApplicationRequirements;
			}
			set
			{
				this._trnLoanApplicationRequirements.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstAccount_trnLoanApplication", Storage="_mstAccount", ThisKey="AccountId", OtherKey="Id", IsForeignKey=true)]
		public mstAccount mstAccount
		{
			get
			{
				return this._mstAccount.Entity;
			}
			set
			{
				mstAccount previousValue = this._mstAccount.Entity;
				if (((previousValue != value) 
							|| (this._mstAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstAccount.Entity = null;
						previousValue.trnLoanApplications.Remove(this);
					}
					this._mstAccount.Entity = value;
					if ((value != null))
					{
						value.trnLoanApplications.Add(this);
						this._AccountId = value.Id;
					}
					else
					{
						this._AccountId = default(int);
					}
					this.SendPropertyChanged("mstAccount");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstApplicant_trnLoanApplication", Storage="_mstApplicant", ThisKey="ApplicantId", OtherKey="Id", IsForeignKey=true)]
		public mstApplicant mstApplicant
		{
			get
			{
				return this._mstApplicant.Entity;
			}
			set
			{
				mstApplicant previousValue = this._mstApplicant.Entity;
				if (((previousValue != value) 
							|| (this._mstApplicant.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstApplicant.Entity = null;
						previousValue.trnLoanApplications.Remove(this);
					}
					this._mstApplicant.Entity = value;
					if ((value != null))
					{
						value.trnLoanApplications.Add(this);
						this._ApplicantId = value.Id;
					}
					else
					{
						this._ApplicantId = default(int);
					}
					this.SendPropertyChanged("mstApplicant");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUser_trnLoanApplication", Storage="_mstUser", ThisKey="PreparedByUserId", OtherKey="Id", IsForeignKey=true)]
		public mstUser mstUser
		{
			get
			{
				return this._mstUser.Entity;
			}
			set
			{
				mstUser previousValue = this._mstUser.Entity;
				if (((previousValue != value) 
							|| (this._mstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstUser.Entity = null;
						previousValue.trnLoanApplications.Remove(this);
					}
					this._mstUser.Entity = value;
					if ((value != null))
					{
						value.trnLoanApplications.Add(this);
						this._PreparedByUserId = value.Id;
					}
					else
					{
						this._PreparedByUserId = default(int);
					}
					this.SendPropertyChanged("mstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUser_trnLoanApplication1", Storage="_mstUser1", ThisKey="CreatedByUserId", OtherKey="Id", IsForeignKey=true)]
		public mstUser mstUser1
		{
			get
			{
				return this._mstUser1.Entity;
			}
			set
			{
				mstUser previousValue = this._mstUser1.Entity;
				if (((previousValue != value) 
							|| (this._mstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstUser1.Entity = null;
						previousValue.trnLoanApplications1.Remove(this);
					}
					this._mstUser1.Entity = value;
					if ((value != null))
					{
						value.trnLoanApplications1.Add(this);
						this._CreatedByUserId = value.Id;
					}
					else
					{
						this._CreatedByUserId = default(int);
					}
					this.SendPropertyChanged("mstUser1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUser_trnLoanApplication2", Storage="_mstUser2", ThisKey="UpdatedByUserId", OtherKey="Id", IsForeignKey=true)]
		public mstUser mstUser2
		{
			get
			{
				return this._mstUser2.Entity;
			}
			set
			{
				mstUser previousValue = this._mstUser2.Entity;
				if (((previousValue != value) 
							|| (this._mstUser2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstUser2.Entity = null;
						previousValue.trnLoanApplications2.Remove(this);
					}
					this._mstUser2.Entity = value;
					if ((value != null))
					{
						value.trnLoanApplications2.Add(this);
						this._UpdatedByUserId = value.Id;
					}
					else
					{
						this._UpdatedByUserId = default(int);
					}
					this.SendPropertyChanged("mstUser2");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_trnLoanLogHistories(trnLoanLogHistory entity)
		{
			this.SendPropertyChanging();
			entity.trnLoanApplication = this;
		}
		
		private void detach_trnLoanLogHistories(trnLoanLogHistory entity)
		{
			this.SendPropertyChanging();
			entity.trnLoanApplication = null;
		}
		
		private void attach_trnCollectionLogHistories(trnCollectionLogHistory entity)
		{
			this.SendPropertyChanging();
			entity.trnLoanApplication = this;
		}
		
		private void detach_trnCollectionLogHistories(trnCollectionLogHistory entity)
		{
			this.SendPropertyChanging();
			entity.trnLoanApplication = null;
		}
		
		private void attach_trnJournals(trnJournal entity)
		{
			this.SendPropertyChanging();
			entity.trnLoanApplication = this;
		}
		
		private void detach_trnJournals(trnJournal entity)
		{
			this.SendPropertyChanging();
			entity.trnLoanApplication = null;
		}
		
		private void attach_trnLoanApplicationRequirements(trnLoanApplicationRequirement entity)
		{
			this.SendPropertyChanging();
			entity.trnLoanApplication = this;
		}
		
		private void detach_trnLoanApplicationRequirements(trnLoanApplicationRequirement entity)
		{
			this.SendPropertyChanging();
			entity.trnLoanApplication = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.trnLoanApplicationCollateral")]
	public partial class trnLoanApplicationCollateral : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _LoanId;
		
		private string _Type;
		
		private string _Brand;
		
		private string _ModelNumber;
		
		private string _SerialNumber;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnLoanIdChanging(int value);
    partial void OnLoanIdChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnBrandChanging(string value);
    partial void OnBrandChanged();
    partial void OnModelNumberChanging(string value);
    partial void OnModelNumberChanged();
    partial void OnSerialNumberChanging(string value);
    partial void OnSerialNumberChanged();
    #endregion
		
		public trnLoanApplicationCollateral()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanId", DbType="Int NOT NULL")]
		public int LoanId
		{
			get
			{
				return this._LoanId;
			}
			set
			{
				if ((this._LoanId != value))
				{
					this.OnLoanIdChanging(value);
					this.SendPropertyChanging();
					this._LoanId = value;
					this.SendPropertyChanged("LoanId");
					this.OnLoanIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Brand", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Brand
		{
			get
			{
				return this._Brand;
			}
			set
			{
				if ((this._Brand != value))
				{
					this.OnBrandChanging(value);
					this.SendPropertyChanging();
					this._Brand = value;
					this.SendPropertyChanged("Brand");
					this.OnBrandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModelNumber", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ModelNumber
		{
			get
			{
				return this._ModelNumber;
			}
			set
			{
				if ((this._ModelNumber != value))
				{
					this.OnModelNumberChanging(value);
					this.SendPropertyChanging();
					this._ModelNumber = value;
					this.SendPropertyChanged("ModelNumber");
					this.OnModelNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SerialNumber", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string SerialNumber
		{
			get
			{
				return this._SerialNumber;
			}
			set
			{
				if ((this._SerialNumber != value))
				{
					this.OnSerialNumberChanging(value);
					this.SendPropertyChanging();
					this._SerialNumber = value;
					this.SendPropertyChanged("SerialNumber");
					this.OnSerialNumberChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.trnLoanApplicationRequirements")]
	public partial class trnLoanApplicationRequirement : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _LoanId;
		
		private int _RequirementId;
		
		private string _Note;
		
		private EntityRef<mstRequirement> _mstRequirement;
		
		private EntityRef<trnLoanApplication> _trnLoanApplication;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnLoanIdChanging(int value);
    partial void OnLoanIdChanged();
    partial void OnRequirementIdChanging(int value);
    partial void OnRequirementIdChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    #endregion
		
		public trnLoanApplicationRequirement()
		{
			this._mstRequirement = default(EntityRef<mstRequirement>);
			this._trnLoanApplication = default(EntityRef<trnLoanApplication>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanId", DbType="Int NOT NULL")]
		public int LoanId
		{
			get
			{
				return this._LoanId;
			}
			set
			{
				if ((this._LoanId != value))
				{
					if (this._trnLoanApplication.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLoanIdChanging(value);
					this.SendPropertyChanging();
					this._LoanId = value;
					this.SendPropertyChanged("LoanId");
					this.OnLoanIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequirementId", DbType="Int NOT NULL")]
		public int RequirementId
		{
			get
			{
				return this._RequirementId;
			}
			set
			{
				if ((this._RequirementId != value))
				{
					if (this._mstRequirement.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequirementIdChanging(value);
					this.SendPropertyChanging();
					this._RequirementId = value;
					this.SendPropertyChanged("RequirementId");
					this.OnRequirementIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstRequirement_trnLoanApplicationRequirement", Storage="_mstRequirement", ThisKey="RequirementId", OtherKey="Id", IsForeignKey=true)]
		public mstRequirement mstRequirement
		{
			get
			{
				return this._mstRequirement.Entity;
			}
			set
			{
				mstRequirement previousValue = this._mstRequirement.Entity;
				if (((previousValue != value) 
							|| (this._mstRequirement.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstRequirement.Entity = null;
						previousValue.trnLoanApplicationRequirements.Remove(this);
					}
					this._mstRequirement.Entity = value;
					if ((value != null))
					{
						value.trnLoanApplicationRequirements.Add(this);
						this._RequirementId = value.Id;
					}
					else
					{
						this._RequirementId = default(int);
					}
					this.SendPropertyChanged("mstRequirement");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="trnLoanApplication_trnLoanApplicationRequirement", Storage="_trnLoanApplication", ThisKey="LoanId", OtherKey="Id", IsForeignKey=true)]
		public trnLoanApplication trnLoanApplication
		{
			get
			{
				return this._trnLoanApplication.Entity;
			}
			set
			{
				trnLoanApplication previousValue = this._trnLoanApplication.Entity;
				if (((previousValue != value) 
							|| (this._trnLoanApplication.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._trnLoanApplication.Entity = null;
						previousValue.trnLoanApplicationRequirements.Remove(this);
					}
					this._trnLoanApplication.Entity = value;
					if ((value != null))
					{
						value.trnLoanApplicationRequirements.Add(this);
						this._LoanId = value.Id;
					}
					else
					{
						this._LoanId = default(int);
					}
					this.SendPropertyChanged("trnLoanApplication");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
