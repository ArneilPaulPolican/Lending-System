#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Lending.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="lending")]
	public partial class LendingDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAspNetRole(AspNetRole instance);
    partial void UpdateAspNetRole(AspNetRole instance);
    partial void DeleteAspNetRole(AspNetRole instance);
    partial void InserttrnRemittance(trnRemittance instance);
    partial void UpdatetrnRemittance(trnRemittance instance);
    partial void DeletetrnRemittance(trnRemittance instance);
    partial void InsertAspNetUserClaim(AspNetUserClaim instance);
    partial void UpdateAspNetUserClaim(AspNetUserClaim instance);
    partial void DeleteAspNetUserClaim(AspNetUserClaim instance);
    partial void InsertAspNetUserLogin(AspNetUserLogin instance);
    partial void UpdateAspNetUserLogin(AspNetUserLogin instance);
    partial void DeleteAspNetUserLogin(AspNetUserLogin instance);
    partial void InsertAspNetUserRole(AspNetUserRole instance);
    partial void UpdateAspNetUserRole(AspNetUserRole instance);
    partial void DeleteAspNetUserRole(AspNetUserRole instance);
    partial void InsertAspNetUser(AspNetUser instance);
    partial void UpdateAspNetUser(AspNetUser instance);
    partial void DeleteAspNetUser(AspNetUser instance);
    partial void InsertmstApplicant(mstApplicant instance);
    partial void UpdatemstApplicant(mstApplicant instance);
    partial void DeletemstApplicant(mstApplicant instance);
    partial void InsertmstApplicantApplianceOwned(mstApplicantApplianceOwned instance);
    partial void UpdatemstApplicantApplianceOwned(mstApplicantApplianceOwned instance);
    partial void DeletemstApplicantApplianceOwned(mstApplicantApplianceOwned instance);
    partial void InsertmstApplicantCoMakerStatement(mstApplicantCoMakerStatement instance);
    partial void UpdatemstApplicantCoMakerStatement(mstApplicantCoMakerStatement instance);
    partial void DeletemstApplicantCoMakerStatement(mstApplicantCoMakerStatement instance);
    partial void InsertmstApplicantRealPropertiesOwned(mstApplicantRealPropertiesOwned instance);
    partial void UpdatemstApplicantRealPropertiesOwned(mstApplicantRealPropertiesOwned instance);
    partial void DeletemstApplicantRealPropertiesOwned(mstApplicantRealPropertiesOwned instance);
    partial void InsertmstApplicantRequirement(mstApplicantRequirement instance);
    partial void UpdatemstApplicantRequirement(mstApplicantRequirement instance);
    partial void DeletemstApplicantRequirement(mstApplicantRequirement instance);
    partial void InsertmstArea(mstArea instance);
    partial void UpdatemstArea(mstArea instance);
    partial void DeletemstArea(mstArea instance);
    partial void InsertmstAreaStaff(mstAreaStaff instance);
    partial void UpdatemstAreaStaff(mstAreaStaff instance);
    partial void DeletemstAreaStaff(mstAreaStaff instance);
    partial void InsertmstCompany(mstCompany instance);
    partial void UpdatemstCompany(mstCompany instance);
    partial void DeletemstCompany(mstCompany instance);
    partial void InsertmstDeduction(mstDeduction instance);
    partial void UpdatemstDeduction(mstDeduction instance);
    partial void DeletemstDeduction(mstDeduction instance);
    partial void InsertmstInterest(mstInterest instance);
    partial void UpdatemstInterest(mstInterest instance);
    partial void DeletemstInterest(mstInterest instance);
    partial void InsertmstRequirement(mstRequirement instance);
    partial void UpdatemstRequirement(mstRequirement instance);
    partial void DeletemstRequirement(mstRequirement instance);
    partial void InsertmstStaff(mstStaff instance);
    partial void UpdatemstStaff(mstStaff instance);
    partial void DeletemstStaff(mstStaff instance);
    partial void InsertmstTerm(mstTerm instance);
    partial void UpdatemstTerm(mstTerm instance);
    partial void DeletemstTerm(mstTerm instance);
    partial void InsertmstUser(mstUser instance);
    partial void UpdatemstUser(mstUser instance);
    partial void DeletemstUser(mstUser instance);
    partial void InsertmstUserForm(mstUserForm instance);
    partial void UpdatemstUserForm(mstUserForm instance);
    partial void DeletemstUserForm(mstUserForm instance);
    partial void InsertsysCivilStatus(sysCivilStatus instance);
    partial void UpdatesysCivilStatus(sysCivilStatus instance);
    partial void DeletesysCivilStatus(sysCivilStatus instance);
    partial void InsertsysCollectionStatus(sysCollectionStatus instance);
    partial void UpdatesysCollectionStatus(sysCollectionStatus instance);
    partial void DeletesysCollectionStatus(sysCollectionStatus instance);
    partial void InsertsysForm(sysForm instance);
    partial void UpdatesysForm(sysForm instance);
    partial void DeletesysForm(sysForm instance);
    partial void InsertsysResidenceType(sysResidenceType instance);
    partial void UpdatesysResidenceType(sysResidenceType instance);
    partial void DeletesysResidenceType(sysResidenceType instance);
    partial void InserttrnCollection(trnCollection instance);
    partial void UpdatetrnCollection(trnCollection instance);
    partial void DeletetrnCollection(trnCollection instance);
    partial void InserttrnCollectionLine(trnCollectionLine instance);
    partial void UpdatetrnCollectionLine(trnCollectionLine instance);
    partial void DeletetrnCollectionLine(trnCollectionLine instance);
    partial void InserttrnExpense(trnExpense instance);
    partial void UpdatetrnExpense(trnExpense instance);
    partial void DeletetrnExpense(trnExpense instance);
    partial void InserttrnLoan(trnLoan instance);
    partial void UpdatetrnLoan(trnLoan instance);
    partial void DeletetrnLoan(trnLoan instance);
    partial void InserttrnLoanCollateral(trnLoanCollateral instance);
    partial void UpdatetrnLoanCollateral(trnLoanCollateral instance);
    partial void DeletetrnLoanCollateral(trnLoanCollateral instance);
    partial void InserttrnLoanDeduction(trnLoanDeduction instance);
    partial void UpdatetrnLoanDeduction(trnLoanDeduction instance);
    partial void DeletetrnLoanDeduction(trnLoanDeduction instance);
    #endregion
		
		public LendingDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["DefaultConnection"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public LendingDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LendingDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LendingDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LendingDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<AspNetRole> AspNetRoles
		{
			get
			{
				return this.GetTable<AspNetRole>();
			}
		}
		
		public System.Data.Linq.Table<trnRemittance> trnRemittances
		{
			get
			{
				return this.GetTable<trnRemittance>();
			}
		}
		
		public System.Data.Linq.Table<AspNetUserClaim> AspNetUserClaims
		{
			get
			{
				return this.GetTable<AspNetUserClaim>();
			}
		}
		
		public System.Data.Linq.Table<AspNetUserLogin> AspNetUserLogins
		{
			get
			{
				return this.GetTable<AspNetUserLogin>();
			}
		}
		
		public System.Data.Linq.Table<AspNetUserRole> AspNetUserRoles
		{
			get
			{
				return this.GetTable<AspNetUserRole>();
			}
		}
		
		public System.Data.Linq.Table<AspNetUser> AspNetUsers
		{
			get
			{
				return this.GetTable<AspNetUser>();
			}
		}
		
		public System.Data.Linq.Table<mstApplicant> mstApplicants
		{
			get
			{
				return this.GetTable<mstApplicant>();
			}
		}
		
		public System.Data.Linq.Table<mstApplicantApplianceOwned> mstApplicantApplianceOwneds
		{
			get
			{
				return this.GetTable<mstApplicantApplianceOwned>();
			}
		}
		
		public System.Data.Linq.Table<mstApplicantCoMakerStatement> mstApplicantCoMakerStatements
		{
			get
			{
				return this.GetTable<mstApplicantCoMakerStatement>();
			}
		}
		
		public System.Data.Linq.Table<mstApplicantRealPropertiesOwned> mstApplicantRealPropertiesOwneds
		{
			get
			{
				return this.GetTable<mstApplicantRealPropertiesOwned>();
			}
		}
		
		public System.Data.Linq.Table<mstApplicantRequirement> mstApplicantRequirements
		{
			get
			{
				return this.GetTable<mstApplicantRequirement>();
			}
		}
		
		public System.Data.Linq.Table<mstArea> mstAreas
		{
			get
			{
				return this.GetTable<mstArea>();
			}
		}
		
		public System.Data.Linq.Table<mstAreaStaff> mstAreaStaffs
		{
			get
			{
				return this.GetTable<mstAreaStaff>();
			}
		}
		
		public System.Data.Linq.Table<mstCompany> mstCompanies
		{
			get
			{
				return this.GetTable<mstCompany>();
			}
		}
		
		public System.Data.Linq.Table<mstDeduction> mstDeductions
		{
			get
			{
				return this.GetTable<mstDeduction>();
			}
		}
		
		public System.Data.Linq.Table<mstInterest> mstInterests
		{
			get
			{
				return this.GetTable<mstInterest>();
			}
		}
		
		public System.Data.Linq.Table<mstRequirement> mstRequirements
		{
			get
			{
				return this.GetTable<mstRequirement>();
			}
		}
		
		public System.Data.Linq.Table<mstStaff> mstStaffs
		{
			get
			{
				return this.GetTable<mstStaff>();
			}
		}
		
		public System.Data.Linq.Table<mstTerm> mstTerms
		{
			get
			{
				return this.GetTable<mstTerm>();
			}
		}
		
		public System.Data.Linq.Table<mstUser> mstUsers
		{
			get
			{
				return this.GetTable<mstUser>();
			}
		}
		
		public System.Data.Linq.Table<mstUserForm> mstUserForms
		{
			get
			{
				return this.GetTable<mstUserForm>();
			}
		}
		
		public System.Data.Linq.Table<sysCivilStatus> sysCivilStatus
		{
			get
			{
				return this.GetTable<sysCivilStatus>();
			}
		}
		
		public System.Data.Linq.Table<sysCollectionStatus> sysCollectionStatus
		{
			get
			{
				return this.GetTable<sysCollectionStatus>();
			}
		}
		
		public System.Data.Linq.Table<sysForm> sysForms
		{
			get
			{
				return this.GetTable<sysForm>();
			}
		}
		
		public System.Data.Linq.Table<sysResidenceType> sysResidenceTypes
		{
			get
			{
				return this.GetTable<sysResidenceType>();
			}
		}
		
		public System.Data.Linq.Table<trnCollection> trnCollections
		{
			get
			{
				return this.GetTable<trnCollection>();
			}
		}
		
		public System.Data.Linq.Table<trnCollectionLine> trnCollectionLines
		{
			get
			{
				return this.GetTable<trnCollectionLine>();
			}
		}
		
		public System.Data.Linq.Table<trnExpense> trnExpenses
		{
			get
			{
				return this.GetTable<trnExpense>();
			}
		}
		
		public System.Data.Linq.Table<trnLoan> trnLoans
		{
			get
			{
				return this.GetTable<trnLoan>();
			}
		}
		
		public System.Data.Linq.Table<trnLoanCollateral> trnLoanCollaterals
		{
			get
			{
				return this.GetTable<trnLoanCollateral>();
			}
		}
		
		public System.Data.Linq.Table<trnLoanDeduction> trnLoanDeductions
		{
			get
			{
				return this.GetTable<trnLoanDeduction>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AspNetRoles")]
	public partial class AspNetRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private string _Name;
		
		private EntitySet<AspNetUserRole> _AspNetUserRoles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public AspNetRole()
		{
			this._AspNetUserRoles = new EntitySet<AspNetUserRole>(new Action<AspNetUserRole>(this.attach_AspNetUserRoles), new Action<AspNetUserRole>(this.detach_AspNetUserRoles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetRole_AspNetUserRole", Storage="_AspNetUserRoles", ThisKey="Id", OtherKey="RoleId")]
		public EntitySet<AspNetUserRole> AspNetUserRoles
		{
			get
			{
				return this._AspNetUserRoles;
			}
			set
			{
				this._AspNetUserRoles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AspNetUserRoles(AspNetUserRole entity)
		{
			this.SendPropertyChanging();
			entity.AspNetRole = this;
		}
		
		private void detach_AspNetUserRoles(AspNetUserRole entity)
		{
			this.SendPropertyChanging();
			entity.AspNetRole = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.trnRemittance")]
	public partial class trnRemittance : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _RemittanceNumber;
		
		private System.DateTime _RemittanceDate;
		
		private int _AreaId;
		
		private int _StaffId;
		
		private string _Particulars;
		
		private int _PreparedByUserId;
		
		private decimal _RemitAmount;
		
		private bool _IsLocked;
		
		private int _CreatedByUserId;
		
		private System.DateTime _CreatedDateTime;
		
		private int _UpdatedByUserId;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntityRef<mstArea> _mstArea;
		
		private EntityRef<mstStaff> _mstStaff;
		
		private EntityRef<mstUser> _mstUser;
		
		private EntityRef<mstUser> _mstUser1;
		
		private EntityRef<mstUser> _mstUser2;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnRemittanceNumberChanging(string value);
    partial void OnRemittanceNumberChanged();
    partial void OnRemittanceDateChanging(System.DateTime value);
    partial void OnRemittanceDateChanged();
    partial void OnAreaIdChanging(int value);
    partial void OnAreaIdChanged();
    partial void OnStaffIdChanging(int value);
    partial void OnStaffIdChanged();
    partial void OnParticularsChanging(string value);
    partial void OnParticularsChanged();
    partial void OnPreparedByUserIdChanging(int value);
    partial void OnPreparedByUserIdChanged();
    partial void OnRemitAmountChanging(decimal value);
    partial void OnRemitAmountChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByUserIdChanging(int value);
    partial void OnCreatedByUserIdChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByUserIdChanging(int value);
    partial void OnUpdatedByUserIdChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public trnRemittance()
		{
			this._mstArea = default(EntityRef<mstArea>);
			this._mstStaff = default(EntityRef<mstStaff>);
			this._mstUser = default(EntityRef<mstUser>);
			this._mstUser1 = default(EntityRef<mstUser>);
			this._mstUser2 = default(EntityRef<mstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemittanceNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string RemittanceNumber
		{
			get
			{
				return this._RemittanceNumber;
			}
			set
			{
				if ((this._RemittanceNumber != value))
				{
					this.OnRemittanceNumberChanging(value);
					this.SendPropertyChanging();
					this._RemittanceNumber = value;
					this.SendPropertyChanged("RemittanceNumber");
					this.OnRemittanceNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemittanceDate", DbType="DateTime NOT NULL")]
		public System.DateTime RemittanceDate
		{
			get
			{
				return this._RemittanceDate;
			}
			set
			{
				if ((this._RemittanceDate != value))
				{
					this.OnRemittanceDateChanging(value);
					this.SendPropertyChanging();
					this._RemittanceDate = value;
					this.SendPropertyChanged("RemittanceDate");
					this.OnRemittanceDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AreaId", DbType="Int NOT NULL")]
		public int AreaId
		{
			get
			{
				return this._AreaId;
			}
			set
			{
				if ((this._AreaId != value))
				{
					if (this._mstArea.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAreaIdChanging(value);
					this.SendPropertyChanging();
					this._AreaId = value;
					this.SendPropertyChanged("AreaId");
					this.OnAreaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffId", DbType="Int NOT NULL")]
		public int StaffId
		{
			get
			{
				return this._StaffId;
			}
			set
			{
				if ((this._StaffId != value))
				{
					if (this._mstStaff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStaffIdChanging(value);
					this.SendPropertyChanging();
					this._StaffId = value;
					this.SendPropertyChanged("StaffId");
					this.OnStaffIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Particulars", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Particulars
		{
			get
			{
				return this._Particulars;
			}
			set
			{
				if ((this._Particulars != value))
				{
					this.OnParticularsChanging(value);
					this.SendPropertyChanging();
					this._Particulars = value;
					this.SendPropertyChanged("Particulars");
					this.OnParticularsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreparedByUserId", DbType="Int NOT NULL")]
		public int PreparedByUserId
		{
			get
			{
				return this._PreparedByUserId;
			}
			set
			{
				if ((this._PreparedByUserId != value))
				{
					if (this._mstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPreparedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._PreparedByUserId = value;
					this.SendPropertyChanged("PreparedByUserId");
					this.OnPreparedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemitAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal RemitAmount
		{
			get
			{
				return this._RemitAmount;
			}
			set
			{
				if ((this._RemitAmount != value))
				{
					this.OnRemitAmountChanging(value);
					this.SendPropertyChanging();
					this._RemitAmount = value;
					this.SendPropertyChanged("RemitAmount");
					this.OnRemitAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserId", DbType="Int NOT NULL")]
		public int CreatedByUserId
		{
			get
			{
				return this._CreatedByUserId;
			}
			set
			{
				if ((this._CreatedByUserId != value))
				{
					if (this._mstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserId = value;
					this.SendPropertyChanged("CreatedByUserId");
					this.OnCreatedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedByUserId", DbType="Int NOT NULL")]
		public int UpdatedByUserId
		{
			get
			{
				return this._UpdatedByUserId;
			}
			set
			{
				if ((this._UpdatedByUserId != value))
				{
					if (this._mstUser2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedByUserId = value;
					this.SendPropertyChanged("UpdatedByUserId");
					this.OnUpdatedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstArea_trnRemittance", Storage="_mstArea", ThisKey="AreaId", OtherKey="Id", IsForeignKey=true)]
		public mstArea mstArea
		{
			get
			{
				return this._mstArea.Entity;
			}
			set
			{
				mstArea previousValue = this._mstArea.Entity;
				if (((previousValue != value) 
							|| (this._mstArea.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstArea.Entity = null;
						previousValue.trnRemittances.Remove(this);
					}
					this._mstArea.Entity = value;
					if ((value != null))
					{
						value.trnRemittances.Add(this);
						this._AreaId = value.Id;
					}
					else
					{
						this._AreaId = default(int);
					}
					this.SendPropertyChanged("mstArea");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstStaff_trnRemittance", Storage="_mstStaff", ThisKey="StaffId", OtherKey="Id", IsForeignKey=true)]
		public mstStaff mstStaff
		{
			get
			{
				return this._mstStaff.Entity;
			}
			set
			{
				mstStaff previousValue = this._mstStaff.Entity;
				if (((previousValue != value) 
							|| (this._mstStaff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstStaff.Entity = null;
						previousValue.trnRemittances.Remove(this);
					}
					this._mstStaff.Entity = value;
					if ((value != null))
					{
						value.trnRemittances.Add(this);
						this._StaffId = value.Id;
					}
					else
					{
						this._StaffId = default(int);
					}
					this.SendPropertyChanged("mstStaff");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUser_trnRemittance", Storage="_mstUser", ThisKey="PreparedByUserId", OtherKey="Id", IsForeignKey=true)]
		public mstUser mstUser
		{
			get
			{
				return this._mstUser.Entity;
			}
			set
			{
				mstUser previousValue = this._mstUser.Entity;
				if (((previousValue != value) 
							|| (this._mstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstUser.Entity = null;
						previousValue.trnRemittances.Remove(this);
					}
					this._mstUser.Entity = value;
					if ((value != null))
					{
						value.trnRemittances.Add(this);
						this._PreparedByUserId = value.Id;
					}
					else
					{
						this._PreparedByUserId = default(int);
					}
					this.SendPropertyChanged("mstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUser_trnRemittance1", Storage="_mstUser1", ThisKey="CreatedByUserId", OtherKey="Id", IsForeignKey=true)]
		public mstUser mstUser1
		{
			get
			{
				return this._mstUser1.Entity;
			}
			set
			{
				mstUser previousValue = this._mstUser1.Entity;
				if (((previousValue != value) 
							|| (this._mstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstUser1.Entity = null;
						previousValue.trnRemittances1.Remove(this);
					}
					this._mstUser1.Entity = value;
					if ((value != null))
					{
						value.trnRemittances1.Add(this);
						this._CreatedByUserId = value.Id;
					}
					else
					{
						this._CreatedByUserId = default(int);
					}
					this.SendPropertyChanged("mstUser1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUser_trnRemittance2", Storage="_mstUser2", ThisKey="UpdatedByUserId", OtherKey="Id", IsForeignKey=true)]
		public mstUser mstUser2
		{
			get
			{
				return this._mstUser2.Entity;
			}
			set
			{
				mstUser previousValue = this._mstUser2.Entity;
				if (((previousValue != value) 
							|| (this._mstUser2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstUser2.Entity = null;
						previousValue.trnRemittances2.Remove(this);
					}
					this._mstUser2.Entity = value;
					if ((value != null))
					{
						value.trnRemittances2.Add(this);
						this._UpdatedByUserId = value.Id;
					}
					else
					{
						this._UpdatedByUserId = default(int);
					}
					this.SendPropertyChanged("mstUser2");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AspNetUserClaims")]
	public partial class AspNetUserClaim : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _UserId;
		
		private string _ClaimType;
		
		private string _ClaimValue;
		
		private EntityRef<AspNetUser> _AspNetUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    partial void OnClaimTypeChanging(string value);
    partial void OnClaimTypeChanged();
    partial void OnClaimValueChanging(string value);
    partial void OnClaimValueChanged();
    #endregion
		
		public AspNetUserClaim()
		{
			this._AspNetUser = default(EntityRef<AspNetUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._AspNetUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClaimType", DbType="NVarChar(MAX)")]
		public string ClaimType
		{
			get
			{
				return this._ClaimType;
			}
			set
			{
				if ((this._ClaimType != value))
				{
					this.OnClaimTypeChanging(value);
					this.SendPropertyChanging();
					this._ClaimType = value;
					this.SendPropertyChanged("ClaimType");
					this.OnClaimTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClaimValue", DbType="NVarChar(MAX)")]
		public string ClaimValue
		{
			get
			{
				return this._ClaimValue;
			}
			set
			{
				if ((this._ClaimValue != value))
				{
					this.OnClaimValueChanging(value);
					this.SendPropertyChanging();
					this._ClaimValue = value;
					this.SendPropertyChanged("ClaimValue");
					this.OnClaimValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetUser_AspNetUserClaim", Storage="_AspNetUser", ThisKey="UserId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public AspNetUser AspNetUser
		{
			get
			{
				return this._AspNetUser.Entity;
			}
			set
			{
				AspNetUser previousValue = this._AspNetUser.Entity;
				if (((previousValue != value) 
							|| (this._AspNetUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AspNetUser.Entity = null;
						previousValue.AspNetUserClaims.Remove(this);
					}
					this._AspNetUser.Entity = value;
					if ((value != null))
					{
						value.AspNetUserClaims.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(string);
					}
					this.SendPropertyChanged("AspNetUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AspNetUserLogins")]
	public partial class AspNetUserLogin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _LoginProvider;
		
		private string _ProviderKey;
		
		private string _UserId;
		
		private EntityRef<AspNetUser> _AspNetUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLoginProviderChanging(string value);
    partial void OnLoginProviderChanged();
    partial void OnProviderKeyChanging(string value);
    partial void OnProviderKeyChanged();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    #endregion
		
		public AspNetUserLogin()
		{
			this._AspNetUser = default(EntityRef<AspNetUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginProvider", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string LoginProvider
		{
			get
			{
				return this._LoginProvider;
			}
			set
			{
				if ((this._LoginProvider != value))
				{
					this.OnLoginProviderChanging(value);
					this.SendPropertyChanging();
					this._LoginProvider = value;
					this.SendPropertyChanged("LoginProvider");
					this.OnLoginProviderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProviderKey", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ProviderKey
		{
			get
			{
				return this._ProviderKey;
			}
			set
			{
				if ((this._ProviderKey != value))
				{
					this.OnProviderKeyChanging(value);
					this.SendPropertyChanging();
					this._ProviderKey = value;
					this.SendPropertyChanged("ProviderKey");
					this.OnProviderKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._AspNetUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetUser_AspNetUserLogin", Storage="_AspNetUser", ThisKey="UserId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public AspNetUser AspNetUser
		{
			get
			{
				return this._AspNetUser.Entity;
			}
			set
			{
				AspNetUser previousValue = this._AspNetUser.Entity;
				if (((previousValue != value) 
							|| (this._AspNetUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AspNetUser.Entity = null;
						previousValue.AspNetUserLogins.Remove(this);
					}
					this._AspNetUser.Entity = value;
					if ((value != null))
					{
						value.AspNetUserLogins.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(string);
					}
					this.SendPropertyChanged("AspNetUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AspNetUserRoles")]
	public partial class AspNetUserRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UserId;
		
		private string _RoleId;
		
		private EntityRef<AspNetRole> _AspNetRole;
		
		private EntityRef<AspNetUser> _AspNetUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    partial void OnRoleIdChanging(string value);
    partial void OnRoleIdChanged();
    #endregion
		
		public AspNetUserRole()
		{
			this._AspNetRole = default(EntityRef<AspNetRole>);
			this._AspNetUser = default(EntityRef<AspNetUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._AspNetUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._AspNetRole.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetRole_AspNetUserRole", Storage="_AspNetRole", ThisKey="RoleId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public AspNetRole AspNetRole
		{
			get
			{
				return this._AspNetRole.Entity;
			}
			set
			{
				AspNetRole previousValue = this._AspNetRole.Entity;
				if (((previousValue != value) 
							|| (this._AspNetRole.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AspNetRole.Entity = null;
						previousValue.AspNetUserRoles.Remove(this);
					}
					this._AspNetRole.Entity = value;
					if ((value != null))
					{
						value.AspNetUserRoles.Add(this);
						this._RoleId = value.Id;
					}
					else
					{
						this._RoleId = default(string);
					}
					this.SendPropertyChanged("AspNetRole");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetUser_AspNetUserRole", Storage="_AspNetUser", ThisKey="UserId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public AspNetUser AspNetUser
		{
			get
			{
				return this._AspNetUser.Entity;
			}
			set
			{
				AspNetUser previousValue = this._AspNetUser.Entity;
				if (((previousValue != value) 
							|| (this._AspNetUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AspNetUser.Entity = null;
						previousValue.AspNetUserRoles.Remove(this);
					}
					this._AspNetUser.Entity = value;
					if ((value != null))
					{
						value.AspNetUserRoles.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(string);
					}
					this.SendPropertyChanged("AspNetUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AspNetUsers")]
	public partial class AspNetUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private string _UserName;
		
		private string _PasswordHash;
		
		private string _FullName;
		
		private string _Email;
		
		private System.Nullable<bool> _EmailConfirmed;
		
		private string _SecurityStamp;
		
		private string _PhoneNumber;
		
		private System.Nullable<bool> _PhoneNumberConfirmed;
		
		private System.Nullable<bool> _TwoFactorEnabled;
		
		private System.Nullable<System.DateTime> _LockoutEndDateUtc;
		
		private System.Nullable<bool> _LockoutEnabled;
		
		private System.Nullable<int> _AccessFailedCount;
		
		private EntitySet<AspNetUserClaim> _AspNetUserClaims;
		
		private EntitySet<AspNetUserLogin> _AspNetUserLogins;
		
		private EntitySet<AspNetUserRole> _AspNetUserRoles;
		
		private EntitySet<mstUser> _mstUsers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordHashChanging(string value);
    partial void OnPasswordHashChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnEmailConfirmedChanging(System.Nullable<bool> value);
    partial void OnEmailConfirmedChanged();
    partial void OnSecurityStampChanging(string value);
    partial void OnSecurityStampChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnPhoneNumberConfirmedChanging(System.Nullable<bool> value);
    partial void OnPhoneNumberConfirmedChanged();
    partial void OnTwoFactorEnabledChanging(System.Nullable<bool> value);
    partial void OnTwoFactorEnabledChanged();
    partial void OnLockoutEndDateUtcChanging(System.Nullable<System.DateTime> value);
    partial void OnLockoutEndDateUtcChanged();
    partial void OnLockoutEnabledChanging(System.Nullable<bool> value);
    partial void OnLockoutEnabledChanged();
    partial void OnAccessFailedCountChanging(System.Nullable<int> value);
    partial void OnAccessFailedCountChanged();
    #endregion
		
		public AspNetUser()
		{
			this._AspNetUserClaims = new EntitySet<AspNetUserClaim>(new Action<AspNetUserClaim>(this.attach_AspNetUserClaims), new Action<AspNetUserClaim>(this.detach_AspNetUserClaims));
			this._AspNetUserLogins = new EntitySet<AspNetUserLogin>(new Action<AspNetUserLogin>(this.attach_AspNetUserLogins), new Action<AspNetUserLogin>(this.detach_AspNetUserLogins));
			this._AspNetUserRoles = new EntitySet<AspNetUserRole>(new Action<AspNetUserRole>(this.attach_AspNetUserRoles), new Action<AspNetUserRole>(this.detach_AspNetUserRoles));
			this._mstUsers = new EntitySet<mstUser>(new Action<mstUser>(this.attach_mstUsers), new Action<mstUser>(this.detach_mstUsers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordHash", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string PasswordHash
		{
			get
			{
				return this._PasswordHash;
			}
			set
			{
				if ((this._PasswordHash != value))
				{
					this.OnPasswordHashChanging(value);
					this.SendPropertyChanging();
					this._PasswordHash = value;
					this.SendPropertyChanged("PasswordHash");
					this.OnPasswordHashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(256)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailConfirmed", DbType="Bit")]
		public System.Nullable<bool> EmailConfirmed
		{
			get
			{
				return this._EmailConfirmed;
			}
			set
			{
				if ((this._EmailConfirmed != value))
				{
					this.OnEmailConfirmedChanging(value);
					this.SendPropertyChanging();
					this._EmailConfirmed = value;
					this.SendPropertyChanged("EmailConfirmed");
					this.OnEmailConfirmedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecurityStamp", DbType="NVarChar(MAX)")]
		public string SecurityStamp
		{
			get
			{
				return this._SecurityStamp;
			}
			set
			{
				if ((this._SecurityStamp != value))
				{
					this.OnSecurityStampChanging(value);
					this.SendPropertyChanging();
					this._SecurityStamp = value;
					this.SendPropertyChanged("SecurityStamp");
					this.OnSecurityStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="NVarChar(MAX)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumberConfirmed", DbType="Bit")]
		public System.Nullable<bool> PhoneNumberConfirmed
		{
			get
			{
				return this._PhoneNumberConfirmed;
			}
			set
			{
				if ((this._PhoneNumberConfirmed != value))
				{
					this.OnPhoneNumberConfirmedChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumberConfirmed = value;
					this.SendPropertyChanged("PhoneNumberConfirmed");
					this.OnPhoneNumberConfirmedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TwoFactorEnabled", DbType="Bit")]
		public System.Nullable<bool> TwoFactorEnabled
		{
			get
			{
				return this._TwoFactorEnabled;
			}
			set
			{
				if ((this._TwoFactorEnabled != value))
				{
					this.OnTwoFactorEnabledChanging(value);
					this.SendPropertyChanging();
					this._TwoFactorEnabled = value;
					this.SendPropertyChanged("TwoFactorEnabled");
					this.OnTwoFactorEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LockoutEndDateUtc", DbType="DateTime")]
		public System.Nullable<System.DateTime> LockoutEndDateUtc
		{
			get
			{
				return this._LockoutEndDateUtc;
			}
			set
			{
				if ((this._LockoutEndDateUtc != value))
				{
					this.OnLockoutEndDateUtcChanging(value);
					this.SendPropertyChanging();
					this._LockoutEndDateUtc = value;
					this.SendPropertyChanged("LockoutEndDateUtc");
					this.OnLockoutEndDateUtcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LockoutEnabled", DbType="Bit")]
		public System.Nullable<bool> LockoutEnabled
		{
			get
			{
				return this._LockoutEnabled;
			}
			set
			{
				if ((this._LockoutEnabled != value))
				{
					this.OnLockoutEnabledChanging(value);
					this.SendPropertyChanging();
					this._LockoutEnabled = value;
					this.SendPropertyChanged("LockoutEnabled");
					this.OnLockoutEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessFailedCount", DbType="Int")]
		public System.Nullable<int> AccessFailedCount
		{
			get
			{
				return this._AccessFailedCount;
			}
			set
			{
				if ((this._AccessFailedCount != value))
				{
					this.OnAccessFailedCountChanging(value);
					this.SendPropertyChanging();
					this._AccessFailedCount = value;
					this.SendPropertyChanged("AccessFailedCount");
					this.OnAccessFailedCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetUser_AspNetUserClaim", Storage="_AspNetUserClaims", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<AspNetUserClaim> AspNetUserClaims
		{
			get
			{
				return this._AspNetUserClaims;
			}
			set
			{
				this._AspNetUserClaims.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetUser_AspNetUserLogin", Storage="_AspNetUserLogins", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<AspNetUserLogin> AspNetUserLogins
		{
			get
			{
				return this._AspNetUserLogins;
			}
			set
			{
				this._AspNetUserLogins.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetUser_AspNetUserRole", Storage="_AspNetUserRoles", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<AspNetUserRole> AspNetUserRoles
		{
			get
			{
				return this._AspNetUserRoles;
			}
			set
			{
				this._AspNetUserRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetUser_mstUser", Storage="_mstUsers", ThisKey="Id", OtherKey="AspUserId")]
		public EntitySet<mstUser> mstUsers
		{
			get
			{
				return this._mstUsers;
			}
			set
			{
				this._mstUsers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AspNetUserClaims(AspNetUserClaim entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUser = this;
		}
		
		private void detach_AspNetUserClaims(AspNetUserClaim entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUser = null;
		}
		
		private void attach_AspNetUserLogins(AspNetUserLogin entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUser = this;
		}
		
		private void detach_AspNetUserLogins(AspNetUserLogin entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUser = null;
		}
		
		private void attach_AspNetUserRoles(AspNetUserRole entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUser = this;
		}
		
		private void detach_AspNetUserRoles(AspNetUserRole entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUser = null;
		}
		
		private void attach_mstUsers(mstUser entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUser = this;
		}
		
		private void detach_mstUsers(mstUser entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUser = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mstApplicant")]
	public partial class mstApplicant : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _ApplicantNumber;
		
		private bool _IsCoMaker;
		
		private System.Data.Linq.Binary _Photo;
		
		private int _AreaId;
		
		private string _ApplicantLastName;
		
		private string _ApplicantFirstName;
		
		private string _ApplicantMiddleName;
		
		private System.DateTime _BirthDate;
		
		private int _CivilStatusId;
		
		private string _CityAddress;
		
		private string _ProvinceAddress;
		
		private string _ContactNumber;
		
		private int _ResidenceTypeId;
		
		private decimal _ResidenceMonthlyRentAmount;
		
		private int _LandResidenceTypeId;
		
		private decimal _LandResidenceMonthlyRentAmount;
		
		private string _LengthOfStay;
		
		private string _BusinessAddress;
		
		private string _BusinessKaratulaName;
		
		private string _BusinessTelephoneNumber;
		
		private string _BusinessYear;
		
		private string _BusinessMerchandise;
		
		private decimal _BusinessStockValues;
		
		private decimal _BusinessBeginningCapital;
		
		private string _BusinessLowSalesPeriod;
		
		private decimal _BusinessLowestDailySales;
		
		private decimal _BusinessAverageDailySales;
		
		private string _EmployedCompany;
		
		private string _EmployedCompanyAddress;
		
		private string _EmployedPositionOccupied;
		
		private string _EmployedServiceLength;
		
		private string _EmployedTelephoneNumber;
		
		private string _SpouseFullName;
		
		private string _SpouseEmployerBusiness;
		
		private string _SpouseEmployerBusinessAddress;
		
		private string _SpouseBusinessTelephoneNumber;
		
		private string _SpousePositionOccupied;
		
		private decimal _SpouseMonthlySalary;
		
		private string _SpouseLengthOfService;
		
		private string _NumberOfChildren;
		
		private string _Studying;
		
		private string _Schools;
		
		private bool _IsLocked;
		
		private int _CreatedByUserId;
		
		private System.DateTime _CreatedDateTime;
		
		private int _UpdatedByUserId;
		
		private System.DateTime _UpdatedDateTime;
		
		private System.Data.Linq.Binary _PhotoSignature;
		
		private EntitySet<mstApplicantApplianceOwned> _mstApplicantApplianceOwneds;
		
		private EntitySet<mstApplicantCoMakerStatement> _mstApplicantCoMakerStatements;
		
		private EntitySet<mstApplicantCoMakerStatement> _mstApplicantCoMakerStatements1;
		
		private EntitySet<mstApplicantRealPropertiesOwned> _mstApplicantRealPropertiesOwneds;
		
		private EntitySet<mstApplicantRequirement> _mstApplicantRequirements;
		
		private EntitySet<trnLoan> _trnLoans;
		
		private EntityRef<mstArea> _mstArea;
		
		private EntityRef<mstUser> _mstUser;
		
		private EntityRef<mstUser> _mstUser1;
		
		private EntityRef<sysCivilStatus> _sysCivilStatus;
		
		private EntityRef<sysResidenceType> _sysResidenceType;
		
		private EntityRef<sysResidenceType> _sysResidenceType1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnApplicantNumberChanging(string value);
    partial void OnApplicantNumberChanged();
    partial void OnIsCoMakerChanging(bool value);
    partial void OnIsCoMakerChanged();
    partial void OnPhotoChanging(System.Data.Linq.Binary value);
    partial void OnPhotoChanged();
    partial void OnAreaIdChanging(int value);
    partial void OnAreaIdChanged();
    partial void OnApplicantLastNameChanging(string value);
    partial void OnApplicantLastNameChanged();
    partial void OnApplicantFirstNameChanging(string value);
    partial void OnApplicantFirstNameChanged();
    partial void OnApplicantMiddleNameChanging(string value);
    partial void OnApplicantMiddleNameChanged();
    partial void OnBirthDateChanging(System.DateTime value);
    partial void OnBirthDateChanged();
    partial void OnCivilStatusIdChanging(int value);
    partial void OnCivilStatusIdChanged();
    partial void OnCityAddressChanging(string value);
    partial void OnCityAddressChanged();
    partial void OnProvinceAddressChanging(string value);
    partial void OnProvinceAddressChanged();
    partial void OnContactNumberChanging(string value);
    partial void OnContactNumberChanged();
    partial void OnResidenceTypeIdChanging(int value);
    partial void OnResidenceTypeIdChanged();
    partial void OnResidenceMonthlyRentAmountChanging(decimal value);
    partial void OnResidenceMonthlyRentAmountChanged();
    partial void OnLandResidenceTypeIdChanging(int value);
    partial void OnLandResidenceTypeIdChanged();
    partial void OnLandResidenceMonthlyRentAmountChanging(decimal value);
    partial void OnLandResidenceMonthlyRentAmountChanged();
    partial void OnLengthOfStayChanging(string value);
    partial void OnLengthOfStayChanged();
    partial void OnBusinessAddressChanging(string value);
    partial void OnBusinessAddressChanged();
    partial void OnBusinessKaratulaNameChanging(string value);
    partial void OnBusinessKaratulaNameChanged();
    partial void OnBusinessTelephoneNumberChanging(string value);
    partial void OnBusinessTelephoneNumberChanged();
    partial void OnBusinessYearChanging(string value);
    partial void OnBusinessYearChanged();
    partial void OnBusinessMerchandiseChanging(string value);
    partial void OnBusinessMerchandiseChanged();
    partial void OnBusinessStockValuesChanging(decimal value);
    partial void OnBusinessStockValuesChanged();
    partial void OnBusinessBeginningCapitalChanging(decimal value);
    partial void OnBusinessBeginningCapitalChanged();
    partial void OnBusinessLowSalesPeriodChanging(string value);
    partial void OnBusinessLowSalesPeriodChanged();
    partial void OnBusinessLowestDailySalesChanging(decimal value);
    partial void OnBusinessLowestDailySalesChanged();
    partial void OnBusinessAverageDailySalesChanging(decimal value);
    partial void OnBusinessAverageDailySalesChanged();
    partial void OnEmployedCompanyChanging(string value);
    partial void OnEmployedCompanyChanged();
    partial void OnEmployedCompanyAddressChanging(string value);
    partial void OnEmployedCompanyAddressChanged();
    partial void OnEmployedPositionOccupiedChanging(string value);
    partial void OnEmployedPositionOccupiedChanged();
    partial void OnEmployedServiceLengthChanging(string value);
    partial void OnEmployedServiceLengthChanged();
    partial void OnEmployedTelephoneNumberChanging(string value);
    partial void OnEmployedTelephoneNumberChanged();
    partial void OnSpouseFullNameChanging(string value);
    partial void OnSpouseFullNameChanged();
    partial void OnSpouseEmployerBusinessChanging(string value);
    partial void OnSpouseEmployerBusinessChanged();
    partial void OnSpouseEmployerBusinessAddressChanging(string value);
    partial void OnSpouseEmployerBusinessAddressChanged();
    partial void OnSpouseBusinessTelephoneNumberChanging(string value);
    partial void OnSpouseBusinessTelephoneNumberChanged();
    partial void OnSpousePositionOccupiedChanging(string value);
    partial void OnSpousePositionOccupiedChanged();
    partial void OnSpouseMonthlySalaryChanging(decimal value);
    partial void OnSpouseMonthlySalaryChanged();
    partial void OnSpouseLengthOfServiceChanging(string value);
    partial void OnSpouseLengthOfServiceChanged();
    partial void OnNumberOfChildrenChanging(string value);
    partial void OnNumberOfChildrenChanged();
    partial void OnStudyingChanging(string value);
    partial void OnStudyingChanged();
    partial void OnSchoolsChanging(string value);
    partial void OnSchoolsChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByUserIdChanging(int value);
    partial void OnCreatedByUserIdChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByUserIdChanging(int value);
    partial void OnUpdatedByUserIdChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    partial void OnPhotoSignatureChanging(System.Data.Linq.Binary value);
    partial void OnPhotoSignatureChanged();
    #endregion
		
		public mstApplicant()
		{
			this._mstApplicantApplianceOwneds = new EntitySet<mstApplicantApplianceOwned>(new Action<mstApplicantApplianceOwned>(this.attach_mstApplicantApplianceOwneds), new Action<mstApplicantApplianceOwned>(this.detach_mstApplicantApplianceOwneds));
			this._mstApplicantCoMakerStatements = new EntitySet<mstApplicantCoMakerStatement>(new Action<mstApplicantCoMakerStatement>(this.attach_mstApplicantCoMakerStatements), new Action<mstApplicantCoMakerStatement>(this.detach_mstApplicantCoMakerStatements));
			this._mstApplicantCoMakerStatements1 = new EntitySet<mstApplicantCoMakerStatement>(new Action<mstApplicantCoMakerStatement>(this.attach_mstApplicantCoMakerStatements1), new Action<mstApplicantCoMakerStatement>(this.detach_mstApplicantCoMakerStatements1));
			this._mstApplicantRealPropertiesOwneds = new EntitySet<mstApplicantRealPropertiesOwned>(new Action<mstApplicantRealPropertiesOwned>(this.attach_mstApplicantRealPropertiesOwneds), new Action<mstApplicantRealPropertiesOwned>(this.detach_mstApplicantRealPropertiesOwneds));
			this._mstApplicantRequirements = new EntitySet<mstApplicantRequirement>(new Action<mstApplicantRequirement>(this.attach_mstApplicantRequirements), new Action<mstApplicantRequirement>(this.detach_mstApplicantRequirements));
			this._trnLoans = new EntitySet<trnLoan>(new Action<trnLoan>(this.attach_trnLoans), new Action<trnLoan>(this.detach_trnLoans));
			this._mstArea = default(EntityRef<mstArea>);
			this._mstUser = default(EntityRef<mstUser>);
			this._mstUser1 = default(EntityRef<mstUser>);
			this._sysCivilStatus = default(EntityRef<sysCivilStatus>);
			this._sysResidenceType = default(EntityRef<sysResidenceType>);
			this._sysResidenceType1 = default(EntityRef<sysResidenceType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicantNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ApplicantNumber
		{
			get
			{
				return this._ApplicantNumber;
			}
			set
			{
				if ((this._ApplicantNumber != value))
				{
					this.OnApplicantNumberChanging(value);
					this.SendPropertyChanging();
					this._ApplicantNumber = value;
					this.SendPropertyChanged("ApplicantNumber");
					this.OnApplicantNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCoMaker", DbType="Bit NOT NULL")]
		public bool IsCoMaker
		{
			get
			{
				return this._IsCoMaker;
			}
			set
			{
				if ((this._IsCoMaker != value))
				{
					this.OnIsCoMakerChanging(value);
					this.SendPropertyChanging();
					this._IsCoMaker = value;
					this.SendPropertyChanged("IsCoMaker");
					this.OnIsCoMakerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Photo", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Photo
		{
			get
			{
				return this._Photo;
			}
			set
			{
				if ((this._Photo != value))
				{
					this.OnPhotoChanging(value);
					this.SendPropertyChanging();
					this._Photo = value;
					this.SendPropertyChanged("Photo");
					this.OnPhotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AreaId", DbType="Int NOT NULL")]
		public int AreaId
		{
			get
			{
				return this._AreaId;
			}
			set
			{
				if ((this._AreaId != value))
				{
					if (this._mstArea.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAreaIdChanging(value);
					this.SendPropertyChanging();
					this._AreaId = value;
					this.SendPropertyChanged("AreaId");
					this.OnAreaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicantLastName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ApplicantLastName
		{
			get
			{
				return this._ApplicantLastName;
			}
			set
			{
				if ((this._ApplicantLastName != value))
				{
					this.OnApplicantLastNameChanging(value);
					this.SendPropertyChanging();
					this._ApplicantLastName = value;
					this.SendPropertyChanged("ApplicantLastName");
					this.OnApplicantLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicantFirstName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ApplicantFirstName
		{
			get
			{
				return this._ApplicantFirstName;
			}
			set
			{
				if ((this._ApplicantFirstName != value))
				{
					this.OnApplicantFirstNameChanging(value);
					this.SendPropertyChanging();
					this._ApplicantFirstName = value;
					this.SendPropertyChanged("ApplicantFirstName");
					this.OnApplicantFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicantMiddleName", DbType="NVarChar(255)")]
		public string ApplicantMiddleName
		{
			get
			{
				return this._ApplicantMiddleName;
			}
			set
			{
				if ((this._ApplicantMiddleName != value))
				{
					this.OnApplicantMiddleNameChanging(value);
					this.SendPropertyChanging();
					this._ApplicantMiddleName = value;
					this.SendPropertyChanged("ApplicantMiddleName");
					this.OnApplicantMiddleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDate", DbType="DateTime NOT NULL")]
		public System.DateTime BirthDate
		{
			get
			{
				return this._BirthDate;
			}
			set
			{
				if ((this._BirthDate != value))
				{
					this.OnBirthDateChanging(value);
					this.SendPropertyChanging();
					this._BirthDate = value;
					this.SendPropertyChanged("BirthDate");
					this.OnBirthDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CivilStatusId", DbType="Int NOT NULL")]
		public int CivilStatusId
		{
			get
			{
				return this._CivilStatusId;
			}
			set
			{
				if ((this._CivilStatusId != value))
				{
					if (this._sysCivilStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCivilStatusIdChanging(value);
					this.SendPropertyChanging();
					this._CivilStatusId = value;
					this.SendPropertyChanged("CivilStatusId");
					this.OnCivilStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityAddress", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string CityAddress
		{
			get
			{
				return this._CityAddress;
			}
			set
			{
				if ((this._CityAddress != value))
				{
					this.OnCityAddressChanging(value);
					this.SendPropertyChanging();
					this._CityAddress = value;
					this.SendPropertyChanged("CityAddress");
					this.OnCityAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProvinceAddress", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ProvinceAddress
		{
			get
			{
				return this._ProvinceAddress;
			}
			set
			{
				if ((this._ProvinceAddress != value))
				{
					this.OnProvinceAddressChanging(value);
					this.SendPropertyChanging();
					this._ProvinceAddress = value;
					this.SendPropertyChanged("ProvinceAddress");
					this.OnProvinceAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ContactNumber
		{
			get
			{
				return this._ContactNumber;
			}
			set
			{
				if ((this._ContactNumber != value))
				{
					this.OnContactNumberChanging(value);
					this.SendPropertyChanging();
					this._ContactNumber = value;
					this.SendPropertyChanged("ContactNumber");
					this.OnContactNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResidenceTypeId", DbType="Int NOT NULL")]
		public int ResidenceTypeId
		{
			get
			{
				return this._ResidenceTypeId;
			}
			set
			{
				if ((this._ResidenceTypeId != value))
				{
					if (this._sysResidenceType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnResidenceTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ResidenceTypeId = value;
					this.SendPropertyChanged("ResidenceTypeId");
					this.OnResidenceTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResidenceMonthlyRentAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal ResidenceMonthlyRentAmount
		{
			get
			{
				return this._ResidenceMonthlyRentAmount;
			}
			set
			{
				if ((this._ResidenceMonthlyRentAmount != value))
				{
					this.OnResidenceMonthlyRentAmountChanging(value);
					this.SendPropertyChanging();
					this._ResidenceMonthlyRentAmount = value;
					this.SendPropertyChanged("ResidenceMonthlyRentAmount");
					this.OnResidenceMonthlyRentAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LandResidenceTypeId", DbType="Int NOT NULL")]
		public int LandResidenceTypeId
		{
			get
			{
				return this._LandResidenceTypeId;
			}
			set
			{
				if ((this._LandResidenceTypeId != value))
				{
					if (this._sysResidenceType1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLandResidenceTypeIdChanging(value);
					this.SendPropertyChanging();
					this._LandResidenceTypeId = value;
					this.SendPropertyChanged("LandResidenceTypeId");
					this.OnLandResidenceTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LandResidenceMonthlyRentAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal LandResidenceMonthlyRentAmount
		{
			get
			{
				return this._LandResidenceMonthlyRentAmount;
			}
			set
			{
				if ((this._LandResidenceMonthlyRentAmount != value))
				{
					this.OnLandResidenceMonthlyRentAmountChanging(value);
					this.SendPropertyChanging();
					this._LandResidenceMonthlyRentAmount = value;
					this.SendPropertyChanged("LandResidenceMonthlyRentAmount");
					this.OnLandResidenceMonthlyRentAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LengthOfStay", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string LengthOfStay
		{
			get
			{
				return this._LengthOfStay;
			}
			set
			{
				if ((this._LengthOfStay != value))
				{
					this.OnLengthOfStayChanging(value);
					this.SendPropertyChanging();
					this._LengthOfStay = value;
					this.SendPropertyChanged("LengthOfStay");
					this.OnLengthOfStayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessAddress", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string BusinessAddress
		{
			get
			{
				return this._BusinessAddress;
			}
			set
			{
				if ((this._BusinessAddress != value))
				{
					this.OnBusinessAddressChanging(value);
					this.SendPropertyChanging();
					this._BusinessAddress = value;
					this.SendPropertyChanged("BusinessAddress");
					this.OnBusinessAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessKaratulaName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string BusinessKaratulaName
		{
			get
			{
				return this._BusinessKaratulaName;
			}
			set
			{
				if ((this._BusinessKaratulaName != value))
				{
					this.OnBusinessKaratulaNameChanging(value);
					this.SendPropertyChanging();
					this._BusinessKaratulaName = value;
					this.SendPropertyChanged("BusinessKaratulaName");
					this.OnBusinessKaratulaNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessTelephoneNumber", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string BusinessTelephoneNumber
		{
			get
			{
				return this._BusinessTelephoneNumber;
			}
			set
			{
				if ((this._BusinessTelephoneNumber != value))
				{
					this.OnBusinessTelephoneNumberChanging(value);
					this.SendPropertyChanging();
					this._BusinessTelephoneNumber = value;
					this.SendPropertyChanged("BusinessTelephoneNumber");
					this.OnBusinessTelephoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessYear", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string BusinessYear
		{
			get
			{
				return this._BusinessYear;
			}
			set
			{
				if ((this._BusinessYear != value))
				{
					this.OnBusinessYearChanging(value);
					this.SendPropertyChanging();
					this._BusinessYear = value;
					this.SendPropertyChanged("BusinessYear");
					this.OnBusinessYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessMerchandise", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string BusinessMerchandise
		{
			get
			{
				return this._BusinessMerchandise;
			}
			set
			{
				if ((this._BusinessMerchandise != value))
				{
					this.OnBusinessMerchandiseChanging(value);
					this.SendPropertyChanging();
					this._BusinessMerchandise = value;
					this.SendPropertyChanged("BusinessMerchandise");
					this.OnBusinessMerchandiseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessStockValues", DbType="Decimal(18,5) NOT NULL")]
		public decimal BusinessStockValues
		{
			get
			{
				return this._BusinessStockValues;
			}
			set
			{
				if ((this._BusinessStockValues != value))
				{
					this.OnBusinessStockValuesChanging(value);
					this.SendPropertyChanging();
					this._BusinessStockValues = value;
					this.SendPropertyChanged("BusinessStockValues");
					this.OnBusinessStockValuesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessBeginningCapital", DbType="Decimal(18,5) NOT NULL")]
		public decimal BusinessBeginningCapital
		{
			get
			{
				return this._BusinessBeginningCapital;
			}
			set
			{
				if ((this._BusinessBeginningCapital != value))
				{
					this.OnBusinessBeginningCapitalChanging(value);
					this.SendPropertyChanging();
					this._BusinessBeginningCapital = value;
					this.SendPropertyChanged("BusinessBeginningCapital");
					this.OnBusinessBeginningCapitalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessLowSalesPeriod", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string BusinessLowSalesPeriod
		{
			get
			{
				return this._BusinessLowSalesPeriod;
			}
			set
			{
				if ((this._BusinessLowSalesPeriod != value))
				{
					this.OnBusinessLowSalesPeriodChanging(value);
					this.SendPropertyChanging();
					this._BusinessLowSalesPeriod = value;
					this.SendPropertyChanged("BusinessLowSalesPeriod");
					this.OnBusinessLowSalesPeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessLowestDailySales", DbType="Decimal(18,5) NOT NULL")]
		public decimal BusinessLowestDailySales
		{
			get
			{
				return this._BusinessLowestDailySales;
			}
			set
			{
				if ((this._BusinessLowestDailySales != value))
				{
					this.OnBusinessLowestDailySalesChanging(value);
					this.SendPropertyChanging();
					this._BusinessLowestDailySales = value;
					this.SendPropertyChanged("BusinessLowestDailySales");
					this.OnBusinessLowestDailySalesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessAverageDailySales", DbType="Decimal(18,5) NOT NULL")]
		public decimal BusinessAverageDailySales
		{
			get
			{
				return this._BusinessAverageDailySales;
			}
			set
			{
				if ((this._BusinessAverageDailySales != value))
				{
					this.OnBusinessAverageDailySalesChanging(value);
					this.SendPropertyChanging();
					this._BusinessAverageDailySales = value;
					this.SendPropertyChanged("BusinessAverageDailySales");
					this.OnBusinessAverageDailySalesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployedCompany", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string EmployedCompany
		{
			get
			{
				return this._EmployedCompany;
			}
			set
			{
				if ((this._EmployedCompany != value))
				{
					this.OnEmployedCompanyChanging(value);
					this.SendPropertyChanging();
					this._EmployedCompany = value;
					this.SendPropertyChanged("EmployedCompany");
					this.OnEmployedCompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployedCompanyAddress", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string EmployedCompanyAddress
		{
			get
			{
				return this._EmployedCompanyAddress;
			}
			set
			{
				if ((this._EmployedCompanyAddress != value))
				{
					this.OnEmployedCompanyAddressChanging(value);
					this.SendPropertyChanging();
					this._EmployedCompanyAddress = value;
					this.SendPropertyChanged("EmployedCompanyAddress");
					this.OnEmployedCompanyAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployedPositionOccupied", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string EmployedPositionOccupied
		{
			get
			{
				return this._EmployedPositionOccupied;
			}
			set
			{
				if ((this._EmployedPositionOccupied != value))
				{
					this.OnEmployedPositionOccupiedChanging(value);
					this.SendPropertyChanging();
					this._EmployedPositionOccupied = value;
					this.SendPropertyChanged("EmployedPositionOccupied");
					this.OnEmployedPositionOccupiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployedServiceLength", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string EmployedServiceLength
		{
			get
			{
				return this._EmployedServiceLength;
			}
			set
			{
				if ((this._EmployedServiceLength != value))
				{
					this.OnEmployedServiceLengthChanging(value);
					this.SendPropertyChanging();
					this._EmployedServiceLength = value;
					this.SendPropertyChanged("EmployedServiceLength");
					this.OnEmployedServiceLengthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployedTelephoneNumber", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string EmployedTelephoneNumber
		{
			get
			{
				return this._EmployedTelephoneNumber;
			}
			set
			{
				if ((this._EmployedTelephoneNumber != value))
				{
					this.OnEmployedTelephoneNumberChanging(value);
					this.SendPropertyChanging();
					this._EmployedTelephoneNumber = value;
					this.SendPropertyChanged("EmployedTelephoneNumber");
					this.OnEmployedTelephoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpouseFullName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string SpouseFullName
		{
			get
			{
				return this._SpouseFullName;
			}
			set
			{
				if ((this._SpouseFullName != value))
				{
					this.OnSpouseFullNameChanging(value);
					this.SendPropertyChanging();
					this._SpouseFullName = value;
					this.SendPropertyChanged("SpouseFullName");
					this.OnSpouseFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpouseEmployerBusiness", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string SpouseEmployerBusiness
		{
			get
			{
				return this._SpouseEmployerBusiness;
			}
			set
			{
				if ((this._SpouseEmployerBusiness != value))
				{
					this.OnSpouseEmployerBusinessChanging(value);
					this.SendPropertyChanging();
					this._SpouseEmployerBusiness = value;
					this.SendPropertyChanged("SpouseEmployerBusiness");
					this.OnSpouseEmployerBusinessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpouseEmployerBusinessAddress", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string SpouseEmployerBusinessAddress
		{
			get
			{
				return this._SpouseEmployerBusinessAddress;
			}
			set
			{
				if ((this._SpouseEmployerBusinessAddress != value))
				{
					this.OnSpouseEmployerBusinessAddressChanging(value);
					this.SendPropertyChanging();
					this._SpouseEmployerBusinessAddress = value;
					this.SendPropertyChanged("SpouseEmployerBusinessAddress");
					this.OnSpouseEmployerBusinessAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpouseBusinessTelephoneNumber", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string SpouseBusinessTelephoneNumber
		{
			get
			{
				return this._SpouseBusinessTelephoneNumber;
			}
			set
			{
				if ((this._SpouseBusinessTelephoneNumber != value))
				{
					this.OnSpouseBusinessTelephoneNumberChanging(value);
					this.SendPropertyChanging();
					this._SpouseBusinessTelephoneNumber = value;
					this.SendPropertyChanged("SpouseBusinessTelephoneNumber");
					this.OnSpouseBusinessTelephoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpousePositionOccupied", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string SpousePositionOccupied
		{
			get
			{
				return this._SpousePositionOccupied;
			}
			set
			{
				if ((this._SpousePositionOccupied != value))
				{
					this.OnSpousePositionOccupiedChanging(value);
					this.SendPropertyChanging();
					this._SpousePositionOccupied = value;
					this.SendPropertyChanged("SpousePositionOccupied");
					this.OnSpousePositionOccupiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpouseMonthlySalary", DbType="Decimal(18,5) NOT NULL")]
		public decimal SpouseMonthlySalary
		{
			get
			{
				return this._SpouseMonthlySalary;
			}
			set
			{
				if ((this._SpouseMonthlySalary != value))
				{
					this.OnSpouseMonthlySalaryChanging(value);
					this.SendPropertyChanging();
					this._SpouseMonthlySalary = value;
					this.SendPropertyChanged("SpouseMonthlySalary");
					this.OnSpouseMonthlySalaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpouseLengthOfService", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string SpouseLengthOfService
		{
			get
			{
				return this._SpouseLengthOfService;
			}
			set
			{
				if ((this._SpouseLengthOfService != value))
				{
					this.OnSpouseLengthOfServiceChanging(value);
					this.SendPropertyChanging();
					this._SpouseLengthOfService = value;
					this.SendPropertyChanged("SpouseLengthOfService");
					this.OnSpouseLengthOfServiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfChildren", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string NumberOfChildren
		{
			get
			{
				return this._NumberOfChildren;
			}
			set
			{
				if ((this._NumberOfChildren != value))
				{
					this.OnNumberOfChildrenChanging(value);
					this.SendPropertyChanging();
					this._NumberOfChildren = value;
					this.SendPropertyChanged("NumberOfChildren");
					this.OnNumberOfChildrenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Studying", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Studying
		{
			get
			{
				return this._Studying;
			}
			set
			{
				if ((this._Studying != value))
				{
					this.OnStudyingChanging(value);
					this.SendPropertyChanging();
					this._Studying = value;
					this.SendPropertyChanged("Studying");
					this.OnStudyingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Schools", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Schools
		{
			get
			{
				return this._Schools;
			}
			set
			{
				if ((this._Schools != value))
				{
					this.OnSchoolsChanging(value);
					this.SendPropertyChanging();
					this._Schools = value;
					this.SendPropertyChanged("Schools");
					this.OnSchoolsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserId", DbType="Int NOT NULL")]
		public int CreatedByUserId
		{
			get
			{
				return this._CreatedByUserId;
			}
			set
			{
				if ((this._CreatedByUserId != value))
				{
					if (this._mstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserId = value;
					this.SendPropertyChanged("CreatedByUserId");
					this.OnCreatedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedByUserId", DbType="Int NOT NULL")]
		public int UpdatedByUserId
		{
			get
			{
				return this._UpdatedByUserId;
			}
			set
			{
				if ((this._UpdatedByUserId != value))
				{
					if (this._mstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedByUserId = value;
					this.SendPropertyChanged("UpdatedByUserId");
					this.OnUpdatedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhotoSignature", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary PhotoSignature
		{
			get
			{
				return this._PhotoSignature;
			}
			set
			{
				if ((this._PhotoSignature != value))
				{
					this.OnPhotoSignatureChanging(value);
					this.SendPropertyChanging();
					this._PhotoSignature = value;
					this.SendPropertyChanged("PhotoSignature");
					this.OnPhotoSignatureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstApplicant_mstApplicantApplianceOwned", Storage="_mstApplicantApplianceOwneds", ThisKey="Id", OtherKey="ApplicantId")]
		public EntitySet<mstApplicantApplianceOwned> mstApplicantApplianceOwneds
		{
			get
			{
				return this._mstApplicantApplianceOwneds;
			}
			set
			{
				this._mstApplicantApplianceOwneds.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstApplicant_mstApplicantCoMakerStatement", Storage="_mstApplicantCoMakerStatements", ThisKey="Id", OtherKey="ApplicantId")]
		public EntitySet<mstApplicantCoMakerStatement> mstApplicantCoMakerStatements
		{
			get
			{
				return this._mstApplicantCoMakerStatements;
			}
			set
			{
				this._mstApplicantCoMakerStatements.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstApplicant_mstApplicantCoMakerStatement1", Storage="_mstApplicantCoMakerStatements1", ThisKey="Id", OtherKey="CoMakerApplicantId")]
		public EntitySet<mstApplicantCoMakerStatement> mstApplicantCoMakerStatements1
		{
			get
			{
				return this._mstApplicantCoMakerStatements1;
			}
			set
			{
				this._mstApplicantCoMakerStatements1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstApplicant_mstApplicantRealPropertiesOwned", Storage="_mstApplicantRealPropertiesOwneds", ThisKey="Id", OtherKey="ApplicantId")]
		public EntitySet<mstApplicantRealPropertiesOwned> mstApplicantRealPropertiesOwneds
		{
			get
			{
				return this._mstApplicantRealPropertiesOwneds;
			}
			set
			{
				this._mstApplicantRealPropertiesOwneds.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstApplicant_mstApplicantRequirement", Storage="_mstApplicantRequirements", ThisKey="Id", OtherKey="ApplicantId")]
		public EntitySet<mstApplicantRequirement> mstApplicantRequirements
		{
			get
			{
				return this._mstApplicantRequirements;
			}
			set
			{
				this._mstApplicantRequirements.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstApplicant_trnLoan", Storage="_trnLoans", ThisKey="Id", OtherKey="ApplicantId")]
		public EntitySet<trnLoan> trnLoans
		{
			get
			{
				return this._trnLoans;
			}
			set
			{
				this._trnLoans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstArea_mstApplicant", Storage="_mstArea", ThisKey="AreaId", OtherKey="Id", IsForeignKey=true)]
		public mstArea mstArea
		{
			get
			{
				return this._mstArea.Entity;
			}
			set
			{
				mstArea previousValue = this._mstArea.Entity;
				if (((previousValue != value) 
							|| (this._mstArea.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstArea.Entity = null;
						previousValue.mstApplicants.Remove(this);
					}
					this._mstArea.Entity = value;
					if ((value != null))
					{
						value.mstApplicants.Add(this);
						this._AreaId = value.Id;
					}
					else
					{
						this._AreaId = default(int);
					}
					this.SendPropertyChanged("mstArea");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUser_mstApplicant", Storage="_mstUser", ThisKey="CreatedByUserId", OtherKey="Id", IsForeignKey=true)]
		public mstUser mstUser
		{
			get
			{
				return this._mstUser.Entity;
			}
			set
			{
				mstUser previousValue = this._mstUser.Entity;
				if (((previousValue != value) 
							|| (this._mstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstUser.Entity = null;
						previousValue.mstApplicants.Remove(this);
					}
					this._mstUser.Entity = value;
					if ((value != null))
					{
						value.mstApplicants.Add(this);
						this._CreatedByUserId = value.Id;
					}
					else
					{
						this._CreatedByUserId = default(int);
					}
					this.SendPropertyChanged("mstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUser_mstApplicant1", Storage="_mstUser1", ThisKey="UpdatedByUserId", OtherKey="Id", IsForeignKey=true)]
		public mstUser mstUser1
		{
			get
			{
				return this._mstUser1.Entity;
			}
			set
			{
				mstUser previousValue = this._mstUser1.Entity;
				if (((previousValue != value) 
							|| (this._mstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstUser1.Entity = null;
						previousValue.mstApplicants1.Remove(this);
					}
					this._mstUser1.Entity = value;
					if ((value != null))
					{
						value.mstApplicants1.Add(this);
						this._UpdatedByUserId = value.Id;
					}
					else
					{
						this._UpdatedByUserId = default(int);
					}
					this.SendPropertyChanged("mstUser1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="sysCivilStatus_mstApplicant", Storage="_sysCivilStatus", ThisKey="CivilStatusId", OtherKey="Id", IsForeignKey=true)]
		public sysCivilStatus sysCivilStatus
		{
			get
			{
				return this._sysCivilStatus.Entity;
			}
			set
			{
				sysCivilStatus previousValue = this._sysCivilStatus.Entity;
				if (((previousValue != value) 
							|| (this._sysCivilStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._sysCivilStatus.Entity = null;
						previousValue.mstApplicants.Remove(this);
					}
					this._sysCivilStatus.Entity = value;
					if ((value != null))
					{
						value.mstApplicants.Add(this);
						this._CivilStatusId = value.Id;
					}
					else
					{
						this._CivilStatusId = default(int);
					}
					this.SendPropertyChanged("sysCivilStatus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="sysResidenceType_mstApplicant", Storage="_sysResidenceType", ThisKey="ResidenceTypeId", OtherKey="Id", IsForeignKey=true)]
		public sysResidenceType sysResidenceType
		{
			get
			{
				return this._sysResidenceType.Entity;
			}
			set
			{
				sysResidenceType previousValue = this._sysResidenceType.Entity;
				if (((previousValue != value) 
							|| (this._sysResidenceType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._sysResidenceType.Entity = null;
						previousValue.mstApplicants.Remove(this);
					}
					this._sysResidenceType.Entity = value;
					if ((value != null))
					{
						value.mstApplicants.Add(this);
						this._ResidenceTypeId = value.Id;
					}
					else
					{
						this._ResidenceTypeId = default(int);
					}
					this.SendPropertyChanged("sysResidenceType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="sysResidenceType_mstApplicant1", Storage="_sysResidenceType1", ThisKey="LandResidenceTypeId", OtherKey="Id", IsForeignKey=true)]
		public sysResidenceType sysResidenceType1
		{
			get
			{
				return this._sysResidenceType1.Entity;
			}
			set
			{
				sysResidenceType previousValue = this._sysResidenceType1.Entity;
				if (((previousValue != value) 
							|| (this._sysResidenceType1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._sysResidenceType1.Entity = null;
						previousValue.mstApplicants1.Remove(this);
					}
					this._sysResidenceType1.Entity = value;
					if ((value != null))
					{
						value.mstApplicants1.Add(this);
						this._LandResidenceTypeId = value.Id;
					}
					else
					{
						this._LandResidenceTypeId = default(int);
					}
					this.SendPropertyChanged("sysResidenceType1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_mstApplicantApplianceOwneds(mstApplicantApplianceOwned entity)
		{
			this.SendPropertyChanging();
			entity.mstApplicant = this;
		}
		
		private void detach_mstApplicantApplianceOwneds(mstApplicantApplianceOwned entity)
		{
			this.SendPropertyChanging();
			entity.mstApplicant = null;
		}
		
		private void attach_mstApplicantCoMakerStatements(mstApplicantCoMakerStatement entity)
		{
			this.SendPropertyChanging();
			entity.mstApplicant = this;
		}
		
		private void detach_mstApplicantCoMakerStatements(mstApplicantCoMakerStatement entity)
		{
			this.SendPropertyChanging();
			entity.mstApplicant = null;
		}
		
		private void attach_mstApplicantCoMakerStatements1(mstApplicantCoMakerStatement entity)
		{
			this.SendPropertyChanging();
			entity.mstApplicant1 = this;
		}
		
		private void detach_mstApplicantCoMakerStatements1(mstApplicantCoMakerStatement entity)
		{
			this.SendPropertyChanging();
			entity.mstApplicant1 = null;
		}
		
		private void attach_mstApplicantRealPropertiesOwneds(mstApplicantRealPropertiesOwned entity)
		{
			this.SendPropertyChanging();
			entity.mstApplicant = this;
		}
		
		private void detach_mstApplicantRealPropertiesOwneds(mstApplicantRealPropertiesOwned entity)
		{
			this.SendPropertyChanging();
			entity.mstApplicant = null;
		}
		
		private void attach_mstApplicantRequirements(mstApplicantRequirement entity)
		{
			this.SendPropertyChanging();
			entity.mstApplicant = this;
		}
		
		private void detach_mstApplicantRequirements(mstApplicantRequirement entity)
		{
			this.SendPropertyChanging();
			entity.mstApplicant = null;
		}
		
		private void attach_trnLoans(trnLoan entity)
		{
			this.SendPropertyChanging();
			entity.mstApplicant = this;
		}
		
		private void detach_trnLoans(trnLoan entity)
		{
			this.SendPropertyChanging();
			entity.mstApplicant = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mstApplicantApplianceOwned")]
	public partial class mstApplicantApplianceOwned : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ApplicantId;
		
		private string _ApplianceBrand;
		
		private string _PresentValue;
		
		private EntityRef<mstApplicant> _mstApplicant;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnApplicantIdChanging(int value);
    partial void OnApplicantIdChanged();
    partial void OnApplianceBrandChanging(string value);
    partial void OnApplianceBrandChanged();
    partial void OnPresentValueChanging(string value);
    partial void OnPresentValueChanged();
    #endregion
		
		public mstApplicantApplianceOwned()
		{
			this._mstApplicant = default(EntityRef<mstApplicant>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicantId", DbType="Int NOT NULL")]
		public int ApplicantId
		{
			get
			{
				return this._ApplicantId;
			}
			set
			{
				if ((this._ApplicantId != value))
				{
					if (this._mstApplicant.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicantIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicantId = value;
					this.SendPropertyChanged("ApplicantId");
					this.OnApplicantIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplianceBrand", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string ApplianceBrand
		{
			get
			{
				return this._ApplianceBrand;
			}
			set
			{
				if ((this._ApplianceBrand != value))
				{
					this.OnApplianceBrandChanging(value);
					this.SendPropertyChanging();
					this._ApplianceBrand = value;
					this.SendPropertyChanged("ApplianceBrand");
					this.OnApplianceBrandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PresentValue", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string PresentValue
		{
			get
			{
				return this._PresentValue;
			}
			set
			{
				if ((this._PresentValue != value))
				{
					this.OnPresentValueChanging(value);
					this.SendPropertyChanging();
					this._PresentValue = value;
					this.SendPropertyChanged("PresentValue");
					this.OnPresentValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstApplicant_mstApplicantApplianceOwned", Storage="_mstApplicant", ThisKey="ApplicantId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public mstApplicant mstApplicant
		{
			get
			{
				return this._mstApplicant.Entity;
			}
			set
			{
				mstApplicant previousValue = this._mstApplicant.Entity;
				if (((previousValue != value) 
							|| (this._mstApplicant.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstApplicant.Entity = null;
						previousValue.mstApplicantApplianceOwneds.Remove(this);
					}
					this._mstApplicant.Entity = value;
					if ((value != null))
					{
						value.mstApplicantApplianceOwneds.Add(this);
						this._ApplicantId = value.Id;
					}
					else
					{
						this._ApplicantId = default(int);
					}
					this.SendPropertyChanged("mstApplicant");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mstApplicantCoMakerStatement")]
	public partial class mstApplicantCoMakerStatement : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ApplicantId;
		
		private int _CoMakerApplicantId;
		
		private EntityRef<mstApplicant> _mstApplicant;
		
		private EntityRef<mstApplicant> _mstApplicant1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnApplicantIdChanging(int value);
    partial void OnApplicantIdChanged();
    partial void OnCoMakerApplicantIdChanging(int value);
    partial void OnCoMakerApplicantIdChanged();
    #endregion
		
		public mstApplicantCoMakerStatement()
		{
			this._mstApplicant = default(EntityRef<mstApplicant>);
			this._mstApplicant1 = default(EntityRef<mstApplicant>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicantId", DbType="Int NOT NULL")]
		public int ApplicantId
		{
			get
			{
				return this._ApplicantId;
			}
			set
			{
				if ((this._ApplicantId != value))
				{
					if (this._mstApplicant.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicantIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicantId = value;
					this.SendPropertyChanged("ApplicantId");
					this.OnApplicantIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CoMakerApplicantId", DbType="Int NOT NULL")]
		public int CoMakerApplicantId
		{
			get
			{
				return this._CoMakerApplicantId;
			}
			set
			{
				if ((this._CoMakerApplicantId != value))
				{
					if (this._mstApplicant1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCoMakerApplicantIdChanging(value);
					this.SendPropertyChanging();
					this._CoMakerApplicantId = value;
					this.SendPropertyChanged("CoMakerApplicantId");
					this.OnCoMakerApplicantIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstApplicant_mstApplicantCoMakerStatement", Storage="_mstApplicant", ThisKey="ApplicantId", OtherKey="Id", IsForeignKey=true)]
		public mstApplicant mstApplicant
		{
			get
			{
				return this._mstApplicant.Entity;
			}
			set
			{
				mstApplicant previousValue = this._mstApplicant.Entity;
				if (((previousValue != value) 
							|| (this._mstApplicant.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstApplicant.Entity = null;
						previousValue.mstApplicantCoMakerStatements.Remove(this);
					}
					this._mstApplicant.Entity = value;
					if ((value != null))
					{
						value.mstApplicantCoMakerStatements.Add(this);
						this._ApplicantId = value.Id;
					}
					else
					{
						this._ApplicantId = default(int);
					}
					this.SendPropertyChanged("mstApplicant");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstApplicant_mstApplicantCoMakerStatement1", Storage="_mstApplicant1", ThisKey="CoMakerApplicantId", OtherKey="Id", IsForeignKey=true)]
		public mstApplicant mstApplicant1
		{
			get
			{
				return this._mstApplicant1.Entity;
			}
			set
			{
				mstApplicant previousValue = this._mstApplicant1.Entity;
				if (((previousValue != value) 
							|| (this._mstApplicant1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstApplicant1.Entity = null;
						previousValue.mstApplicantCoMakerStatements1.Remove(this);
					}
					this._mstApplicant1.Entity = value;
					if ((value != null))
					{
						value.mstApplicantCoMakerStatements1.Add(this);
						this._CoMakerApplicantId = value.Id;
					}
					else
					{
						this._CoMakerApplicantId = default(int);
					}
					this.SendPropertyChanged("mstApplicant1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mstApplicantRealPropertiesOwned")]
	public partial class mstApplicantRealPropertiesOwned : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ApplicantId;
		
		private string _Real;
		
		private string _Location;
		
		private string _PresentValue;
		
		private string _EcumberedTo;
		
		private EntityRef<mstApplicant> _mstApplicant;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnApplicantIdChanging(int value);
    partial void OnApplicantIdChanged();
    partial void OnRealChanging(string value);
    partial void OnRealChanged();
    partial void OnLocationChanging(string value);
    partial void OnLocationChanged();
    partial void OnPresentValueChanging(string value);
    partial void OnPresentValueChanged();
    partial void OnEcumberedToChanging(string value);
    partial void OnEcumberedToChanged();
    #endregion
		
		public mstApplicantRealPropertiesOwned()
		{
			this._mstApplicant = default(EntityRef<mstApplicant>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicantId", DbType="Int NOT NULL")]
		public int ApplicantId
		{
			get
			{
				return this._ApplicantId;
			}
			set
			{
				if ((this._ApplicantId != value))
				{
					if (this._mstApplicant.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicantIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicantId = value;
					this.SendPropertyChanged("ApplicantId");
					this.OnApplicantIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Real", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Real
		{
			get
			{
				return this._Real;
			}
			set
			{
				if ((this._Real != value))
				{
					this.OnRealChanging(value);
					this.SendPropertyChanging();
					this._Real = value;
					this.SendPropertyChanged("Real");
					this.OnRealChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this.OnLocationChanging(value);
					this.SendPropertyChanging();
					this._Location = value;
					this.SendPropertyChanged("Location");
					this.OnLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PresentValue", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string PresentValue
		{
			get
			{
				return this._PresentValue;
			}
			set
			{
				if ((this._PresentValue != value))
				{
					this.OnPresentValueChanging(value);
					this.SendPropertyChanging();
					this._PresentValue = value;
					this.SendPropertyChanged("PresentValue");
					this.OnPresentValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EcumberedTo", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string EcumberedTo
		{
			get
			{
				return this._EcumberedTo;
			}
			set
			{
				if ((this._EcumberedTo != value))
				{
					this.OnEcumberedToChanging(value);
					this.SendPropertyChanging();
					this._EcumberedTo = value;
					this.SendPropertyChanged("EcumberedTo");
					this.OnEcumberedToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstApplicant_mstApplicantRealPropertiesOwned", Storage="_mstApplicant", ThisKey="ApplicantId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public mstApplicant mstApplicant
		{
			get
			{
				return this._mstApplicant.Entity;
			}
			set
			{
				mstApplicant previousValue = this._mstApplicant.Entity;
				if (((previousValue != value) 
							|| (this._mstApplicant.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstApplicant.Entity = null;
						previousValue.mstApplicantRealPropertiesOwneds.Remove(this);
					}
					this._mstApplicant.Entity = value;
					if ((value != null))
					{
						value.mstApplicantRealPropertiesOwneds.Add(this);
						this._ApplicantId = value.Id;
					}
					else
					{
						this._ApplicantId = default(int);
					}
					this.SendPropertyChanged("mstApplicant");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mstApplicantRequirements")]
	public partial class mstApplicantRequirement : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ApplicantId;
		
		private int _RequirementId;
		
		private string _Note;
		
		private System.DateTime _ValidDateUntil;
		
		private EntityRef<mstApplicant> _mstApplicant;
		
		private EntityRef<mstRequirement> _mstRequirement;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnApplicantIdChanging(int value);
    partial void OnApplicantIdChanged();
    partial void OnRequirementIdChanging(int value);
    partial void OnRequirementIdChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnValidDateUntilChanging(System.DateTime value);
    partial void OnValidDateUntilChanged();
    #endregion
		
		public mstApplicantRequirement()
		{
			this._mstApplicant = default(EntityRef<mstApplicant>);
			this._mstRequirement = default(EntityRef<mstRequirement>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicantId", DbType="Int NOT NULL")]
		public int ApplicantId
		{
			get
			{
				return this._ApplicantId;
			}
			set
			{
				if ((this._ApplicantId != value))
				{
					if (this._mstApplicant.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicantIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicantId = value;
					this.SendPropertyChanged("ApplicantId");
					this.OnApplicantIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequirementId", DbType="Int NOT NULL")]
		public int RequirementId
		{
			get
			{
				return this._RequirementId;
			}
			set
			{
				if ((this._RequirementId != value))
				{
					if (this._mstRequirement.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequirementIdChanging(value);
					this.SendPropertyChanging();
					this._RequirementId = value;
					this.SendPropertyChanged("RequirementId");
					this.OnRequirementIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValidDateUntil", DbType="DateTime NOT NULL")]
		public System.DateTime ValidDateUntil
		{
			get
			{
				return this._ValidDateUntil;
			}
			set
			{
				if ((this._ValidDateUntil != value))
				{
					this.OnValidDateUntilChanging(value);
					this.SendPropertyChanging();
					this._ValidDateUntil = value;
					this.SendPropertyChanged("ValidDateUntil");
					this.OnValidDateUntilChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstApplicant_mstApplicantRequirement", Storage="_mstApplicant", ThisKey="ApplicantId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public mstApplicant mstApplicant
		{
			get
			{
				return this._mstApplicant.Entity;
			}
			set
			{
				mstApplicant previousValue = this._mstApplicant.Entity;
				if (((previousValue != value) 
							|| (this._mstApplicant.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstApplicant.Entity = null;
						previousValue.mstApplicantRequirements.Remove(this);
					}
					this._mstApplicant.Entity = value;
					if ((value != null))
					{
						value.mstApplicantRequirements.Add(this);
						this._ApplicantId = value.Id;
					}
					else
					{
						this._ApplicantId = default(int);
					}
					this.SendPropertyChanged("mstApplicant");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstRequirement_mstApplicantRequirement", Storage="_mstRequirement", ThisKey="RequirementId", OtherKey="Id", IsForeignKey=true)]
		public mstRequirement mstRequirement
		{
			get
			{
				return this._mstRequirement.Entity;
			}
			set
			{
				mstRequirement previousValue = this._mstRequirement.Entity;
				if (((previousValue != value) 
							|| (this._mstRequirement.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstRequirement.Entity = null;
						previousValue.mstApplicantRequirements.Remove(this);
					}
					this._mstRequirement.Entity = value;
					if ((value != null))
					{
						value.mstApplicantRequirements.Add(this);
						this._RequirementId = value.Id;
					}
					else
					{
						this._RequirementId = default(int);
					}
					this.SendPropertyChanged("mstRequirement");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mstArea")]
	public partial class mstArea : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _AreaNumber;
		
		private string _Area;
		
		private string _Description;
		
		private int _SupervisorStaffId;
		
		private bool _IsLocked;
		
		private int _CreatedByUserId;
		
		private System.DateTime _CreatedDateTime;
		
		private int _UpdatedByUserId;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntitySet<trnRemittance> _trnRemittances;
		
		private EntitySet<mstApplicant> _mstApplicants;
		
		private EntitySet<mstAreaStaff> _mstAreaStaffs;
		
		private EntityRef<mstStaff> _mstStaff;
		
		private EntityRef<mstUser> _mstUser;
		
		private EntityRef<mstUser> _mstUser1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAreaNumberChanging(string value);
    partial void OnAreaNumberChanged();
    partial void OnAreaChanging(string value);
    partial void OnAreaChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnSupervisorStaffIdChanging(int value);
    partial void OnSupervisorStaffIdChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByUserIdChanging(int value);
    partial void OnCreatedByUserIdChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByUserIdChanging(int value);
    partial void OnUpdatedByUserIdChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public mstArea()
		{
			this._trnRemittances = new EntitySet<trnRemittance>(new Action<trnRemittance>(this.attach_trnRemittances), new Action<trnRemittance>(this.detach_trnRemittances));
			this._mstApplicants = new EntitySet<mstApplicant>(new Action<mstApplicant>(this.attach_mstApplicants), new Action<mstApplicant>(this.detach_mstApplicants));
			this._mstAreaStaffs = new EntitySet<mstAreaStaff>(new Action<mstAreaStaff>(this.attach_mstAreaStaffs), new Action<mstAreaStaff>(this.detach_mstAreaStaffs));
			this._mstStaff = default(EntityRef<mstStaff>);
			this._mstUser = default(EntityRef<mstUser>);
			this._mstUser1 = default(EntityRef<mstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AreaNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string AreaNumber
		{
			get
			{
				return this._AreaNumber;
			}
			set
			{
				if ((this._AreaNumber != value))
				{
					this.OnAreaNumberChanging(value);
					this.SendPropertyChanging();
					this._AreaNumber = value;
					this.SendPropertyChanged("AreaNumber");
					this.OnAreaNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Area", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Area
		{
			get
			{
				return this._Area;
			}
			set
			{
				if ((this._Area != value))
				{
					this.OnAreaChanging(value);
					this.SendPropertyChanging();
					this._Area = value;
					this.SendPropertyChanged("Area");
					this.OnAreaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupervisorStaffId", DbType="Int NOT NULL")]
		public int SupervisorStaffId
		{
			get
			{
				return this._SupervisorStaffId;
			}
			set
			{
				if ((this._SupervisorStaffId != value))
				{
					if (this._mstStaff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupervisorStaffIdChanging(value);
					this.SendPropertyChanging();
					this._SupervisorStaffId = value;
					this.SendPropertyChanged("SupervisorStaffId");
					this.OnSupervisorStaffIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserId", DbType="Int NOT NULL")]
		public int CreatedByUserId
		{
			get
			{
				return this._CreatedByUserId;
			}
			set
			{
				if ((this._CreatedByUserId != value))
				{
					if (this._mstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserId = value;
					this.SendPropertyChanged("CreatedByUserId");
					this.OnCreatedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedByUserId", DbType="Int NOT NULL")]
		public int UpdatedByUserId
		{
			get
			{
				return this._UpdatedByUserId;
			}
			set
			{
				if ((this._UpdatedByUserId != value))
				{
					if (this._mstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedByUserId = value;
					this.SendPropertyChanged("UpdatedByUserId");
					this.OnUpdatedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstArea_trnRemittance", Storage="_trnRemittances", ThisKey="Id", OtherKey="AreaId")]
		public EntitySet<trnRemittance> trnRemittances
		{
			get
			{
				return this._trnRemittances;
			}
			set
			{
				this._trnRemittances.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstArea_mstApplicant", Storage="_mstApplicants", ThisKey="Id", OtherKey="AreaId")]
		public EntitySet<mstApplicant> mstApplicants
		{
			get
			{
				return this._mstApplicants;
			}
			set
			{
				this._mstApplicants.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstArea_mstAreaStaff", Storage="_mstAreaStaffs", ThisKey="Id", OtherKey="AreaId")]
		public EntitySet<mstAreaStaff> mstAreaStaffs
		{
			get
			{
				return this._mstAreaStaffs;
			}
			set
			{
				this._mstAreaStaffs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstStaff_mstArea", Storage="_mstStaff", ThisKey="SupervisorStaffId", OtherKey="Id", IsForeignKey=true)]
		public mstStaff mstStaff
		{
			get
			{
				return this._mstStaff.Entity;
			}
			set
			{
				mstStaff previousValue = this._mstStaff.Entity;
				if (((previousValue != value) 
							|| (this._mstStaff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstStaff.Entity = null;
						previousValue.mstAreas.Remove(this);
					}
					this._mstStaff.Entity = value;
					if ((value != null))
					{
						value.mstAreas.Add(this);
						this._SupervisorStaffId = value.Id;
					}
					else
					{
						this._SupervisorStaffId = default(int);
					}
					this.SendPropertyChanged("mstStaff");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUser_mstArea", Storage="_mstUser", ThisKey="CreatedByUserId", OtherKey="Id", IsForeignKey=true)]
		public mstUser mstUser
		{
			get
			{
				return this._mstUser.Entity;
			}
			set
			{
				mstUser previousValue = this._mstUser.Entity;
				if (((previousValue != value) 
							|| (this._mstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstUser.Entity = null;
						previousValue.mstAreas.Remove(this);
					}
					this._mstUser.Entity = value;
					if ((value != null))
					{
						value.mstAreas.Add(this);
						this._CreatedByUserId = value.Id;
					}
					else
					{
						this._CreatedByUserId = default(int);
					}
					this.SendPropertyChanged("mstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUser_mstArea1", Storage="_mstUser1", ThisKey="UpdatedByUserId", OtherKey="Id", IsForeignKey=true)]
		public mstUser mstUser1
		{
			get
			{
				return this._mstUser1.Entity;
			}
			set
			{
				mstUser previousValue = this._mstUser1.Entity;
				if (((previousValue != value) 
							|| (this._mstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstUser1.Entity = null;
						previousValue.mstAreas1.Remove(this);
					}
					this._mstUser1.Entity = value;
					if ((value != null))
					{
						value.mstAreas1.Add(this);
						this._UpdatedByUserId = value.Id;
					}
					else
					{
						this._UpdatedByUserId = default(int);
					}
					this.SendPropertyChanged("mstUser1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_trnRemittances(trnRemittance entity)
		{
			this.SendPropertyChanging();
			entity.mstArea = this;
		}
		
		private void detach_trnRemittances(trnRemittance entity)
		{
			this.SendPropertyChanging();
			entity.mstArea = null;
		}
		
		private void attach_mstApplicants(mstApplicant entity)
		{
			this.SendPropertyChanging();
			entity.mstArea = this;
		}
		
		private void detach_mstApplicants(mstApplicant entity)
		{
			this.SendPropertyChanging();
			entity.mstArea = null;
		}
		
		private void attach_mstAreaStaffs(mstAreaStaff entity)
		{
			this.SendPropertyChanging();
			entity.mstArea = this;
		}
		
		private void detach_mstAreaStaffs(mstAreaStaff entity)
		{
			this.SendPropertyChanging();
			entity.mstArea = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mstAreaStaff")]
	public partial class mstAreaStaff : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _AreaId;
		
		private int _StaffId;
		
		private EntityRef<mstArea> _mstArea;
		
		private EntityRef<mstStaff> _mstStaff;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAreaIdChanging(int value);
    partial void OnAreaIdChanged();
    partial void OnStaffIdChanging(int value);
    partial void OnStaffIdChanged();
    #endregion
		
		public mstAreaStaff()
		{
			this._mstArea = default(EntityRef<mstArea>);
			this._mstStaff = default(EntityRef<mstStaff>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AreaId", DbType="Int NOT NULL")]
		public int AreaId
		{
			get
			{
				return this._AreaId;
			}
			set
			{
				if ((this._AreaId != value))
				{
					if (this._mstArea.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAreaIdChanging(value);
					this.SendPropertyChanging();
					this._AreaId = value;
					this.SendPropertyChanged("AreaId");
					this.OnAreaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffId", DbType="Int NOT NULL")]
		public int StaffId
		{
			get
			{
				return this._StaffId;
			}
			set
			{
				if ((this._StaffId != value))
				{
					if (this._mstStaff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStaffIdChanging(value);
					this.SendPropertyChanging();
					this._StaffId = value;
					this.SendPropertyChanged("StaffId");
					this.OnStaffIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstArea_mstAreaStaff", Storage="_mstArea", ThisKey="AreaId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public mstArea mstArea
		{
			get
			{
				return this._mstArea.Entity;
			}
			set
			{
				mstArea previousValue = this._mstArea.Entity;
				if (((previousValue != value) 
							|| (this._mstArea.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstArea.Entity = null;
						previousValue.mstAreaStaffs.Remove(this);
					}
					this._mstArea.Entity = value;
					if ((value != null))
					{
						value.mstAreaStaffs.Add(this);
						this._AreaId = value.Id;
					}
					else
					{
						this._AreaId = default(int);
					}
					this.SendPropertyChanged("mstArea");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstStaff_mstAreaStaff", Storage="_mstStaff", ThisKey="StaffId", OtherKey="Id", IsForeignKey=true)]
		public mstStaff mstStaff
		{
			get
			{
				return this._mstStaff.Entity;
			}
			set
			{
				mstStaff previousValue = this._mstStaff.Entity;
				if (((previousValue != value) 
							|| (this._mstStaff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstStaff.Entity = null;
						previousValue.mstAreaStaffs.Remove(this);
					}
					this._mstStaff.Entity = value;
					if ((value != null))
					{
						value.mstAreaStaffs.Add(this);
						this._StaffId = value.Id;
					}
					else
					{
						this._StaffId = default(int);
					}
					this.SendPropertyChanged("mstStaff");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mstCompany")]
	public partial class mstCompany : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Company;
		
		private string _Address;
		
		private string _ContactNumber;
		
		private bool _IsLocked;
		
		private int _CreatedByUserId;
		
		private System.DateTime _CreatedDateTime;
		
		private int _UpdatedByUserId;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntitySet<mstUser> _mstUsers;
		
		private EntityRef<mstUser> _mstUser;
		
		private EntityRef<mstUser> _mstUser1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnContactNumberChanging(string value);
    partial void OnContactNumberChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByUserIdChanging(int value);
    partial void OnCreatedByUserIdChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByUserIdChanging(int value);
    partial void OnUpdatedByUserIdChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public mstCompany()
		{
			this._mstUsers = new EntitySet<mstUser>(new Action<mstUser>(this.attach_mstUsers), new Action<mstUser>(this.detach_mstUsers));
			this._mstUser = default(EntityRef<mstUser>);
			this._mstUser1 = default(EntityRef<mstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ContactNumber
		{
			get
			{
				return this._ContactNumber;
			}
			set
			{
				if ((this._ContactNumber != value))
				{
					this.OnContactNumberChanging(value);
					this.SendPropertyChanging();
					this._ContactNumber = value;
					this.SendPropertyChanged("ContactNumber");
					this.OnContactNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserId", DbType="Int NOT NULL")]
		public int CreatedByUserId
		{
			get
			{
				return this._CreatedByUserId;
			}
			set
			{
				if ((this._CreatedByUserId != value))
				{
					if (this._mstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserId = value;
					this.SendPropertyChanged("CreatedByUserId");
					this.OnCreatedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedByUserId", DbType="Int NOT NULL")]
		public int UpdatedByUserId
		{
			get
			{
				return this._UpdatedByUserId;
			}
			set
			{
				if ((this._UpdatedByUserId != value))
				{
					if (this._mstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedByUserId = value;
					this.SendPropertyChanged("UpdatedByUserId");
					this.OnUpdatedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstCompany_mstUser", Storage="_mstUsers", ThisKey="Id", OtherKey="CompanyId")]
		public EntitySet<mstUser> mstUsers
		{
			get
			{
				return this._mstUsers;
			}
			set
			{
				this._mstUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUser_mstCompany", Storage="_mstUser", ThisKey="CreatedByUserId", OtherKey="Id", IsForeignKey=true)]
		public mstUser mstUser
		{
			get
			{
				return this._mstUser.Entity;
			}
			set
			{
				mstUser previousValue = this._mstUser.Entity;
				if (((previousValue != value) 
							|| (this._mstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstUser.Entity = null;
						previousValue.mstCompanies.Remove(this);
					}
					this._mstUser.Entity = value;
					if ((value != null))
					{
						value.mstCompanies.Add(this);
						this._CreatedByUserId = value.Id;
					}
					else
					{
						this._CreatedByUserId = default(int);
					}
					this.SendPropertyChanged("mstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUser_mstCompany1", Storage="_mstUser1", ThisKey="UpdatedByUserId", OtherKey="Id", IsForeignKey=true)]
		public mstUser mstUser1
		{
			get
			{
				return this._mstUser1.Entity;
			}
			set
			{
				mstUser previousValue = this._mstUser1.Entity;
				if (((previousValue != value) 
							|| (this._mstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstUser1.Entity = null;
						previousValue.mstCompanies1.Remove(this);
					}
					this._mstUser1.Entity = value;
					if ((value != null))
					{
						value.mstCompanies1.Add(this);
						this._UpdatedByUserId = value.Id;
					}
					else
					{
						this._UpdatedByUserId = default(int);
					}
					this.SendPropertyChanged("mstUser1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_mstUsers(mstUser entity)
		{
			this.SendPropertyChanging();
			entity.mstCompany = this;
		}
		
		private void detach_mstUsers(mstUser entity)
		{
			this.SendPropertyChanging();
			entity.mstCompany = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mstDeductions")]
	public partial class mstDeduction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Deduction;
		
		private string _Description;
		
		private decimal _PercentageRate;
		
		private decimal _DeductionAmount;
		
		private int _CreatedByUserId;
		
		private System.DateTime _CreatedDateTime;
		
		private int _UpdatedByUserId;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntitySet<trnLoanDeduction> _trnLoanDeductions;
		
		private EntityRef<mstUser> _mstUser;
		
		private EntityRef<mstUser> _mstUser1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDeductionChanging(string value);
    partial void OnDeductionChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnPercentageRateChanging(decimal value);
    partial void OnPercentageRateChanged();
    partial void OnDeductionAmountChanging(decimal value);
    partial void OnDeductionAmountChanged();
    partial void OnCreatedByUserIdChanging(int value);
    partial void OnCreatedByUserIdChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByUserIdChanging(int value);
    partial void OnUpdatedByUserIdChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public mstDeduction()
		{
			this._trnLoanDeductions = new EntitySet<trnLoanDeduction>(new Action<trnLoanDeduction>(this.attach_trnLoanDeductions), new Action<trnLoanDeduction>(this.detach_trnLoanDeductions));
			this._mstUser = default(EntityRef<mstUser>);
			this._mstUser1 = default(EntityRef<mstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deduction", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Deduction
		{
			get
			{
				return this._Deduction;
			}
			set
			{
				if ((this._Deduction != value))
				{
					this.OnDeductionChanging(value);
					this.SendPropertyChanging();
					this._Deduction = value;
					this.SendPropertyChanged("Deduction");
					this.OnDeductionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PercentageRate", DbType="Decimal(18,5) NOT NULL")]
		public decimal PercentageRate
		{
			get
			{
				return this._PercentageRate;
			}
			set
			{
				if ((this._PercentageRate != value))
				{
					this.OnPercentageRateChanging(value);
					this.SendPropertyChanging();
					this._PercentageRate = value;
					this.SendPropertyChanged("PercentageRate");
					this.OnPercentageRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeductionAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal DeductionAmount
		{
			get
			{
				return this._DeductionAmount;
			}
			set
			{
				if ((this._DeductionAmount != value))
				{
					this.OnDeductionAmountChanging(value);
					this.SendPropertyChanging();
					this._DeductionAmount = value;
					this.SendPropertyChanged("DeductionAmount");
					this.OnDeductionAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserId", DbType="Int NOT NULL")]
		public int CreatedByUserId
		{
			get
			{
				return this._CreatedByUserId;
			}
			set
			{
				if ((this._CreatedByUserId != value))
				{
					if (this._mstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserId = value;
					this.SendPropertyChanged("CreatedByUserId");
					this.OnCreatedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedByUserId", DbType="Int NOT NULL")]
		public int UpdatedByUserId
		{
			get
			{
				return this._UpdatedByUserId;
			}
			set
			{
				if ((this._UpdatedByUserId != value))
				{
					if (this._mstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedByUserId = value;
					this.SendPropertyChanged("UpdatedByUserId");
					this.OnUpdatedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstDeduction_trnLoanDeduction", Storage="_trnLoanDeductions", ThisKey="Id", OtherKey="DeductionId")]
		public EntitySet<trnLoanDeduction> trnLoanDeductions
		{
			get
			{
				return this._trnLoanDeductions;
			}
			set
			{
				this._trnLoanDeductions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUser_mstDeduction", Storage="_mstUser", ThisKey="CreatedByUserId", OtherKey="Id", IsForeignKey=true)]
		public mstUser mstUser
		{
			get
			{
				return this._mstUser.Entity;
			}
			set
			{
				mstUser previousValue = this._mstUser.Entity;
				if (((previousValue != value) 
							|| (this._mstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstUser.Entity = null;
						previousValue.mstDeductions.Remove(this);
					}
					this._mstUser.Entity = value;
					if ((value != null))
					{
						value.mstDeductions.Add(this);
						this._CreatedByUserId = value.Id;
					}
					else
					{
						this._CreatedByUserId = default(int);
					}
					this.SendPropertyChanged("mstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUser_mstDeduction1", Storage="_mstUser1", ThisKey="UpdatedByUserId", OtherKey="Id", IsForeignKey=true)]
		public mstUser mstUser1
		{
			get
			{
				return this._mstUser1.Entity;
			}
			set
			{
				mstUser previousValue = this._mstUser1.Entity;
				if (((previousValue != value) 
							|| (this._mstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstUser1.Entity = null;
						previousValue.mstDeductions1.Remove(this);
					}
					this._mstUser1.Entity = value;
					if ((value != null))
					{
						value.mstDeductions1.Add(this);
						this._UpdatedByUserId = value.Id;
					}
					else
					{
						this._UpdatedByUserId = default(int);
					}
					this.SendPropertyChanged("mstUser1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_trnLoanDeductions(trnLoanDeduction entity)
		{
			this.SendPropertyChanging();
			entity.mstDeduction = this;
		}
		
		private void detach_trnLoanDeductions(trnLoanDeduction entity)
		{
			this.SendPropertyChanging();
			entity.mstDeduction = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mstInterest")]
	public partial class mstInterest : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Interest;
		
		private string _Description;
		
		private decimal _Rate;
		
		private int _CreatedByUserId;
		
		private System.DateTime _CreatedDateTime;
		
		private int _UpdatedByUserId;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntitySet<trnLoan> _trnLoans;
		
		private EntityRef<mstUser> _mstUser;
		
		private EntityRef<mstUser> _mstUser1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnInterestChanging(string value);
    partial void OnInterestChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnRateChanging(decimal value);
    partial void OnRateChanged();
    partial void OnCreatedByUserIdChanging(int value);
    partial void OnCreatedByUserIdChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByUserIdChanging(int value);
    partial void OnUpdatedByUserIdChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public mstInterest()
		{
			this._trnLoans = new EntitySet<trnLoan>(new Action<trnLoan>(this.attach_trnLoans), new Action<trnLoan>(this.detach_trnLoans));
			this._mstUser = default(EntityRef<mstUser>);
			this._mstUser1 = default(EntityRef<mstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Interest", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Interest
		{
			get
			{
				return this._Interest;
			}
			set
			{
				if ((this._Interest != value))
				{
					this.OnInterestChanging(value);
					this.SendPropertyChanging();
					this._Interest = value;
					this.SendPropertyChanged("Interest");
					this.OnInterestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rate", DbType="Decimal(18,5) NOT NULL")]
		public decimal Rate
		{
			get
			{
				return this._Rate;
			}
			set
			{
				if ((this._Rate != value))
				{
					this.OnRateChanging(value);
					this.SendPropertyChanging();
					this._Rate = value;
					this.SendPropertyChanged("Rate");
					this.OnRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserId", DbType="Int NOT NULL")]
		public int CreatedByUserId
		{
			get
			{
				return this._CreatedByUserId;
			}
			set
			{
				if ((this._CreatedByUserId != value))
				{
					if (this._mstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserId = value;
					this.SendPropertyChanged("CreatedByUserId");
					this.OnCreatedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedByUserId", DbType="Int NOT NULL")]
		public int UpdatedByUserId
		{
			get
			{
				return this._UpdatedByUserId;
			}
			set
			{
				if ((this._UpdatedByUserId != value))
				{
					if (this._mstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedByUserId = value;
					this.SendPropertyChanged("UpdatedByUserId");
					this.OnUpdatedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstInterest_trnLoan", Storage="_trnLoans", ThisKey="Id", OtherKey="InterestId")]
		public EntitySet<trnLoan> trnLoans
		{
			get
			{
				return this._trnLoans;
			}
			set
			{
				this._trnLoans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUser_mstInterest", Storage="_mstUser", ThisKey="CreatedByUserId", OtherKey="Id", IsForeignKey=true)]
		public mstUser mstUser
		{
			get
			{
				return this._mstUser.Entity;
			}
			set
			{
				mstUser previousValue = this._mstUser.Entity;
				if (((previousValue != value) 
							|| (this._mstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstUser.Entity = null;
						previousValue.mstInterests.Remove(this);
					}
					this._mstUser.Entity = value;
					if ((value != null))
					{
						value.mstInterests.Add(this);
						this._CreatedByUserId = value.Id;
					}
					else
					{
						this._CreatedByUserId = default(int);
					}
					this.SendPropertyChanged("mstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUser_mstInterest1", Storage="_mstUser1", ThisKey="UpdatedByUserId", OtherKey="Id", IsForeignKey=true)]
		public mstUser mstUser1
		{
			get
			{
				return this._mstUser1.Entity;
			}
			set
			{
				mstUser previousValue = this._mstUser1.Entity;
				if (((previousValue != value) 
							|| (this._mstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstUser1.Entity = null;
						previousValue.mstInterests1.Remove(this);
					}
					this._mstUser1.Entity = value;
					if ((value != null))
					{
						value.mstInterests1.Add(this);
						this._UpdatedByUserId = value.Id;
					}
					else
					{
						this._UpdatedByUserId = default(int);
					}
					this.SendPropertyChanged("mstUser1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_trnLoans(trnLoan entity)
		{
			this.SendPropertyChanging();
			entity.mstInterest = this;
		}
		
		private void detach_trnLoans(trnLoan entity)
		{
			this.SendPropertyChanging();
			entity.mstInterest = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mstRequirements")]
	public partial class mstRequirement : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Requirement;
		
		private string _Description;
		
		private int _CreatedByUserId;
		
		private System.DateTime _CreatedDateTime;
		
		private int _UpdatedByUserId;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntitySet<mstApplicantRequirement> _mstApplicantRequirements;
		
		private EntityRef<mstUser> _mstUser;
		
		private EntityRef<mstUser> _mstUser1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnRequirementChanging(string value);
    partial void OnRequirementChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreatedByUserIdChanging(int value);
    partial void OnCreatedByUserIdChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByUserIdChanging(int value);
    partial void OnUpdatedByUserIdChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public mstRequirement()
		{
			this._mstApplicantRequirements = new EntitySet<mstApplicantRequirement>(new Action<mstApplicantRequirement>(this.attach_mstApplicantRequirements), new Action<mstApplicantRequirement>(this.detach_mstApplicantRequirements));
			this._mstUser = default(EntityRef<mstUser>);
			this._mstUser1 = default(EntityRef<mstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Requirement", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Requirement
		{
			get
			{
				return this._Requirement;
			}
			set
			{
				if ((this._Requirement != value))
				{
					this.OnRequirementChanging(value);
					this.SendPropertyChanging();
					this._Requirement = value;
					this.SendPropertyChanged("Requirement");
					this.OnRequirementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserId", DbType="Int NOT NULL")]
		public int CreatedByUserId
		{
			get
			{
				return this._CreatedByUserId;
			}
			set
			{
				if ((this._CreatedByUserId != value))
				{
					if (this._mstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserId = value;
					this.SendPropertyChanged("CreatedByUserId");
					this.OnCreatedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedByUserId", DbType="Int NOT NULL")]
		public int UpdatedByUserId
		{
			get
			{
				return this._UpdatedByUserId;
			}
			set
			{
				if ((this._UpdatedByUserId != value))
				{
					if (this._mstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedByUserId = value;
					this.SendPropertyChanged("UpdatedByUserId");
					this.OnUpdatedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstRequirement_mstApplicantRequirement", Storage="_mstApplicantRequirements", ThisKey="Id", OtherKey="RequirementId")]
		public EntitySet<mstApplicantRequirement> mstApplicantRequirements
		{
			get
			{
				return this._mstApplicantRequirements;
			}
			set
			{
				this._mstApplicantRequirements.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUser_mstRequirement", Storage="_mstUser", ThisKey="CreatedByUserId", OtherKey="Id", IsForeignKey=true)]
		public mstUser mstUser
		{
			get
			{
				return this._mstUser.Entity;
			}
			set
			{
				mstUser previousValue = this._mstUser.Entity;
				if (((previousValue != value) 
							|| (this._mstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstUser.Entity = null;
						previousValue.mstRequirements.Remove(this);
					}
					this._mstUser.Entity = value;
					if ((value != null))
					{
						value.mstRequirements.Add(this);
						this._CreatedByUserId = value.Id;
					}
					else
					{
						this._CreatedByUserId = default(int);
					}
					this.SendPropertyChanged("mstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUser_mstRequirement1", Storage="_mstUser1", ThisKey="UpdatedByUserId", OtherKey="Id", IsForeignKey=true)]
		public mstUser mstUser1
		{
			get
			{
				return this._mstUser1.Entity;
			}
			set
			{
				mstUser previousValue = this._mstUser1.Entity;
				if (((previousValue != value) 
							|| (this._mstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstUser1.Entity = null;
						previousValue.mstRequirements1.Remove(this);
					}
					this._mstUser1.Entity = value;
					if ((value != null))
					{
						value.mstRequirements1.Add(this);
						this._UpdatedByUserId = value.Id;
					}
					else
					{
						this._UpdatedByUserId = default(int);
					}
					this.SendPropertyChanged("mstUser1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_mstApplicantRequirements(mstApplicantRequirement entity)
		{
			this.SendPropertyChanging();
			entity.mstRequirement = this;
		}
		
		private void detach_mstApplicantRequirements(mstApplicantRequirement entity)
		{
			this.SendPropertyChanging();
			entity.mstRequirement = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mstStaff")]
	public partial class mstStaff : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _StaffNumber;
		
		private string _Staff;
		
		private string _ContactNumber;
		
		private string _Address;
		
		private bool _IsLocked;
		
		private int _CreatedByUserId;
		
		private System.DateTime _CreatedDateTime;
		
		private int _UpdatedByUserId;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntitySet<trnRemittance> _trnRemittances;
		
		private EntitySet<mstArea> _mstAreas;
		
		private EntitySet<mstAreaStaff> _mstAreaStaffs;
		
		private EntitySet<trnCollection> _trnCollections;
		
		private EntitySet<trnExpense> _trnExpenses;
		
		private EntityRef<mstUser> _mstUser;
		
		private EntityRef<mstUser> _mstUser1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnStaffNumberChanging(string value);
    partial void OnStaffNumberChanged();
    partial void OnStaffChanging(string value);
    partial void OnStaffChanged();
    partial void OnContactNumberChanging(string value);
    partial void OnContactNumberChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByUserIdChanging(int value);
    partial void OnCreatedByUserIdChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByUserIdChanging(int value);
    partial void OnUpdatedByUserIdChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public mstStaff()
		{
			this._trnRemittances = new EntitySet<trnRemittance>(new Action<trnRemittance>(this.attach_trnRemittances), new Action<trnRemittance>(this.detach_trnRemittances));
			this._mstAreas = new EntitySet<mstArea>(new Action<mstArea>(this.attach_mstAreas), new Action<mstArea>(this.detach_mstAreas));
			this._mstAreaStaffs = new EntitySet<mstAreaStaff>(new Action<mstAreaStaff>(this.attach_mstAreaStaffs), new Action<mstAreaStaff>(this.detach_mstAreaStaffs));
			this._trnCollections = new EntitySet<trnCollection>(new Action<trnCollection>(this.attach_trnCollections), new Action<trnCollection>(this.detach_trnCollections));
			this._trnExpenses = new EntitySet<trnExpense>(new Action<trnExpense>(this.attach_trnExpenses), new Action<trnExpense>(this.detach_trnExpenses));
			this._mstUser = default(EntityRef<mstUser>);
			this._mstUser1 = default(EntityRef<mstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string StaffNumber
		{
			get
			{
				return this._StaffNumber;
			}
			set
			{
				if ((this._StaffNumber != value))
				{
					this.OnStaffNumberChanging(value);
					this.SendPropertyChanging();
					this._StaffNumber = value;
					this.SendPropertyChanged("StaffNumber");
					this.OnStaffNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Staff", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Staff
		{
			get
			{
				return this._Staff;
			}
			set
			{
				if ((this._Staff != value))
				{
					this.OnStaffChanging(value);
					this.SendPropertyChanging();
					this._Staff = value;
					this.SendPropertyChanged("Staff");
					this.OnStaffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ContactNumber
		{
			get
			{
				return this._ContactNumber;
			}
			set
			{
				if ((this._ContactNumber != value))
				{
					this.OnContactNumberChanging(value);
					this.SendPropertyChanging();
					this._ContactNumber = value;
					this.SendPropertyChanged("ContactNumber");
					this.OnContactNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserId", DbType="Int NOT NULL")]
		public int CreatedByUserId
		{
			get
			{
				return this._CreatedByUserId;
			}
			set
			{
				if ((this._CreatedByUserId != value))
				{
					if (this._mstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserId = value;
					this.SendPropertyChanged("CreatedByUserId");
					this.OnCreatedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedByUserId", DbType="Int NOT NULL")]
		public int UpdatedByUserId
		{
			get
			{
				return this._UpdatedByUserId;
			}
			set
			{
				if ((this._UpdatedByUserId != value))
				{
					if (this._mstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedByUserId = value;
					this.SendPropertyChanged("UpdatedByUserId");
					this.OnUpdatedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstStaff_trnRemittance", Storage="_trnRemittances", ThisKey="Id", OtherKey="StaffId")]
		public EntitySet<trnRemittance> trnRemittances
		{
			get
			{
				return this._trnRemittances;
			}
			set
			{
				this._trnRemittances.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstStaff_mstArea", Storage="_mstAreas", ThisKey="Id", OtherKey="SupervisorStaffId")]
		public EntitySet<mstArea> mstAreas
		{
			get
			{
				return this._mstAreas;
			}
			set
			{
				this._mstAreas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstStaff_mstAreaStaff", Storage="_mstAreaStaffs", ThisKey="Id", OtherKey="StaffId")]
		public EntitySet<mstAreaStaff> mstAreaStaffs
		{
			get
			{
				return this._mstAreaStaffs;
			}
			set
			{
				this._mstAreaStaffs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstStaff_trnCollection", Storage="_trnCollections", ThisKey="Id", OtherKey="CollectorStaffId")]
		public EntitySet<trnCollection> trnCollections
		{
			get
			{
				return this._trnCollections;
			}
			set
			{
				this._trnCollections.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstStaff_trnExpense", Storage="_trnExpenses", ThisKey="Id", OtherKey="AssignedStaffId")]
		public EntitySet<trnExpense> trnExpenses
		{
			get
			{
				return this._trnExpenses;
			}
			set
			{
				this._trnExpenses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUser_mstStaff", Storage="_mstUser", ThisKey="CreatedByUserId", OtherKey="Id", IsForeignKey=true)]
		public mstUser mstUser
		{
			get
			{
				return this._mstUser.Entity;
			}
			set
			{
				mstUser previousValue = this._mstUser.Entity;
				if (((previousValue != value) 
							|| (this._mstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstUser.Entity = null;
						previousValue.mstStaffs.Remove(this);
					}
					this._mstUser.Entity = value;
					if ((value != null))
					{
						value.mstStaffs.Add(this);
						this._CreatedByUserId = value.Id;
					}
					else
					{
						this._CreatedByUserId = default(int);
					}
					this.SendPropertyChanged("mstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUser_mstStaff1", Storage="_mstUser1", ThisKey="UpdatedByUserId", OtherKey="Id", IsForeignKey=true)]
		public mstUser mstUser1
		{
			get
			{
				return this._mstUser1.Entity;
			}
			set
			{
				mstUser previousValue = this._mstUser1.Entity;
				if (((previousValue != value) 
							|| (this._mstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstUser1.Entity = null;
						previousValue.mstStaffs1.Remove(this);
					}
					this._mstUser1.Entity = value;
					if ((value != null))
					{
						value.mstStaffs1.Add(this);
						this._UpdatedByUserId = value.Id;
					}
					else
					{
						this._UpdatedByUserId = default(int);
					}
					this.SendPropertyChanged("mstUser1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_trnRemittances(trnRemittance entity)
		{
			this.SendPropertyChanging();
			entity.mstStaff = this;
		}
		
		private void detach_trnRemittances(trnRemittance entity)
		{
			this.SendPropertyChanging();
			entity.mstStaff = null;
		}
		
		private void attach_mstAreas(mstArea entity)
		{
			this.SendPropertyChanging();
			entity.mstStaff = this;
		}
		
		private void detach_mstAreas(mstArea entity)
		{
			this.SendPropertyChanging();
			entity.mstStaff = null;
		}
		
		private void attach_mstAreaStaffs(mstAreaStaff entity)
		{
			this.SendPropertyChanging();
			entity.mstStaff = this;
		}
		
		private void detach_mstAreaStaffs(mstAreaStaff entity)
		{
			this.SendPropertyChanging();
			entity.mstStaff = null;
		}
		
		private void attach_trnCollections(trnCollection entity)
		{
			this.SendPropertyChanging();
			entity.mstStaff = this;
		}
		
		private void detach_trnCollections(trnCollection entity)
		{
			this.SendPropertyChanging();
			entity.mstStaff = null;
		}
		
		private void attach_trnExpenses(trnExpense entity)
		{
			this.SendPropertyChanging();
			entity.mstStaff = this;
		}
		
		private void detach_trnExpenses(trnExpense entity)
		{
			this.SendPropertyChanging();
			entity.mstStaff = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mstTerm")]
	public partial class mstTerm : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Term;
		
		private string _Description;
		
		private decimal _NoOfDays;
		
		private decimal _PaymentNoOfDays;
		
		private int _CreatedByUserId;
		
		private System.DateTime _CreatedDateTime;
		
		private int _UpdatedByUserId;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntitySet<trnLoan> _trnLoans;
		
		private EntityRef<mstUser> _mstUser;
		
		private EntityRef<mstUser> _mstUser1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTermChanging(string value);
    partial void OnTermChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnNoOfDaysChanging(decimal value);
    partial void OnNoOfDaysChanged();
    partial void OnPaymentNoOfDaysChanging(decimal value);
    partial void OnPaymentNoOfDaysChanged();
    partial void OnCreatedByUserIdChanging(int value);
    partial void OnCreatedByUserIdChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByUserIdChanging(int value);
    partial void OnUpdatedByUserIdChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public mstTerm()
		{
			this._trnLoans = new EntitySet<trnLoan>(new Action<trnLoan>(this.attach_trnLoans), new Action<trnLoan>(this.detach_trnLoans));
			this._mstUser = default(EntityRef<mstUser>);
			this._mstUser1 = default(EntityRef<mstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Term", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Term
		{
			get
			{
				return this._Term;
			}
			set
			{
				if ((this._Term != value))
				{
					this.OnTermChanging(value);
					this.SendPropertyChanging();
					this._Term = value;
					this.SendPropertyChanged("Term");
					this.OnTermChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoOfDays", DbType="Decimal(18,5) NOT NULL")]
		public decimal NoOfDays
		{
			get
			{
				return this._NoOfDays;
			}
			set
			{
				if ((this._NoOfDays != value))
				{
					this.OnNoOfDaysChanging(value);
					this.SendPropertyChanging();
					this._NoOfDays = value;
					this.SendPropertyChanged("NoOfDays");
					this.OnNoOfDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentNoOfDays", DbType="Decimal(18,5) NOT NULL")]
		public decimal PaymentNoOfDays
		{
			get
			{
				return this._PaymentNoOfDays;
			}
			set
			{
				if ((this._PaymentNoOfDays != value))
				{
					this.OnPaymentNoOfDaysChanging(value);
					this.SendPropertyChanging();
					this._PaymentNoOfDays = value;
					this.SendPropertyChanged("PaymentNoOfDays");
					this.OnPaymentNoOfDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserId", DbType="Int NOT NULL")]
		public int CreatedByUserId
		{
			get
			{
				return this._CreatedByUserId;
			}
			set
			{
				if ((this._CreatedByUserId != value))
				{
					if (this._mstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserId = value;
					this.SendPropertyChanged("CreatedByUserId");
					this.OnCreatedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedByUserId", DbType="Int NOT NULL")]
		public int UpdatedByUserId
		{
			get
			{
				return this._UpdatedByUserId;
			}
			set
			{
				if ((this._UpdatedByUserId != value))
				{
					if (this._mstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedByUserId = value;
					this.SendPropertyChanged("UpdatedByUserId");
					this.OnUpdatedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstTerm_trnLoan", Storage="_trnLoans", ThisKey="Id", OtherKey="TermId")]
		public EntitySet<trnLoan> trnLoans
		{
			get
			{
				return this._trnLoans;
			}
			set
			{
				this._trnLoans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUser_mstTerm", Storage="_mstUser", ThisKey="CreatedByUserId", OtherKey="Id", IsForeignKey=true)]
		public mstUser mstUser
		{
			get
			{
				return this._mstUser.Entity;
			}
			set
			{
				mstUser previousValue = this._mstUser.Entity;
				if (((previousValue != value) 
							|| (this._mstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstUser.Entity = null;
						previousValue.mstTerms.Remove(this);
					}
					this._mstUser.Entity = value;
					if ((value != null))
					{
						value.mstTerms.Add(this);
						this._CreatedByUserId = value.Id;
					}
					else
					{
						this._CreatedByUserId = default(int);
					}
					this.SendPropertyChanged("mstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUser_mstTerm1", Storage="_mstUser1", ThisKey="UpdatedByUserId", OtherKey="Id", IsForeignKey=true)]
		public mstUser mstUser1
		{
			get
			{
				return this._mstUser1.Entity;
			}
			set
			{
				mstUser previousValue = this._mstUser1.Entity;
				if (((previousValue != value) 
							|| (this._mstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstUser1.Entity = null;
						previousValue.mstTerms1.Remove(this);
					}
					this._mstUser1.Entity = value;
					if ((value != null))
					{
						value.mstTerms1.Add(this);
						this._UpdatedByUserId = value.Id;
					}
					else
					{
						this._UpdatedByUserId = default(int);
					}
					this.SendPropertyChanged("mstUser1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_trnLoans(trnLoan entity)
		{
			this.SendPropertyChanging();
			entity.mstTerm = this;
		}
		
		private void detach_trnLoans(trnLoan entity)
		{
			this.SendPropertyChanging();
			entity.mstTerm = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mstUser")]
	public partial class mstUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _AspUserId;
		
		private string _Username;
		
		private string _Password;
		
		private string _FullName;
		
		private int _CompanyId;
		
		private bool _IsLocked;
		
		private System.DateTime _CreatedDate;
		
		private System.DateTime _UpdatedDate;
		
		private EntitySet<trnRemittance> _trnRemittances;
		
		private EntitySet<trnRemittance> _trnRemittances1;
		
		private EntitySet<trnRemittance> _trnRemittances2;
		
		private EntitySet<mstApplicant> _mstApplicants;
		
		private EntitySet<mstApplicant> _mstApplicants1;
		
		private EntitySet<mstArea> _mstAreas;
		
		private EntitySet<mstArea> _mstAreas1;
		
		private EntitySet<mstCompany> _mstCompanies;
		
		private EntitySet<mstCompany> _mstCompanies1;
		
		private EntitySet<mstDeduction> _mstDeductions;
		
		private EntitySet<mstDeduction> _mstDeductions1;
		
		private EntitySet<mstInterest> _mstInterests;
		
		private EntitySet<mstInterest> _mstInterests1;
		
		private EntitySet<mstRequirement> _mstRequirements;
		
		private EntitySet<mstRequirement> _mstRequirements1;
		
		private EntitySet<mstStaff> _mstStaffs;
		
		private EntitySet<mstStaff> _mstStaffs1;
		
		private EntitySet<mstTerm> _mstTerms;
		
		private EntitySet<mstTerm> _mstTerms1;
		
		private EntitySet<mstUserForm> _mstUserForms;
		
		private EntitySet<trnCollection> _trnCollections;
		
		private EntitySet<trnCollection> _trnCollections1;
		
		private EntitySet<trnCollection> _trnCollections2;
		
		private EntitySet<trnExpense> _trnExpenses;
		
		private EntitySet<trnExpense> _trnExpenses1;
		
		private EntitySet<trnExpense> _trnExpenses2;
		
		private EntitySet<trnLoan> _trnLoans;
		
		private EntitySet<trnLoan> _trnLoans1;
		
		private EntitySet<trnLoan> _trnLoans2;
		
		private EntityRef<AspNetUser> _AspNetUser;
		
		private EntityRef<mstCompany> _mstCompany;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAspUserIdChanging(string value);
    partial void OnAspUserIdChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedDateChanging(System.DateTime value);
    partial void OnUpdatedDateChanged();
    #endregion
		
		public mstUser()
		{
			this._trnRemittances = new EntitySet<trnRemittance>(new Action<trnRemittance>(this.attach_trnRemittances), new Action<trnRemittance>(this.detach_trnRemittances));
			this._trnRemittances1 = new EntitySet<trnRemittance>(new Action<trnRemittance>(this.attach_trnRemittances1), new Action<trnRemittance>(this.detach_trnRemittances1));
			this._trnRemittances2 = new EntitySet<trnRemittance>(new Action<trnRemittance>(this.attach_trnRemittances2), new Action<trnRemittance>(this.detach_trnRemittances2));
			this._mstApplicants = new EntitySet<mstApplicant>(new Action<mstApplicant>(this.attach_mstApplicants), new Action<mstApplicant>(this.detach_mstApplicants));
			this._mstApplicants1 = new EntitySet<mstApplicant>(new Action<mstApplicant>(this.attach_mstApplicants1), new Action<mstApplicant>(this.detach_mstApplicants1));
			this._mstAreas = new EntitySet<mstArea>(new Action<mstArea>(this.attach_mstAreas), new Action<mstArea>(this.detach_mstAreas));
			this._mstAreas1 = new EntitySet<mstArea>(new Action<mstArea>(this.attach_mstAreas1), new Action<mstArea>(this.detach_mstAreas1));
			this._mstCompanies = new EntitySet<mstCompany>(new Action<mstCompany>(this.attach_mstCompanies), new Action<mstCompany>(this.detach_mstCompanies));
			this._mstCompanies1 = new EntitySet<mstCompany>(new Action<mstCompany>(this.attach_mstCompanies1), new Action<mstCompany>(this.detach_mstCompanies1));
			this._mstDeductions = new EntitySet<mstDeduction>(new Action<mstDeduction>(this.attach_mstDeductions), new Action<mstDeduction>(this.detach_mstDeductions));
			this._mstDeductions1 = new EntitySet<mstDeduction>(new Action<mstDeduction>(this.attach_mstDeductions1), new Action<mstDeduction>(this.detach_mstDeductions1));
			this._mstInterests = new EntitySet<mstInterest>(new Action<mstInterest>(this.attach_mstInterests), new Action<mstInterest>(this.detach_mstInterests));
			this._mstInterests1 = new EntitySet<mstInterest>(new Action<mstInterest>(this.attach_mstInterests1), new Action<mstInterest>(this.detach_mstInterests1));
			this._mstRequirements = new EntitySet<mstRequirement>(new Action<mstRequirement>(this.attach_mstRequirements), new Action<mstRequirement>(this.detach_mstRequirements));
			this._mstRequirements1 = new EntitySet<mstRequirement>(new Action<mstRequirement>(this.attach_mstRequirements1), new Action<mstRequirement>(this.detach_mstRequirements1));
			this._mstStaffs = new EntitySet<mstStaff>(new Action<mstStaff>(this.attach_mstStaffs), new Action<mstStaff>(this.detach_mstStaffs));
			this._mstStaffs1 = new EntitySet<mstStaff>(new Action<mstStaff>(this.attach_mstStaffs1), new Action<mstStaff>(this.detach_mstStaffs1));
			this._mstTerms = new EntitySet<mstTerm>(new Action<mstTerm>(this.attach_mstTerms), new Action<mstTerm>(this.detach_mstTerms));
			this._mstTerms1 = new EntitySet<mstTerm>(new Action<mstTerm>(this.attach_mstTerms1), new Action<mstTerm>(this.detach_mstTerms1));
			this._mstUserForms = new EntitySet<mstUserForm>(new Action<mstUserForm>(this.attach_mstUserForms), new Action<mstUserForm>(this.detach_mstUserForms));
			this._trnCollections = new EntitySet<trnCollection>(new Action<trnCollection>(this.attach_trnCollections), new Action<trnCollection>(this.detach_trnCollections));
			this._trnCollections1 = new EntitySet<trnCollection>(new Action<trnCollection>(this.attach_trnCollections1), new Action<trnCollection>(this.detach_trnCollections1));
			this._trnCollections2 = new EntitySet<trnCollection>(new Action<trnCollection>(this.attach_trnCollections2), new Action<trnCollection>(this.detach_trnCollections2));
			this._trnExpenses = new EntitySet<trnExpense>(new Action<trnExpense>(this.attach_trnExpenses), new Action<trnExpense>(this.detach_trnExpenses));
			this._trnExpenses1 = new EntitySet<trnExpense>(new Action<trnExpense>(this.attach_trnExpenses1), new Action<trnExpense>(this.detach_trnExpenses1));
			this._trnExpenses2 = new EntitySet<trnExpense>(new Action<trnExpense>(this.attach_trnExpenses2), new Action<trnExpense>(this.detach_trnExpenses2));
			this._trnLoans = new EntitySet<trnLoan>(new Action<trnLoan>(this.attach_trnLoans), new Action<trnLoan>(this.detach_trnLoans));
			this._trnLoans1 = new EntitySet<trnLoan>(new Action<trnLoan>(this.attach_trnLoans1), new Action<trnLoan>(this.detach_trnLoans1));
			this._trnLoans2 = new EntitySet<trnLoan>(new Action<trnLoan>(this.attach_trnLoans2), new Action<trnLoan>(this.detach_trnLoans2));
			this._AspNetUser = default(EntityRef<AspNetUser>);
			this._mstCompany = default(EntityRef<mstCompany>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AspUserId", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string AspUserId
		{
			get
			{
				return this._AspUserId;
			}
			set
			{
				if ((this._AspUserId != value))
				{
					if (this._AspNetUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAspUserIdChanging(value);
					this.SendPropertyChanging();
					this._AspUserId = value;
					this.SendPropertyChanged("AspUserId");
					this.OnAspUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", DbType="Int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._CompanyId;
			}
			set
			{
				if ((this._CompanyId != value))
				{
					if (this._mstCompany.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._CompanyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUser_trnRemittance", Storage="_trnRemittances", ThisKey="Id", OtherKey="PreparedByUserId")]
		public EntitySet<trnRemittance> trnRemittances
		{
			get
			{
				return this._trnRemittances;
			}
			set
			{
				this._trnRemittances.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUser_trnRemittance1", Storage="_trnRemittances1", ThisKey="Id", OtherKey="CreatedByUserId")]
		public EntitySet<trnRemittance> trnRemittances1
		{
			get
			{
				return this._trnRemittances1;
			}
			set
			{
				this._trnRemittances1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUser_trnRemittance2", Storage="_trnRemittances2", ThisKey="Id", OtherKey="UpdatedByUserId")]
		public EntitySet<trnRemittance> trnRemittances2
		{
			get
			{
				return this._trnRemittances2;
			}
			set
			{
				this._trnRemittances2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUser_mstApplicant", Storage="_mstApplicants", ThisKey="Id", OtherKey="CreatedByUserId")]
		public EntitySet<mstApplicant> mstApplicants
		{
			get
			{
				return this._mstApplicants;
			}
			set
			{
				this._mstApplicants.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUser_mstApplicant1", Storage="_mstApplicants1", ThisKey="Id", OtherKey="UpdatedByUserId")]
		public EntitySet<mstApplicant> mstApplicants1
		{
			get
			{
				return this._mstApplicants1;
			}
			set
			{
				this._mstApplicants1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUser_mstArea", Storage="_mstAreas", ThisKey="Id", OtherKey="CreatedByUserId")]
		public EntitySet<mstArea> mstAreas
		{
			get
			{
				return this._mstAreas;
			}
			set
			{
				this._mstAreas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUser_mstArea1", Storage="_mstAreas1", ThisKey="Id", OtherKey="UpdatedByUserId")]
		public EntitySet<mstArea> mstAreas1
		{
			get
			{
				return this._mstAreas1;
			}
			set
			{
				this._mstAreas1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUser_mstCompany", Storage="_mstCompanies", ThisKey="Id", OtherKey="CreatedByUserId")]
		public EntitySet<mstCompany> mstCompanies
		{
			get
			{
				return this._mstCompanies;
			}
			set
			{
				this._mstCompanies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUser_mstCompany1", Storage="_mstCompanies1", ThisKey="Id", OtherKey="UpdatedByUserId")]
		public EntitySet<mstCompany> mstCompanies1
		{
			get
			{
				return this._mstCompanies1;
			}
			set
			{
				this._mstCompanies1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUser_mstDeduction", Storage="_mstDeductions", ThisKey="Id", OtherKey="CreatedByUserId")]
		public EntitySet<mstDeduction> mstDeductions
		{
			get
			{
				return this._mstDeductions;
			}
			set
			{
				this._mstDeductions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUser_mstDeduction1", Storage="_mstDeductions1", ThisKey="Id", OtherKey="UpdatedByUserId")]
		public EntitySet<mstDeduction> mstDeductions1
		{
			get
			{
				return this._mstDeductions1;
			}
			set
			{
				this._mstDeductions1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUser_mstInterest", Storage="_mstInterests", ThisKey="Id", OtherKey="CreatedByUserId")]
		public EntitySet<mstInterest> mstInterests
		{
			get
			{
				return this._mstInterests;
			}
			set
			{
				this._mstInterests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUser_mstInterest1", Storage="_mstInterests1", ThisKey="Id", OtherKey="UpdatedByUserId")]
		public EntitySet<mstInterest> mstInterests1
		{
			get
			{
				return this._mstInterests1;
			}
			set
			{
				this._mstInterests1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUser_mstRequirement", Storage="_mstRequirements", ThisKey="Id", OtherKey="CreatedByUserId")]
		public EntitySet<mstRequirement> mstRequirements
		{
			get
			{
				return this._mstRequirements;
			}
			set
			{
				this._mstRequirements.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUser_mstRequirement1", Storage="_mstRequirements1", ThisKey="Id", OtherKey="UpdatedByUserId")]
		public EntitySet<mstRequirement> mstRequirements1
		{
			get
			{
				return this._mstRequirements1;
			}
			set
			{
				this._mstRequirements1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUser_mstStaff", Storage="_mstStaffs", ThisKey="Id", OtherKey="CreatedByUserId")]
		public EntitySet<mstStaff> mstStaffs
		{
			get
			{
				return this._mstStaffs;
			}
			set
			{
				this._mstStaffs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUser_mstStaff1", Storage="_mstStaffs1", ThisKey="Id", OtherKey="UpdatedByUserId")]
		public EntitySet<mstStaff> mstStaffs1
		{
			get
			{
				return this._mstStaffs1;
			}
			set
			{
				this._mstStaffs1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUser_mstTerm", Storage="_mstTerms", ThisKey="Id", OtherKey="CreatedByUserId")]
		public EntitySet<mstTerm> mstTerms
		{
			get
			{
				return this._mstTerms;
			}
			set
			{
				this._mstTerms.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUser_mstTerm1", Storage="_mstTerms1", ThisKey="Id", OtherKey="UpdatedByUserId")]
		public EntitySet<mstTerm> mstTerms1
		{
			get
			{
				return this._mstTerms1;
			}
			set
			{
				this._mstTerms1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUser_mstUserForm", Storage="_mstUserForms", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<mstUserForm> mstUserForms
		{
			get
			{
				return this._mstUserForms;
			}
			set
			{
				this._mstUserForms.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUser_trnCollection", Storage="_trnCollections", ThisKey="Id", OtherKey="PreparedByUserId")]
		public EntitySet<trnCollection> trnCollections
		{
			get
			{
				return this._trnCollections;
			}
			set
			{
				this._trnCollections.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUser_trnCollection1", Storage="_trnCollections1", ThisKey="Id", OtherKey="CreatedByUserId")]
		public EntitySet<trnCollection> trnCollections1
		{
			get
			{
				return this._trnCollections1;
			}
			set
			{
				this._trnCollections1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUser_trnCollection2", Storage="_trnCollections2", ThisKey="Id", OtherKey="UpdatedByUserId")]
		public EntitySet<trnCollection> trnCollections2
		{
			get
			{
				return this._trnCollections2;
			}
			set
			{
				this._trnCollections2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUser_trnExpense", Storage="_trnExpenses", ThisKey="Id", OtherKey="PreparedByUserId")]
		public EntitySet<trnExpense> trnExpenses
		{
			get
			{
				return this._trnExpenses;
			}
			set
			{
				this._trnExpenses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUser_trnExpense1", Storage="_trnExpenses1", ThisKey="Id", OtherKey="CreatedByUserId")]
		public EntitySet<trnExpense> trnExpenses1
		{
			get
			{
				return this._trnExpenses1;
			}
			set
			{
				this._trnExpenses1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUser_trnExpense2", Storage="_trnExpenses2", ThisKey="Id", OtherKey="UpdatedByUserId")]
		public EntitySet<trnExpense> trnExpenses2
		{
			get
			{
				return this._trnExpenses2;
			}
			set
			{
				this._trnExpenses2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUser_trnLoan", Storage="_trnLoans", ThisKey="Id", OtherKey="PreparedByUserId")]
		public EntitySet<trnLoan> trnLoans
		{
			get
			{
				return this._trnLoans;
			}
			set
			{
				this._trnLoans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUser_trnLoan1", Storage="_trnLoans1", ThisKey="Id", OtherKey="CreatedByUserId")]
		public EntitySet<trnLoan> trnLoans1
		{
			get
			{
				return this._trnLoans1;
			}
			set
			{
				this._trnLoans1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUser_trnLoan2", Storage="_trnLoans2", ThisKey="Id", OtherKey="UpdatedByUserId")]
		public EntitySet<trnLoan> trnLoans2
		{
			get
			{
				return this._trnLoans2;
			}
			set
			{
				this._trnLoans2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetUser_mstUser", Storage="_AspNetUser", ThisKey="AspUserId", OtherKey="Id", IsForeignKey=true)]
		public AspNetUser AspNetUser
		{
			get
			{
				return this._AspNetUser.Entity;
			}
			set
			{
				AspNetUser previousValue = this._AspNetUser.Entity;
				if (((previousValue != value) 
							|| (this._AspNetUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AspNetUser.Entity = null;
						previousValue.mstUsers.Remove(this);
					}
					this._AspNetUser.Entity = value;
					if ((value != null))
					{
						value.mstUsers.Add(this);
						this._AspUserId = value.Id;
					}
					else
					{
						this._AspUserId = default(string);
					}
					this.SendPropertyChanged("AspNetUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstCompany_mstUser", Storage="_mstCompany", ThisKey="CompanyId", OtherKey="Id", IsForeignKey=true)]
		public mstCompany mstCompany
		{
			get
			{
				return this._mstCompany.Entity;
			}
			set
			{
				mstCompany previousValue = this._mstCompany.Entity;
				if (((previousValue != value) 
							|| (this._mstCompany.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstCompany.Entity = null;
						previousValue.mstUsers.Remove(this);
					}
					this._mstCompany.Entity = value;
					if ((value != null))
					{
						value.mstUsers.Add(this);
						this._CompanyId = value.Id;
					}
					else
					{
						this._CompanyId = default(int);
					}
					this.SendPropertyChanged("mstCompany");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_trnRemittances(trnRemittance entity)
		{
			this.SendPropertyChanging();
			entity.mstUser = this;
		}
		
		private void detach_trnRemittances(trnRemittance entity)
		{
			this.SendPropertyChanging();
			entity.mstUser = null;
		}
		
		private void attach_trnRemittances1(trnRemittance entity)
		{
			this.SendPropertyChanging();
			entity.mstUser1 = this;
		}
		
		private void detach_trnRemittances1(trnRemittance entity)
		{
			this.SendPropertyChanging();
			entity.mstUser1 = null;
		}
		
		private void attach_trnRemittances2(trnRemittance entity)
		{
			this.SendPropertyChanging();
			entity.mstUser2 = this;
		}
		
		private void detach_trnRemittances2(trnRemittance entity)
		{
			this.SendPropertyChanging();
			entity.mstUser2 = null;
		}
		
		private void attach_mstApplicants(mstApplicant entity)
		{
			this.SendPropertyChanging();
			entity.mstUser = this;
		}
		
		private void detach_mstApplicants(mstApplicant entity)
		{
			this.SendPropertyChanging();
			entity.mstUser = null;
		}
		
		private void attach_mstApplicants1(mstApplicant entity)
		{
			this.SendPropertyChanging();
			entity.mstUser1 = this;
		}
		
		private void detach_mstApplicants1(mstApplicant entity)
		{
			this.SendPropertyChanging();
			entity.mstUser1 = null;
		}
		
		private void attach_mstAreas(mstArea entity)
		{
			this.SendPropertyChanging();
			entity.mstUser = this;
		}
		
		private void detach_mstAreas(mstArea entity)
		{
			this.SendPropertyChanging();
			entity.mstUser = null;
		}
		
		private void attach_mstAreas1(mstArea entity)
		{
			this.SendPropertyChanging();
			entity.mstUser1 = this;
		}
		
		private void detach_mstAreas1(mstArea entity)
		{
			this.SendPropertyChanging();
			entity.mstUser1 = null;
		}
		
		private void attach_mstCompanies(mstCompany entity)
		{
			this.SendPropertyChanging();
			entity.mstUser = this;
		}
		
		private void detach_mstCompanies(mstCompany entity)
		{
			this.SendPropertyChanging();
			entity.mstUser = null;
		}
		
		private void attach_mstCompanies1(mstCompany entity)
		{
			this.SendPropertyChanging();
			entity.mstUser1 = this;
		}
		
		private void detach_mstCompanies1(mstCompany entity)
		{
			this.SendPropertyChanging();
			entity.mstUser1 = null;
		}
		
		private void attach_mstDeductions(mstDeduction entity)
		{
			this.SendPropertyChanging();
			entity.mstUser = this;
		}
		
		private void detach_mstDeductions(mstDeduction entity)
		{
			this.SendPropertyChanging();
			entity.mstUser = null;
		}
		
		private void attach_mstDeductions1(mstDeduction entity)
		{
			this.SendPropertyChanging();
			entity.mstUser1 = this;
		}
		
		private void detach_mstDeductions1(mstDeduction entity)
		{
			this.SendPropertyChanging();
			entity.mstUser1 = null;
		}
		
		private void attach_mstInterests(mstInterest entity)
		{
			this.SendPropertyChanging();
			entity.mstUser = this;
		}
		
		private void detach_mstInterests(mstInterest entity)
		{
			this.SendPropertyChanging();
			entity.mstUser = null;
		}
		
		private void attach_mstInterests1(mstInterest entity)
		{
			this.SendPropertyChanging();
			entity.mstUser1 = this;
		}
		
		private void detach_mstInterests1(mstInterest entity)
		{
			this.SendPropertyChanging();
			entity.mstUser1 = null;
		}
		
		private void attach_mstRequirements(mstRequirement entity)
		{
			this.SendPropertyChanging();
			entity.mstUser = this;
		}
		
		private void detach_mstRequirements(mstRequirement entity)
		{
			this.SendPropertyChanging();
			entity.mstUser = null;
		}
		
		private void attach_mstRequirements1(mstRequirement entity)
		{
			this.SendPropertyChanging();
			entity.mstUser1 = this;
		}
		
		private void detach_mstRequirements1(mstRequirement entity)
		{
			this.SendPropertyChanging();
			entity.mstUser1 = null;
		}
		
		private void attach_mstStaffs(mstStaff entity)
		{
			this.SendPropertyChanging();
			entity.mstUser = this;
		}
		
		private void detach_mstStaffs(mstStaff entity)
		{
			this.SendPropertyChanging();
			entity.mstUser = null;
		}
		
		private void attach_mstStaffs1(mstStaff entity)
		{
			this.SendPropertyChanging();
			entity.mstUser1 = this;
		}
		
		private void detach_mstStaffs1(mstStaff entity)
		{
			this.SendPropertyChanging();
			entity.mstUser1 = null;
		}
		
		private void attach_mstTerms(mstTerm entity)
		{
			this.SendPropertyChanging();
			entity.mstUser = this;
		}
		
		private void detach_mstTerms(mstTerm entity)
		{
			this.SendPropertyChanging();
			entity.mstUser = null;
		}
		
		private void attach_mstTerms1(mstTerm entity)
		{
			this.SendPropertyChanging();
			entity.mstUser1 = this;
		}
		
		private void detach_mstTerms1(mstTerm entity)
		{
			this.SendPropertyChanging();
			entity.mstUser1 = null;
		}
		
		private void attach_mstUserForms(mstUserForm entity)
		{
			this.SendPropertyChanging();
			entity.mstUser = this;
		}
		
		private void detach_mstUserForms(mstUserForm entity)
		{
			this.SendPropertyChanging();
			entity.mstUser = null;
		}
		
		private void attach_trnCollections(trnCollection entity)
		{
			this.SendPropertyChanging();
			entity.mstUser = this;
		}
		
		private void detach_trnCollections(trnCollection entity)
		{
			this.SendPropertyChanging();
			entity.mstUser = null;
		}
		
		private void attach_trnCollections1(trnCollection entity)
		{
			this.SendPropertyChanging();
			entity.mstUser1 = this;
		}
		
		private void detach_trnCollections1(trnCollection entity)
		{
			this.SendPropertyChanging();
			entity.mstUser1 = null;
		}
		
		private void attach_trnCollections2(trnCollection entity)
		{
			this.SendPropertyChanging();
			entity.mstUser2 = this;
		}
		
		private void detach_trnCollections2(trnCollection entity)
		{
			this.SendPropertyChanging();
			entity.mstUser2 = null;
		}
		
		private void attach_trnExpenses(trnExpense entity)
		{
			this.SendPropertyChanging();
			entity.mstUser = this;
		}
		
		private void detach_trnExpenses(trnExpense entity)
		{
			this.SendPropertyChanging();
			entity.mstUser = null;
		}
		
		private void attach_trnExpenses1(trnExpense entity)
		{
			this.SendPropertyChanging();
			entity.mstUser1 = this;
		}
		
		private void detach_trnExpenses1(trnExpense entity)
		{
			this.SendPropertyChanging();
			entity.mstUser1 = null;
		}
		
		private void attach_trnExpenses2(trnExpense entity)
		{
			this.SendPropertyChanging();
			entity.mstUser2 = this;
		}
		
		private void detach_trnExpenses2(trnExpense entity)
		{
			this.SendPropertyChanging();
			entity.mstUser2 = null;
		}
		
		private void attach_trnLoans(trnLoan entity)
		{
			this.SendPropertyChanging();
			entity.mstUser = this;
		}
		
		private void detach_trnLoans(trnLoan entity)
		{
			this.SendPropertyChanging();
			entity.mstUser = null;
		}
		
		private void attach_trnLoans1(trnLoan entity)
		{
			this.SendPropertyChanging();
			entity.mstUser1 = this;
		}
		
		private void detach_trnLoans1(trnLoan entity)
		{
			this.SendPropertyChanging();
			entity.mstUser1 = null;
		}
		
		private void attach_trnLoans2(trnLoan entity)
		{
			this.SendPropertyChanging();
			entity.mstUser2 = this;
		}
		
		private void detach_trnLoans2(trnLoan entity)
		{
			this.SendPropertyChanging();
			entity.mstUser2 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mstUserForms")]
	public partial class mstUserForm : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _UserId;
		
		private int _FormId;
		
		private bool _CanPerformActions;
		
		private EntityRef<mstUser> _mstUser;
		
		private EntityRef<sysForm> _sysForm;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnFormIdChanging(int value);
    partial void OnFormIdChanged();
    partial void OnCanPerformActionsChanging(bool value);
    partial void OnCanPerformActionsChanged();
    #endregion
		
		public mstUserForm()
		{
			this._mstUser = default(EntityRef<mstUser>);
			this._sysForm = default(EntityRef<sysForm>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._mstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FormId", DbType="Int NOT NULL")]
		public int FormId
		{
			get
			{
				return this._FormId;
			}
			set
			{
				if ((this._FormId != value))
				{
					if (this._sysForm.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFormIdChanging(value);
					this.SendPropertyChanging();
					this._FormId = value;
					this.SendPropertyChanged("FormId");
					this.OnFormIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanPerformActions", DbType="Bit NOT NULL")]
		public bool CanPerformActions
		{
			get
			{
				return this._CanPerformActions;
			}
			set
			{
				if ((this._CanPerformActions != value))
				{
					this.OnCanPerformActionsChanging(value);
					this.SendPropertyChanging();
					this._CanPerformActions = value;
					this.SendPropertyChanged("CanPerformActions");
					this.OnCanPerformActionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUser_mstUserForm", Storage="_mstUser", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public mstUser mstUser
		{
			get
			{
				return this._mstUser.Entity;
			}
			set
			{
				mstUser previousValue = this._mstUser.Entity;
				if (((previousValue != value) 
							|| (this._mstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstUser.Entity = null;
						previousValue.mstUserForms.Remove(this);
					}
					this._mstUser.Entity = value;
					if ((value != null))
					{
						value.mstUserForms.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("mstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="sysForm_mstUserForm", Storage="_sysForm", ThisKey="FormId", OtherKey="Id", IsForeignKey=true)]
		public sysForm sysForm
		{
			get
			{
				return this._sysForm.Entity;
			}
			set
			{
				sysForm previousValue = this._sysForm.Entity;
				if (((previousValue != value) 
							|| (this._sysForm.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._sysForm.Entity = null;
						previousValue.mstUserForms.Remove(this);
					}
					this._sysForm.Entity = value;
					if ((value != null))
					{
						value.mstUserForms.Add(this);
						this._FormId = value.Id;
					}
					else
					{
						this._FormId = default(int);
					}
					this.SendPropertyChanged("sysForm");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.sysCivilStatus")]
	public partial class sysCivilStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _CivilStatus;
		
		private EntitySet<mstApplicant> _mstApplicants;
		
		private EntityRef<sysCivilStatus> _sysCivilStatus2;
		
		private EntityRef<sysCivilStatus> _sysCivilStatus1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCivilStatusChanging(string value);
    partial void OnCivilStatusChanged();
    #endregion
		
		public sysCivilStatus()
		{
			this._mstApplicants = new EntitySet<mstApplicant>(new Action<mstApplicant>(this.attach_mstApplicants), new Action<mstApplicant>(this.detach_mstApplicants));
			this._sysCivilStatus2 = default(EntityRef<sysCivilStatus>);
			this._sysCivilStatus1 = default(EntityRef<sysCivilStatus>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					if (this._sysCivilStatus1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CivilStatus", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CivilStatus
		{
			get
			{
				return this._CivilStatus;
			}
			set
			{
				if ((this._CivilStatus != value))
				{
					this.OnCivilStatusChanging(value);
					this.SendPropertyChanging();
					this._CivilStatus = value;
					this.SendPropertyChanged("CivilStatus");
					this.OnCivilStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="sysCivilStatus_mstApplicant", Storage="_mstApplicants", ThisKey="Id", OtherKey="CivilStatusId")]
		public EntitySet<mstApplicant> mstApplicants
		{
			get
			{
				return this._mstApplicants;
			}
			set
			{
				this._mstApplicants.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="sysCivilStatus_sysCivilStatus", Storage="_sysCivilStatus2", ThisKey="Id", OtherKey="Id", IsUnique=true, IsForeignKey=false)]
		public sysCivilStatus sysCivilStatus2
		{
			get
			{
				return this._sysCivilStatus2.Entity;
			}
			set
			{
				sysCivilStatus previousValue = this._sysCivilStatus2.Entity;
				if (((previousValue != value) 
							|| (this._sysCivilStatus2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._sysCivilStatus2.Entity = null;
						previousValue.sysCivilStatus1 = null;
					}
					this._sysCivilStatus2.Entity = value;
					if ((value != null))
					{
						value.sysCivilStatus1 = this;
					}
					this.SendPropertyChanged("sysCivilStatus2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="sysCivilStatus_sysCivilStatus", Storage="_sysCivilStatus1", ThisKey="Id", OtherKey="Id", IsForeignKey=true)]
		public sysCivilStatus sysCivilStatus1
		{
			get
			{
				return this._sysCivilStatus1.Entity;
			}
			set
			{
				sysCivilStatus previousValue = this._sysCivilStatus1.Entity;
				if (((previousValue != value) 
							|| (this._sysCivilStatus1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._sysCivilStatus1.Entity = null;
						previousValue.sysCivilStatus2 = null;
					}
					this._sysCivilStatus1.Entity = value;
					if ((value != null))
					{
						value.sysCivilStatus2 = this;
						this._Id = value.Id;
					}
					else
					{
						this._Id = default(int);
					}
					this.SendPropertyChanged("sysCivilStatus1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_mstApplicants(mstApplicant entity)
		{
			this.SendPropertyChanging();
			entity.sysCivilStatus = this;
		}
		
		private void detach_mstApplicants(mstApplicant entity)
		{
			this.SendPropertyChanging();
			entity.sysCivilStatus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.sysCollectionStatus")]
	public partial class sysCollectionStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Status;
		
		private EntitySet<trnCollectionLine> _trnCollectionLines;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    #endregion
		
		public sysCollectionStatus()
		{
			this._trnCollectionLines = new EntitySet<trnCollectionLine>(new Action<trnCollectionLine>(this.attach_trnCollectionLines), new Action<trnCollectionLine>(this.detach_trnCollectionLines));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="sysCollectionStatus_trnCollectionLine", Storage="_trnCollectionLines", ThisKey="Id", OtherKey="StatusId")]
		public EntitySet<trnCollectionLine> trnCollectionLines
		{
			get
			{
				return this._trnCollectionLines;
			}
			set
			{
				this._trnCollectionLines.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_trnCollectionLines(trnCollectionLine entity)
		{
			this.SendPropertyChanging();
			entity.sysCollectionStatus = this;
		}
		
		private void detach_trnCollectionLines(trnCollectionLine entity)
		{
			this.SendPropertyChanging();
			entity.sysCollectionStatus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.sysForm")]
	public partial class sysForm : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Form;
		
		private string _FormDescription;
		
		private EntitySet<mstUserForm> _mstUserForms;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnFormChanging(string value);
    partial void OnFormChanged();
    partial void OnFormDescriptionChanging(string value);
    partial void OnFormDescriptionChanged();
    #endregion
		
		public sysForm()
		{
			this._mstUserForms = new EntitySet<mstUserForm>(new Action<mstUserForm>(this.attach_mstUserForms), new Action<mstUserForm>(this.detach_mstUserForms));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Form", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Form
		{
			get
			{
				return this._Form;
			}
			set
			{
				if ((this._Form != value))
				{
					this.OnFormChanging(value);
					this.SendPropertyChanging();
					this._Form = value;
					this.SendPropertyChanged("Form");
					this.OnFormChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FormDescription", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string FormDescription
		{
			get
			{
				return this._FormDescription;
			}
			set
			{
				if ((this._FormDescription != value))
				{
					this.OnFormDescriptionChanging(value);
					this.SendPropertyChanging();
					this._FormDescription = value;
					this.SendPropertyChanged("FormDescription");
					this.OnFormDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="sysForm_mstUserForm", Storage="_mstUserForms", ThisKey="Id", OtherKey="FormId")]
		public EntitySet<mstUserForm> mstUserForms
		{
			get
			{
				return this._mstUserForms;
			}
			set
			{
				this._mstUserForms.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_mstUserForms(mstUserForm entity)
		{
			this.SendPropertyChanging();
			entity.sysForm = this;
		}
		
		private void detach_mstUserForms(mstUserForm entity)
		{
			this.SendPropertyChanging();
			entity.sysForm = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.sysResidenceType")]
	public partial class sysResidenceType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _ResidenceType;
		
		private EntitySet<mstApplicant> _mstApplicants;
		
		private EntitySet<mstApplicant> _mstApplicants1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnResidenceTypeChanging(string value);
    partial void OnResidenceTypeChanged();
    #endregion
		
		public sysResidenceType()
		{
			this._mstApplicants = new EntitySet<mstApplicant>(new Action<mstApplicant>(this.attach_mstApplicants), new Action<mstApplicant>(this.detach_mstApplicants));
			this._mstApplicants1 = new EntitySet<mstApplicant>(new Action<mstApplicant>(this.attach_mstApplicants1), new Action<mstApplicant>(this.detach_mstApplicants1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResidenceType", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ResidenceType
		{
			get
			{
				return this._ResidenceType;
			}
			set
			{
				if ((this._ResidenceType != value))
				{
					this.OnResidenceTypeChanging(value);
					this.SendPropertyChanging();
					this._ResidenceType = value;
					this.SendPropertyChanged("ResidenceType");
					this.OnResidenceTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="sysResidenceType_mstApplicant", Storage="_mstApplicants", ThisKey="Id", OtherKey="ResidenceTypeId")]
		public EntitySet<mstApplicant> mstApplicants
		{
			get
			{
				return this._mstApplicants;
			}
			set
			{
				this._mstApplicants.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="sysResidenceType_mstApplicant1", Storage="_mstApplicants1", ThisKey="Id", OtherKey="LandResidenceTypeId")]
		public EntitySet<mstApplicant> mstApplicants1
		{
			get
			{
				return this._mstApplicants1;
			}
			set
			{
				this._mstApplicants1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_mstApplicants(mstApplicant entity)
		{
			this.SendPropertyChanging();
			entity.sysResidenceType = this;
		}
		
		private void detach_mstApplicants(mstApplicant entity)
		{
			this.SendPropertyChanging();
			entity.sysResidenceType = null;
		}
		
		private void attach_mstApplicants1(mstApplicant entity)
		{
			this.SendPropertyChanging();
			entity.sysResidenceType1 = this;
		}
		
		private void detach_mstApplicants1(mstApplicant entity)
		{
			this.SendPropertyChanging();
			entity.sysResidenceType1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.trnCollection")]
	public partial class trnCollection : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _CollectionNumber;
		
		private System.DateTime _CollectionDate;
		
		private int _LoanId;
		
		private string _Particulars;
		
		private decimal _TotalPaidAmount;
		
		private decimal _TotalPenaltyAmount;
		
		private int _CollectorStaffId;
		
		private int _PreparedByUserId;
		
		private bool _IsLocked;
		
		private int _CreatedByUserId;
		
		private System.DateTime _CreatedDateTime;
		
		private int _UpdatedByUserId;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntitySet<trnCollectionLine> _trnCollectionLines;
		
		private EntityRef<mstStaff> _mstStaff;
		
		private EntityRef<mstUser> _mstUser;
		
		private EntityRef<mstUser> _mstUser1;
		
		private EntityRef<mstUser> _mstUser2;
		
		private EntityRef<trnLoan> _trnLoan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCollectionNumberChanging(string value);
    partial void OnCollectionNumberChanged();
    partial void OnCollectionDateChanging(System.DateTime value);
    partial void OnCollectionDateChanged();
    partial void OnLoanIdChanging(int value);
    partial void OnLoanIdChanged();
    partial void OnParticularsChanging(string value);
    partial void OnParticularsChanged();
    partial void OnTotalPaidAmountChanging(decimal value);
    partial void OnTotalPaidAmountChanged();
    partial void OnTotalPenaltyAmountChanging(decimal value);
    partial void OnTotalPenaltyAmountChanged();
    partial void OnCollectorStaffIdChanging(int value);
    partial void OnCollectorStaffIdChanged();
    partial void OnPreparedByUserIdChanging(int value);
    partial void OnPreparedByUserIdChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByUserIdChanging(int value);
    partial void OnCreatedByUserIdChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByUserIdChanging(int value);
    partial void OnUpdatedByUserIdChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public trnCollection()
		{
			this._trnCollectionLines = new EntitySet<trnCollectionLine>(new Action<trnCollectionLine>(this.attach_trnCollectionLines), new Action<trnCollectionLine>(this.detach_trnCollectionLines));
			this._mstStaff = default(EntityRef<mstStaff>);
			this._mstUser = default(EntityRef<mstUser>);
			this._mstUser1 = default(EntityRef<mstUser>);
			this._mstUser2 = default(EntityRef<mstUser>);
			this._trnLoan = default(EntityRef<trnLoan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CollectionNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CollectionNumber
		{
			get
			{
				return this._CollectionNumber;
			}
			set
			{
				if ((this._CollectionNumber != value))
				{
					this.OnCollectionNumberChanging(value);
					this.SendPropertyChanging();
					this._CollectionNumber = value;
					this.SendPropertyChanged("CollectionNumber");
					this.OnCollectionNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CollectionDate", DbType="DateTime NOT NULL")]
		public System.DateTime CollectionDate
		{
			get
			{
				return this._CollectionDate;
			}
			set
			{
				if ((this._CollectionDate != value))
				{
					this.OnCollectionDateChanging(value);
					this.SendPropertyChanging();
					this._CollectionDate = value;
					this.SendPropertyChanged("CollectionDate");
					this.OnCollectionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanId", DbType="Int NOT NULL")]
		public int LoanId
		{
			get
			{
				return this._LoanId;
			}
			set
			{
				if ((this._LoanId != value))
				{
					if (this._trnLoan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLoanIdChanging(value);
					this.SendPropertyChanging();
					this._LoanId = value;
					this.SendPropertyChanged("LoanId");
					this.OnLoanIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Particulars", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Particulars
		{
			get
			{
				return this._Particulars;
			}
			set
			{
				if ((this._Particulars != value))
				{
					this.OnParticularsChanging(value);
					this.SendPropertyChanging();
					this._Particulars = value;
					this.SendPropertyChanged("Particulars");
					this.OnParticularsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPaidAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal TotalPaidAmount
		{
			get
			{
				return this._TotalPaidAmount;
			}
			set
			{
				if ((this._TotalPaidAmount != value))
				{
					this.OnTotalPaidAmountChanging(value);
					this.SendPropertyChanging();
					this._TotalPaidAmount = value;
					this.SendPropertyChanged("TotalPaidAmount");
					this.OnTotalPaidAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPenaltyAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal TotalPenaltyAmount
		{
			get
			{
				return this._TotalPenaltyAmount;
			}
			set
			{
				if ((this._TotalPenaltyAmount != value))
				{
					this.OnTotalPenaltyAmountChanging(value);
					this.SendPropertyChanging();
					this._TotalPenaltyAmount = value;
					this.SendPropertyChanged("TotalPenaltyAmount");
					this.OnTotalPenaltyAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CollectorStaffId", DbType="Int NOT NULL")]
		public int CollectorStaffId
		{
			get
			{
				return this._CollectorStaffId;
			}
			set
			{
				if ((this._CollectorStaffId != value))
				{
					if (this._mstStaff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCollectorStaffIdChanging(value);
					this.SendPropertyChanging();
					this._CollectorStaffId = value;
					this.SendPropertyChanged("CollectorStaffId");
					this.OnCollectorStaffIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreparedByUserId", DbType="Int NOT NULL")]
		public int PreparedByUserId
		{
			get
			{
				return this._PreparedByUserId;
			}
			set
			{
				if ((this._PreparedByUserId != value))
				{
					if (this._mstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPreparedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._PreparedByUserId = value;
					this.SendPropertyChanged("PreparedByUserId");
					this.OnPreparedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserId", DbType="Int NOT NULL")]
		public int CreatedByUserId
		{
			get
			{
				return this._CreatedByUserId;
			}
			set
			{
				if ((this._CreatedByUserId != value))
				{
					if (this._mstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserId = value;
					this.SendPropertyChanged("CreatedByUserId");
					this.OnCreatedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedByUserId", DbType="Int NOT NULL")]
		public int UpdatedByUserId
		{
			get
			{
				return this._UpdatedByUserId;
			}
			set
			{
				if ((this._UpdatedByUserId != value))
				{
					if (this._mstUser2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedByUserId = value;
					this.SendPropertyChanged("UpdatedByUserId");
					this.OnUpdatedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="trnCollection_trnCollectionLine", Storage="_trnCollectionLines", ThisKey="Id", OtherKey="CollectionId")]
		public EntitySet<trnCollectionLine> trnCollectionLines
		{
			get
			{
				return this._trnCollectionLines;
			}
			set
			{
				this._trnCollectionLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstStaff_trnCollection", Storage="_mstStaff", ThisKey="CollectorStaffId", OtherKey="Id", IsForeignKey=true)]
		public mstStaff mstStaff
		{
			get
			{
				return this._mstStaff.Entity;
			}
			set
			{
				mstStaff previousValue = this._mstStaff.Entity;
				if (((previousValue != value) 
							|| (this._mstStaff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstStaff.Entity = null;
						previousValue.trnCollections.Remove(this);
					}
					this._mstStaff.Entity = value;
					if ((value != null))
					{
						value.trnCollections.Add(this);
						this._CollectorStaffId = value.Id;
					}
					else
					{
						this._CollectorStaffId = default(int);
					}
					this.SendPropertyChanged("mstStaff");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUser_trnCollection", Storage="_mstUser", ThisKey="PreparedByUserId", OtherKey="Id", IsForeignKey=true)]
		public mstUser mstUser
		{
			get
			{
				return this._mstUser.Entity;
			}
			set
			{
				mstUser previousValue = this._mstUser.Entity;
				if (((previousValue != value) 
							|| (this._mstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstUser.Entity = null;
						previousValue.trnCollections.Remove(this);
					}
					this._mstUser.Entity = value;
					if ((value != null))
					{
						value.trnCollections.Add(this);
						this._PreparedByUserId = value.Id;
					}
					else
					{
						this._PreparedByUserId = default(int);
					}
					this.SendPropertyChanged("mstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUser_trnCollection1", Storage="_mstUser1", ThisKey="CreatedByUserId", OtherKey="Id", IsForeignKey=true)]
		public mstUser mstUser1
		{
			get
			{
				return this._mstUser1.Entity;
			}
			set
			{
				mstUser previousValue = this._mstUser1.Entity;
				if (((previousValue != value) 
							|| (this._mstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstUser1.Entity = null;
						previousValue.trnCollections1.Remove(this);
					}
					this._mstUser1.Entity = value;
					if ((value != null))
					{
						value.trnCollections1.Add(this);
						this._CreatedByUserId = value.Id;
					}
					else
					{
						this._CreatedByUserId = default(int);
					}
					this.SendPropertyChanged("mstUser1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUser_trnCollection2", Storage="_mstUser2", ThisKey="UpdatedByUserId", OtherKey="Id", IsForeignKey=true)]
		public mstUser mstUser2
		{
			get
			{
				return this._mstUser2.Entity;
			}
			set
			{
				mstUser previousValue = this._mstUser2.Entity;
				if (((previousValue != value) 
							|| (this._mstUser2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstUser2.Entity = null;
						previousValue.trnCollections2.Remove(this);
					}
					this._mstUser2.Entity = value;
					if ((value != null))
					{
						value.trnCollections2.Add(this);
						this._UpdatedByUserId = value.Id;
					}
					else
					{
						this._UpdatedByUserId = default(int);
					}
					this.SendPropertyChanged("mstUser2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="trnLoan_trnCollection", Storage="_trnLoan", ThisKey="LoanId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public trnLoan trnLoan
		{
			get
			{
				return this._trnLoan.Entity;
			}
			set
			{
				trnLoan previousValue = this._trnLoan.Entity;
				if (((previousValue != value) 
							|| (this._trnLoan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._trnLoan.Entity = null;
						previousValue.trnCollections.Remove(this);
					}
					this._trnLoan.Entity = value;
					if ((value != null))
					{
						value.trnCollections.Add(this);
						this._LoanId = value.Id;
					}
					else
					{
						this._LoanId = default(int);
					}
					this.SendPropertyChanged("trnLoan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_trnCollectionLines(trnCollectionLine entity)
		{
			this.SendPropertyChanging();
			entity.trnCollection = this;
		}
		
		private void detach_trnCollectionLines(trnCollectionLine entity)
		{
			this.SendPropertyChanging();
			entity.trnCollection = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.trnCollectionLines")]
	public partial class trnCollectionLine : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _CollectionId;
		
		private System.DateTime _PayDate;
		
		private string _Particulars;
		
		private int _StatusId;
		
		private decimal _PaidAmount;
		
		private decimal _PenaltyAmount;
		
		private EntityRef<sysCollectionStatus> _sysCollectionStatus;
		
		private EntityRef<trnCollection> _trnCollection;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCollectionIdChanging(int value);
    partial void OnCollectionIdChanged();
    partial void OnPayDateChanging(System.DateTime value);
    partial void OnPayDateChanged();
    partial void OnParticularsChanging(string value);
    partial void OnParticularsChanged();
    partial void OnStatusIdChanging(int value);
    partial void OnStatusIdChanged();
    partial void OnPaidAmountChanging(decimal value);
    partial void OnPaidAmountChanged();
    partial void OnPenaltyAmountChanging(decimal value);
    partial void OnPenaltyAmountChanged();
    #endregion
		
		public trnCollectionLine()
		{
			this._sysCollectionStatus = default(EntityRef<sysCollectionStatus>);
			this._trnCollection = default(EntityRef<trnCollection>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CollectionId", DbType="Int NOT NULL")]
		public int CollectionId
		{
			get
			{
				return this._CollectionId;
			}
			set
			{
				if ((this._CollectionId != value))
				{
					if (this._trnCollection.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCollectionIdChanging(value);
					this.SendPropertyChanging();
					this._CollectionId = value;
					this.SendPropertyChanged("CollectionId");
					this.OnCollectionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayDate", DbType="DateTime NOT NULL")]
		public System.DateTime PayDate
		{
			get
			{
				return this._PayDate;
			}
			set
			{
				if ((this._PayDate != value))
				{
					this.OnPayDateChanging(value);
					this.SendPropertyChanging();
					this._PayDate = value;
					this.SendPropertyChanged("PayDate");
					this.OnPayDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Particulars", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Particulars
		{
			get
			{
				return this._Particulars;
			}
			set
			{
				if ((this._Particulars != value))
				{
					this.OnParticularsChanging(value);
					this.SendPropertyChanging();
					this._Particulars = value;
					this.SendPropertyChanged("Particulars");
					this.OnParticularsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusId", DbType="Int NOT NULL")]
		public int StatusId
		{
			get
			{
				return this._StatusId;
			}
			set
			{
				if ((this._StatusId != value))
				{
					if (this._sysCollectionStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStatusIdChanging(value);
					this.SendPropertyChanging();
					this._StatusId = value;
					this.SendPropertyChanged("StatusId");
					this.OnStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaidAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal PaidAmount
		{
			get
			{
				return this._PaidAmount;
			}
			set
			{
				if ((this._PaidAmount != value))
				{
					this.OnPaidAmountChanging(value);
					this.SendPropertyChanging();
					this._PaidAmount = value;
					this.SendPropertyChanged("PaidAmount");
					this.OnPaidAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PenaltyAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal PenaltyAmount
		{
			get
			{
				return this._PenaltyAmount;
			}
			set
			{
				if ((this._PenaltyAmount != value))
				{
					this.OnPenaltyAmountChanging(value);
					this.SendPropertyChanging();
					this._PenaltyAmount = value;
					this.SendPropertyChanged("PenaltyAmount");
					this.OnPenaltyAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="sysCollectionStatus_trnCollectionLine", Storage="_sysCollectionStatus", ThisKey="StatusId", OtherKey="Id", IsForeignKey=true)]
		public sysCollectionStatus sysCollectionStatus
		{
			get
			{
				return this._sysCollectionStatus.Entity;
			}
			set
			{
				sysCollectionStatus previousValue = this._sysCollectionStatus.Entity;
				if (((previousValue != value) 
							|| (this._sysCollectionStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._sysCollectionStatus.Entity = null;
						previousValue.trnCollectionLines.Remove(this);
					}
					this._sysCollectionStatus.Entity = value;
					if ((value != null))
					{
						value.trnCollectionLines.Add(this);
						this._StatusId = value.Id;
					}
					else
					{
						this._StatusId = default(int);
					}
					this.SendPropertyChanged("sysCollectionStatus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="trnCollection_trnCollectionLine", Storage="_trnCollection", ThisKey="CollectionId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public trnCollection trnCollection
		{
			get
			{
				return this._trnCollection.Entity;
			}
			set
			{
				trnCollection previousValue = this._trnCollection.Entity;
				if (((previousValue != value) 
							|| (this._trnCollection.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._trnCollection.Entity = null;
						previousValue.trnCollectionLines.Remove(this);
					}
					this._trnCollection.Entity = value;
					if ((value != null))
					{
						value.trnCollectionLines.Add(this);
						this._CollectionId = value.Id;
					}
					else
					{
						this._CollectionId = default(int);
					}
					this.SendPropertyChanged("trnCollection");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.trnExpenses")]
	public partial class trnExpense : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _ExpenseNumber;
		
		private System.DateTime _ExpenseDate;
		
		private int _AssignedStaffId;
		
		private string _Particulars;
		
		private bool _IsCollectionExpense;
		
		private int _PreparedByUserId;
		
		private decimal _ExpenseAmount;
		
		private bool _IsLocked;
		
		private int _CreatedByUserId;
		
		private System.DateTime _CreatedDateTime;
		
		private int _UpdatedByUserId;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntityRef<mstStaff> _mstStaff;
		
		private EntityRef<mstUser> _mstUser;
		
		private EntityRef<mstUser> _mstUser1;
		
		private EntityRef<mstUser> _mstUser2;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnExpenseNumberChanging(string value);
    partial void OnExpenseNumberChanged();
    partial void OnExpenseDateChanging(System.DateTime value);
    partial void OnExpenseDateChanged();
    partial void OnAssignedStaffIdChanging(int value);
    partial void OnAssignedStaffIdChanged();
    partial void OnParticularsChanging(string value);
    partial void OnParticularsChanged();
    partial void OnIsCollectionExpenseChanging(bool value);
    partial void OnIsCollectionExpenseChanged();
    partial void OnPreparedByUserIdChanging(int value);
    partial void OnPreparedByUserIdChanged();
    partial void OnExpenseAmountChanging(decimal value);
    partial void OnExpenseAmountChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByUserIdChanging(int value);
    partial void OnCreatedByUserIdChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByUserIdChanging(int value);
    partial void OnUpdatedByUserIdChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public trnExpense()
		{
			this._mstStaff = default(EntityRef<mstStaff>);
			this._mstUser = default(EntityRef<mstUser>);
			this._mstUser1 = default(EntityRef<mstUser>);
			this._mstUser2 = default(EntityRef<mstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpenseNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ExpenseNumber
		{
			get
			{
				return this._ExpenseNumber;
			}
			set
			{
				if ((this._ExpenseNumber != value))
				{
					this.OnExpenseNumberChanging(value);
					this.SendPropertyChanging();
					this._ExpenseNumber = value;
					this.SendPropertyChanged("ExpenseNumber");
					this.OnExpenseNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpenseDate", DbType="DateTime NOT NULL")]
		public System.DateTime ExpenseDate
		{
			get
			{
				return this._ExpenseDate;
			}
			set
			{
				if ((this._ExpenseDate != value))
				{
					this.OnExpenseDateChanging(value);
					this.SendPropertyChanging();
					this._ExpenseDate = value;
					this.SendPropertyChanged("ExpenseDate");
					this.OnExpenseDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignedStaffId", DbType="Int NOT NULL")]
		public int AssignedStaffId
		{
			get
			{
				return this._AssignedStaffId;
			}
			set
			{
				if ((this._AssignedStaffId != value))
				{
					if (this._mstStaff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAssignedStaffIdChanging(value);
					this.SendPropertyChanging();
					this._AssignedStaffId = value;
					this.SendPropertyChanged("AssignedStaffId");
					this.OnAssignedStaffIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Particulars", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Particulars
		{
			get
			{
				return this._Particulars;
			}
			set
			{
				if ((this._Particulars != value))
				{
					this.OnParticularsChanging(value);
					this.SendPropertyChanging();
					this._Particulars = value;
					this.SendPropertyChanged("Particulars");
					this.OnParticularsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCollectionExpense", DbType="Bit NOT NULL")]
		public bool IsCollectionExpense
		{
			get
			{
				return this._IsCollectionExpense;
			}
			set
			{
				if ((this._IsCollectionExpense != value))
				{
					this.OnIsCollectionExpenseChanging(value);
					this.SendPropertyChanging();
					this._IsCollectionExpense = value;
					this.SendPropertyChanged("IsCollectionExpense");
					this.OnIsCollectionExpenseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreparedByUserId", DbType="Int NOT NULL")]
		public int PreparedByUserId
		{
			get
			{
				return this._PreparedByUserId;
			}
			set
			{
				if ((this._PreparedByUserId != value))
				{
					if (this._mstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPreparedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._PreparedByUserId = value;
					this.SendPropertyChanged("PreparedByUserId");
					this.OnPreparedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpenseAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal ExpenseAmount
		{
			get
			{
				return this._ExpenseAmount;
			}
			set
			{
				if ((this._ExpenseAmount != value))
				{
					this.OnExpenseAmountChanging(value);
					this.SendPropertyChanging();
					this._ExpenseAmount = value;
					this.SendPropertyChanged("ExpenseAmount");
					this.OnExpenseAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserId", DbType="Int NOT NULL")]
		public int CreatedByUserId
		{
			get
			{
				return this._CreatedByUserId;
			}
			set
			{
				if ((this._CreatedByUserId != value))
				{
					if (this._mstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserId = value;
					this.SendPropertyChanged("CreatedByUserId");
					this.OnCreatedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedByUserId", DbType="Int NOT NULL")]
		public int UpdatedByUserId
		{
			get
			{
				return this._UpdatedByUserId;
			}
			set
			{
				if ((this._UpdatedByUserId != value))
				{
					if (this._mstUser2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedByUserId = value;
					this.SendPropertyChanged("UpdatedByUserId");
					this.OnUpdatedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstStaff_trnExpense", Storage="_mstStaff", ThisKey="AssignedStaffId", OtherKey="Id", IsForeignKey=true)]
		public mstStaff mstStaff
		{
			get
			{
				return this._mstStaff.Entity;
			}
			set
			{
				mstStaff previousValue = this._mstStaff.Entity;
				if (((previousValue != value) 
							|| (this._mstStaff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstStaff.Entity = null;
						previousValue.trnExpenses.Remove(this);
					}
					this._mstStaff.Entity = value;
					if ((value != null))
					{
						value.trnExpenses.Add(this);
						this._AssignedStaffId = value.Id;
					}
					else
					{
						this._AssignedStaffId = default(int);
					}
					this.SendPropertyChanged("mstStaff");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUser_trnExpense", Storage="_mstUser", ThisKey="PreparedByUserId", OtherKey="Id", IsForeignKey=true)]
		public mstUser mstUser
		{
			get
			{
				return this._mstUser.Entity;
			}
			set
			{
				mstUser previousValue = this._mstUser.Entity;
				if (((previousValue != value) 
							|| (this._mstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstUser.Entity = null;
						previousValue.trnExpenses.Remove(this);
					}
					this._mstUser.Entity = value;
					if ((value != null))
					{
						value.trnExpenses.Add(this);
						this._PreparedByUserId = value.Id;
					}
					else
					{
						this._PreparedByUserId = default(int);
					}
					this.SendPropertyChanged("mstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUser_trnExpense1", Storage="_mstUser1", ThisKey="CreatedByUserId", OtherKey="Id", IsForeignKey=true)]
		public mstUser mstUser1
		{
			get
			{
				return this._mstUser1.Entity;
			}
			set
			{
				mstUser previousValue = this._mstUser1.Entity;
				if (((previousValue != value) 
							|| (this._mstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstUser1.Entity = null;
						previousValue.trnExpenses1.Remove(this);
					}
					this._mstUser1.Entity = value;
					if ((value != null))
					{
						value.trnExpenses1.Add(this);
						this._CreatedByUserId = value.Id;
					}
					else
					{
						this._CreatedByUserId = default(int);
					}
					this.SendPropertyChanged("mstUser1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUser_trnExpense2", Storage="_mstUser2", ThisKey="UpdatedByUserId", OtherKey="Id", IsForeignKey=true)]
		public mstUser mstUser2
		{
			get
			{
				return this._mstUser2.Entity;
			}
			set
			{
				mstUser previousValue = this._mstUser2.Entity;
				if (((previousValue != value) 
							|| (this._mstUser2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstUser2.Entity = null;
						previousValue.trnExpenses2.Remove(this);
					}
					this._mstUser2.Entity = value;
					if ((value != null))
					{
						value.trnExpenses2.Add(this);
						this._UpdatedByUserId = value.Id;
					}
					else
					{
						this._UpdatedByUserId = default(int);
					}
					this.SendPropertyChanged("mstUser2");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.trnLoan")]
	public partial class trnLoan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _LoanNumber;
		
		private System.DateTime _LoanDate;
		
		private int _ApplicantId;
		
		private string _Particulars;
		
		private int _PreparedByUserId;
		
		private int _TermId;
		
		private decimal _TermNoOfDays;
		
		private System.DateTime _MaturityDate;
		
		private decimal _PrincipalAmount;
		
		private int _InterestId;
		
		private decimal _InterestRate;
		
		private decimal _InterestAmount;
		
		private decimal _PreviousBalanceAmount;
		
		private decimal _DeductionAmount;
		
		private decimal _NetAmount;
		
		private decimal _NetCollectionAmount;
		
		private decimal _CollectibleAmount;
		
		private decimal _TotalPaidAmount;
		
		private decimal _TotalPenaltyAmount;
		
		private decimal _TotalBalanceAmount;
		
		private bool _IsLoanApplication;
		
		private bool _IsLoanReconstruct;
		
		private bool _IsLoanRenew;
		
		private bool _IsLocked;
		
		private int _CreatedByUserId;
		
		private System.DateTime _CreatedDateTime;
		
		private int _UpdatedByUserId;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntitySet<trnCollection> _trnCollections;
		
		private EntitySet<trnLoanCollateral> _trnLoanCollaterals;
		
		private EntitySet<trnLoanDeduction> _trnLoanDeductions;
		
		private EntityRef<mstApplicant> _mstApplicant;
		
		private EntityRef<mstInterest> _mstInterest;
		
		private EntityRef<mstTerm> _mstTerm;
		
		private EntityRef<mstUser> _mstUser;
		
		private EntityRef<mstUser> _mstUser1;
		
		private EntityRef<mstUser> _mstUser2;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnLoanNumberChanging(string value);
    partial void OnLoanNumberChanged();
    partial void OnLoanDateChanging(System.DateTime value);
    partial void OnLoanDateChanged();
    partial void OnApplicantIdChanging(int value);
    partial void OnApplicantIdChanged();
    partial void OnParticularsChanging(string value);
    partial void OnParticularsChanged();
    partial void OnPreparedByUserIdChanging(int value);
    partial void OnPreparedByUserIdChanged();
    partial void OnTermIdChanging(int value);
    partial void OnTermIdChanged();
    partial void OnTermNoOfDaysChanging(decimal value);
    partial void OnTermNoOfDaysChanged();
    partial void OnMaturityDateChanging(System.DateTime value);
    partial void OnMaturityDateChanged();
    partial void OnPrincipalAmountChanging(decimal value);
    partial void OnPrincipalAmountChanged();
    partial void OnInterestIdChanging(int value);
    partial void OnInterestIdChanged();
    partial void OnInterestRateChanging(decimal value);
    partial void OnInterestRateChanged();
    partial void OnInterestAmountChanging(decimal value);
    partial void OnInterestAmountChanged();
    partial void OnPreviousBalanceAmountChanging(decimal value);
    partial void OnPreviousBalanceAmountChanged();
    partial void OnDeductionAmountChanging(decimal value);
    partial void OnDeductionAmountChanged();
    partial void OnNetAmountChanging(decimal value);
    partial void OnNetAmountChanged();
    partial void OnNetCollectionAmountChanging(decimal value);
    partial void OnNetCollectionAmountChanged();
    partial void OnCollectibleAmountChanging(decimal value);
    partial void OnCollectibleAmountChanged();
    partial void OnTotalPaidAmountChanging(decimal value);
    partial void OnTotalPaidAmountChanged();
    partial void OnTotalPenaltyAmountChanging(decimal value);
    partial void OnTotalPenaltyAmountChanged();
    partial void OnTotalBalanceAmountChanging(decimal value);
    partial void OnTotalBalanceAmountChanged();
    partial void OnIsLoanApplicationChanging(bool value);
    partial void OnIsLoanApplicationChanged();
    partial void OnIsLoanReconstructChanging(bool value);
    partial void OnIsLoanReconstructChanged();
    partial void OnIsLoanRenewChanging(bool value);
    partial void OnIsLoanRenewChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByUserIdChanging(int value);
    partial void OnCreatedByUserIdChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByUserIdChanging(int value);
    partial void OnUpdatedByUserIdChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public trnLoan()
		{
			this._trnCollections = new EntitySet<trnCollection>(new Action<trnCollection>(this.attach_trnCollections), new Action<trnCollection>(this.detach_trnCollections));
			this._trnLoanCollaterals = new EntitySet<trnLoanCollateral>(new Action<trnLoanCollateral>(this.attach_trnLoanCollaterals), new Action<trnLoanCollateral>(this.detach_trnLoanCollaterals));
			this._trnLoanDeductions = new EntitySet<trnLoanDeduction>(new Action<trnLoanDeduction>(this.attach_trnLoanDeductions), new Action<trnLoanDeduction>(this.detach_trnLoanDeductions));
			this._mstApplicant = default(EntityRef<mstApplicant>);
			this._mstInterest = default(EntityRef<mstInterest>);
			this._mstTerm = default(EntityRef<mstTerm>);
			this._mstUser = default(EntityRef<mstUser>);
			this._mstUser1 = default(EntityRef<mstUser>);
			this._mstUser2 = default(EntityRef<mstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LoanNumber
		{
			get
			{
				return this._LoanNumber;
			}
			set
			{
				if ((this._LoanNumber != value))
				{
					this.OnLoanNumberChanging(value);
					this.SendPropertyChanging();
					this._LoanNumber = value;
					this.SendPropertyChanged("LoanNumber");
					this.OnLoanNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanDate", DbType="DateTime NOT NULL")]
		public System.DateTime LoanDate
		{
			get
			{
				return this._LoanDate;
			}
			set
			{
				if ((this._LoanDate != value))
				{
					this.OnLoanDateChanging(value);
					this.SendPropertyChanging();
					this._LoanDate = value;
					this.SendPropertyChanged("LoanDate");
					this.OnLoanDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicantId", DbType="Int NOT NULL")]
		public int ApplicantId
		{
			get
			{
				return this._ApplicantId;
			}
			set
			{
				if ((this._ApplicantId != value))
				{
					if (this._mstApplicant.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicantIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicantId = value;
					this.SendPropertyChanged("ApplicantId");
					this.OnApplicantIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Particulars", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Particulars
		{
			get
			{
				return this._Particulars;
			}
			set
			{
				if ((this._Particulars != value))
				{
					this.OnParticularsChanging(value);
					this.SendPropertyChanging();
					this._Particulars = value;
					this.SendPropertyChanged("Particulars");
					this.OnParticularsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreparedByUserId", DbType="Int NOT NULL")]
		public int PreparedByUserId
		{
			get
			{
				return this._PreparedByUserId;
			}
			set
			{
				if ((this._PreparedByUserId != value))
				{
					if (this._mstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPreparedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._PreparedByUserId = value;
					this.SendPropertyChanged("PreparedByUserId");
					this.OnPreparedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermId", DbType="Int NOT NULL")]
		public int TermId
		{
			get
			{
				return this._TermId;
			}
			set
			{
				if ((this._TermId != value))
				{
					if (this._mstTerm.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTermIdChanging(value);
					this.SendPropertyChanging();
					this._TermId = value;
					this.SendPropertyChanged("TermId");
					this.OnTermIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermNoOfDays", DbType="Decimal(18,5) NOT NULL")]
		public decimal TermNoOfDays
		{
			get
			{
				return this._TermNoOfDays;
			}
			set
			{
				if ((this._TermNoOfDays != value))
				{
					this.OnTermNoOfDaysChanging(value);
					this.SendPropertyChanging();
					this._TermNoOfDays = value;
					this.SendPropertyChanged("TermNoOfDays");
					this.OnTermNoOfDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaturityDate", DbType="DateTime NOT NULL")]
		public System.DateTime MaturityDate
		{
			get
			{
				return this._MaturityDate;
			}
			set
			{
				if ((this._MaturityDate != value))
				{
					this.OnMaturityDateChanging(value);
					this.SendPropertyChanging();
					this._MaturityDate = value;
					this.SendPropertyChanged("MaturityDate");
					this.OnMaturityDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrincipalAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal PrincipalAmount
		{
			get
			{
				return this._PrincipalAmount;
			}
			set
			{
				if ((this._PrincipalAmount != value))
				{
					this.OnPrincipalAmountChanging(value);
					this.SendPropertyChanging();
					this._PrincipalAmount = value;
					this.SendPropertyChanged("PrincipalAmount");
					this.OnPrincipalAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InterestId", DbType="Int NOT NULL")]
		public int InterestId
		{
			get
			{
				return this._InterestId;
			}
			set
			{
				if ((this._InterestId != value))
				{
					if (this._mstInterest.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInterestIdChanging(value);
					this.SendPropertyChanging();
					this._InterestId = value;
					this.SendPropertyChanged("InterestId");
					this.OnInterestIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InterestRate", DbType="Decimal(18,5) NOT NULL")]
		public decimal InterestRate
		{
			get
			{
				return this._InterestRate;
			}
			set
			{
				if ((this._InterestRate != value))
				{
					this.OnInterestRateChanging(value);
					this.SendPropertyChanging();
					this._InterestRate = value;
					this.SendPropertyChanged("InterestRate");
					this.OnInterestRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InterestAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal InterestAmount
		{
			get
			{
				return this._InterestAmount;
			}
			set
			{
				if ((this._InterestAmount != value))
				{
					this.OnInterestAmountChanging(value);
					this.SendPropertyChanging();
					this._InterestAmount = value;
					this.SendPropertyChanged("InterestAmount");
					this.OnInterestAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreviousBalanceAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal PreviousBalanceAmount
		{
			get
			{
				return this._PreviousBalanceAmount;
			}
			set
			{
				if ((this._PreviousBalanceAmount != value))
				{
					this.OnPreviousBalanceAmountChanging(value);
					this.SendPropertyChanging();
					this._PreviousBalanceAmount = value;
					this.SendPropertyChanged("PreviousBalanceAmount");
					this.OnPreviousBalanceAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeductionAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal DeductionAmount
		{
			get
			{
				return this._DeductionAmount;
			}
			set
			{
				if ((this._DeductionAmount != value))
				{
					this.OnDeductionAmountChanging(value);
					this.SendPropertyChanging();
					this._DeductionAmount = value;
					this.SendPropertyChanged("DeductionAmount");
					this.OnDeductionAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NetAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal NetAmount
		{
			get
			{
				return this._NetAmount;
			}
			set
			{
				if ((this._NetAmount != value))
				{
					this.OnNetAmountChanging(value);
					this.SendPropertyChanging();
					this._NetAmount = value;
					this.SendPropertyChanged("NetAmount");
					this.OnNetAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NetCollectionAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal NetCollectionAmount
		{
			get
			{
				return this._NetCollectionAmount;
			}
			set
			{
				if ((this._NetCollectionAmount != value))
				{
					this.OnNetCollectionAmountChanging(value);
					this.SendPropertyChanging();
					this._NetCollectionAmount = value;
					this.SendPropertyChanged("NetCollectionAmount");
					this.OnNetCollectionAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CollectibleAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal CollectibleAmount
		{
			get
			{
				return this._CollectibleAmount;
			}
			set
			{
				if ((this._CollectibleAmount != value))
				{
					this.OnCollectibleAmountChanging(value);
					this.SendPropertyChanging();
					this._CollectibleAmount = value;
					this.SendPropertyChanged("CollectibleAmount");
					this.OnCollectibleAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPaidAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal TotalPaidAmount
		{
			get
			{
				return this._TotalPaidAmount;
			}
			set
			{
				if ((this._TotalPaidAmount != value))
				{
					this.OnTotalPaidAmountChanging(value);
					this.SendPropertyChanging();
					this._TotalPaidAmount = value;
					this.SendPropertyChanged("TotalPaidAmount");
					this.OnTotalPaidAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPenaltyAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal TotalPenaltyAmount
		{
			get
			{
				return this._TotalPenaltyAmount;
			}
			set
			{
				if ((this._TotalPenaltyAmount != value))
				{
					this.OnTotalPenaltyAmountChanging(value);
					this.SendPropertyChanging();
					this._TotalPenaltyAmount = value;
					this.SendPropertyChanged("TotalPenaltyAmount");
					this.OnTotalPenaltyAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalBalanceAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal TotalBalanceAmount
		{
			get
			{
				return this._TotalBalanceAmount;
			}
			set
			{
				if ((this._TotalBalanceAmount != value))
				{
					this.OnTotalBalanceAmountChanging(value);
					this.SendPropertyChanging();
					this._TotalBalanceAmount = value;
					this.SendPropertyChanged("TotalBalanceAmount");
					this.OnTotalBalanceAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLoanApplication", DbType="Bit NOT NULL")]
		public bool IsLoanApplication
		{
			get
			{
				return this._IsLoanApplication;
			}
			set
			{
				if ((this._IsLoanApplication != value))
				{
					this.OnIsLoanApplicationChanging(value);
					this.SendPropertyChanging();
					this._IsLoanApplication = value;
					this.SendPropertyChanged("IsLoanApplication");
					this.OnIsLoanApplicationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLoanReconstruct", DbType="Bit NOT NULL")]
		public bool IsLoanReconstruct
		{
			get
			{
				return this._IsLoanReconstruct;
			}
			set
			{
				if ((this._IsLoanReconstruct != value))
				{
					this.OnIsLoanReconstructChanging(value);
					this.SendPropertyChanging();
					this._IsLoanReconstruct = value;
					this.SendPropertyChanged("IsLoanReconstruct");
					this.OnIsLoanReconstructChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLoanRenew", DbType="Bit NOT NULL")]
		public bool IsLoanRenew
		{
			get
			{
				return this._IsLoanRenew;
			}
			set
			{
				if ((this._IsLoanRenew != value))
				{
					this.OnIsLoanRenewChanging(value);
					this.SendPropertyChanging();
					this._IsLoanRenew = value;
					this.SendPropertyChanged("IsLoanRenew");
					this.OnIsLoanRenewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserId", DbType="Int NOT NULL")]
		public int CreatedByUserId
		{
			get
			{
				return this._CreatedByUserId;
			}
			set
			{
				if ((this._CreatedByUserId != value))
				{
					if (this._mstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserId = value;
					this.SendPropertyChanged("CreatedByUserId");
					this.OnCreatedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedByUserId", DbType="Int NOT NULL")]
		public int UpdatedByUserId
		{
			get
			{
				return this._UpdatedByUserId;
			}
			set
			{
				if ((this._UpdatedByUserId != value))
				{
					if (this._mstUser2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedByUserId = value;
					this.SendPropertyChanged("UpdatedByUserId");
					this.OnUpdatedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="trnLoan_trnCollection", Storage="_trnCollections", ThisKey="Id", OtherKey="LoanId")]
		public EntitySet<trnCollection> trnCollections
		{
			get
			{
				return this._trnCollections;
			}
			set
			{
				this._trnCollections.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="trnLoan_trnLoanCollateral", Storage="_trnLoanCollaterals", ThisKey="Id", OtherKey="LoanId")]
		public EntitySet<trnLoanCollateral> trnLoanCollaterals
		{
			get
			{
				return this._trnLoanCollaterals;
			}
			set
			{
				this._trnLoanCollaterals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="trnLoan_trnLoanDeduction", Storage="_trnLoanDeductions", ThisKey="Id", OtherKey="LoanId")]
		public EntitySet<trnLoanDeduction> trnLoanDeductions
		{
			get
			{
				return this._trnLoanDeductions;
			}
			set
			{
				this._trnLoanDeductions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstApplicant_trnLoan", Storage="_mstApplicant", ThisKey="ApplicantId", OtherKey="Id", IsForeignKey=true)]
		public mstApplicant mstApplicant
		{
			get
			{
				return this._mstApplicant.Entity;
			}
			set
			{
				mstApplicant previousValue = this._mstApplicant.Entity;
				if (((previousValue != value) 
							|| (this._mstApplicant.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstApplicant.Entity = null;
						previousValue.trnLoans.Remove(this);
					}
					this._mstApplicant.Entity = value;
					if ((value != null))
					{
						value.trnLoans.Add(this);
						this._ApplicantId = value.Id;
					}
					else
					{
						this._ApplicantId = default(int);
					}
					this.SendPropertyChanged("mstApplicant");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstInterest_trnLoan", Storage="_mstInterest", ThisKey="InterestId", OtherKey="Id", IsForeignKey=true)]
		public mstInterest mstInterest
		{
			get
			{
				return this._mstInterest.Entity;
			}
			set
			{
				mstInterest previousValue = this._mstInterest.Entity;
				if (((previousValue != value) 
							|| (this._mstInterest.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstInterest.Entity = null;
						previousValue.trnLoans.Remove(this);
					}
					this._mstInterest.Entity = value;
					if ((value != null))
					{
						value.trnLoans.Add(this);
						this._InterestId = value.Id;
					}
					else
					{
						this._InterestId = default(int);
					}
					this.SendPropertyChanged("mstInterest");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstTerm_trnLoan", Storage="_mstTerm", ThisKey="TermId", OtherKey="Id", IsForeignKey=true)]
		public mstTerm mstTerm
		{
			get
			{
				return this._mstTerm.Entity;
			}
			set
			{
				mstTerm previousValue = this._mstTerm.Entity;
				if (((previousValue != value) 
							|| (this._mstTerm.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstTerm.Entity = null;
						previousValue.trnLoans.Remove(this);
					}
					this._mstTerm.Entity = value;
					if ((value != null))
					{
						value.trnLoans.Add(this);
						this._TermId = value.Id;
					}
					else
					{
						this._TermId = default(int);
					}
					this.SendPropertyChanged("mstTerm");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUser_trnLoan", Storage="_mstUser", ThisKey="PreparedByUserId", OtherKey="Id", IsForeignKey=true)]
		public mstUser mstUser
		{
			get
			{
				return this._mstUser.Entity;
			}
			set
			{
				mstUser previousValue = this._mstUser.Entity;
				if (((previousValue != value) 
							|| (this._mstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstUser.Entity = null;
						previousValue.trnLoans.Remove(this);
					}
					this._mstUser.Entity = value;
					if ((value != null))
					{
						value.trnLoans.Add(this);
						this._PreparedByUserId = value.Id;
					}
					else
					{
						this._PreparedByUserId = default(int);
					}
					this.SendPropertyChanged("mstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUser_trnLoan1", Storage="_mstUser1", ThisKey="CreatedByUserId", OtherKey="Id", IsForeignKey=true)]
		public mstUser mstUser1
		{
			get
			{
				return this._mstUser1.Entity;
			}
			set
			{
				mstUser previousValue = this._mstUser1.Entity;
				if (((previousValue != value) 
							|| (this._mstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstUser1.Entity = null;
						previousValue.trnLoans1.Remove(this);
					}
					this._mstUser1.Entity = value;
					if ((value != null))
					{
						value.trnLoans1.Add(this);
						this._CreatedByUserId = value.Id;
					}
					else
					{
						this._CreatedByUserId = default(int);
					}
					this.SendPropertyChanged("mstUser1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUser_trnLoan2", Storage="_mstUser2", ThisKey="UpdatedByUserId", OtherKey="Id", IsForeignKey=true)]
		public mstUser mstUser2
		{
			get
			{
				return this._mstUser2.Entity;
			}
			set
			{
				mstUser previousValue = this._mstUser2.Entity;
				if (((previousValue != value) 
							|| (this._mstUser2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstUser2.Entity = null;
						previousValue.trnLoans2.Remove(this);
					}
					this._mstUser2.Entity = value;
					if ((value != null))
					{
						value.trnLoans2.Add(this);
						this._UpdatedByUserId = value.Id;
					}
					else
					{
						this._UpdatedByUserId = default(int);
					}
					this.SendPropertyChanged("mstUser2");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_trnCollections(trnCollection entity)
		{
			this.SendPropertyChanging();
			entity.trnLoan = this;
		}
		
		private void detach_trnCollections(trnCollection entity)
		{
			this.SendPropertyChanging();
			entity.trnLoan = null;
		}
		
		private void attach_trnLoanCollaterals(trnLoanCollateral entity)
		{
			this.SendPropertyChanging();
			entity.trnLoan = this;
		}
		
		private void detach_trnLoanCollaterals(trnLoanCollateral entity)
		{
			this.SendPropertyChanging();
			entity.trnLoan = null;
		}
		
		private void attach_trnLoanDeductions(trnLoanDeduction entity)
		{
			this.SendPropertyChanging();
			entity.trnLoan = this;
		}
		
		private void detach_trnLoanDeductions(trnLoanDeduction entity)
		{
			this.SendPropertyChanging();
			entity.trnLoan = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.trnLoanCollateral")]
	public partial class trnLoanCollateral : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _LoanId;
		
		private string _Type;
		
		private string _Brand;
		
		private string _ModelNumber;
		
		private string _SerialNumber;
		
		private EntityRef<trnLoan> _trnLoan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnLoanIdChanging(int value);
    partial void OnLoanIdChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnBrandChanging(string value);
    partial void OnBrandChanged();
    partial void OnModelNumberChanging(string value);
    partial void OnModelNumberChanged();
    partial void OnSerialNumberChanging(string value);
    partial void OnSerialNumberChanged();
    #endregion
		
		public trnLoanCollateral()
		{
			this._trnLoan = default(EntityRef<trnLoan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanId", DbType="Int NOT NULL")]
		public int LoanId
		{
			get
			{
				return this._LoanId;
			}
			set
			{
				if ((this._LoanId != value))
				{
					if (this._trnLoan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLoanIdChanging(value);
					this.SendPropertyChanging();
					this._LoanId = value;
					this.SendPropertyChanged("LoanId");
					this.OnLoanIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Brand", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Brand
		{
			get
			{
				return this._Brand;
			}
			set
			{
				if ((this._Brand != value))
				{
					this.OnBrandChanging(value);
					this.SendPropertyChanging();
					this._Brand = value;
					this.SendPropertyChanged("Brand");
					this.OnBrandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModelNumber", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ModelNumber
		{
			get
			{
				return this._ModelNumber;
			}
			set
			{
				if ((this._ModelNumber != value))
				{
					this.OnModelNumberChanging(value);
					this.SendPropertyChanging();
					this._ModelNumber = value;
					this.SendPropertyChanged("ModelNumber");
					this.OnModelNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SerialNumber", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string SerialNumber
		{
			get
			{
				return this._SerialNumber;
			}
			set
			{
				if ((this._SerialNumber != value))
				{
					this.OnSerialNumberChanging(value);
					this.SendPropertyChanging();
					this._SerialNumber = value;
					this.SendPropertyChanged("SerialNumber");
					this.OnSerialNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="trnLoan_trnLoanCollateral", Storage="_trnLoan", ThisKey="LoanId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public trnLoan trnLoan
		{
			get
			{
				return this._trnLoan.Entity;
			}
			set
			{
				trnLoan previousValue = this._trnLoan.Entity;
				if (((previousValue != value) 
							|| (this._trnLoan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._trnLoan.Entity = null;
						previousValue.trnLoanCollaterals.Remove(this);
					}
					this._trnLoan.Entity = value;
					if ((value != null))
					{
						value.trnLoanCollaterals.Add(this);
						this._LoanId = value.Id;
					}
					else
					{
						this._LoanId = default(int);
					}
					this.SendPropertyChanged("trnLoan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.trnLoanDeductions")]
	public partial class trnLoanDeduction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _LoanId;
		
		private int _DeductionId;
		
		private decimal _DeductionAmount;
		
		private EntityRef<mstDeduction> _mstDeduction;
		
		private EntityRef<trnLoan> _trnLoan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnLoanIdChanging(int value);
    partial void OnLoanIdChanged();
    partial void OnDeductionIdChanging(int value);
    partial void OnDeductionIdChanged();
    partial void OnDeductionAmountChanging(decimal value);
    partial void OnDeductionAmountChanged();
    #endregion
		
		public trnLoanDeduction()
		{
			this._mstDeduction = default(EntityRef<mstDeduction>);
			this._trnLoan = default(EntityRef<trnLoan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanId", DbType="Int NOT NULL")]
		public int LoanId
		{
			get
			{
				return this._LoanId;
			}
			set
			{
				if ((this._LoanId != value))
				{
					if (this._trnLoan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLoanIdChanging(value);
					this.SendPropertyChanging();
					this._LoanId = value;
					this.SendPropertyChanged("LoanId");
					this.OnLoanIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeductionId", DbType="Int NOT NULL")]
		public int DeductionId
		{
			get
			{
				return this._DeductionId;
			}
			set
			{
				if ((this._DeductionId != value))
				{
					if (this._mstDeduction.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDeductionIdChanging(value);
					this.SendPropertyChanging();
					this._DeductionId = value;
					this.SendPropertyChanged("DeductionId");
					this.OnDeductionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeductionAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal DeductionAmount
		{
			get
			{
				return this._DeductionAmount;
			}
			set
			{
				if ((this._DeductionAmount != value))
				{
					this.OnDeductionAmountChanging(value);
					this.SendPropertyChanging();
					this._DeductionAmount = value;
					this.SendPropertyChanged("DeductionAmount");
					this.OnDeductionAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstDeduction_trnLoanDeduction", Storage="_mstDeduction", ThisKey="DeductionId", OtherKey="Id", IsForeignKey=true)]
		public mstDeduction mstDeduction
		{
			get
			{
				return this._mstDeduction.Entity;
			}
			set
			{
				mstDeduction previousValue = this._mstDeduction.Entity;
				if (((previousValue != value) 
							|| (this._mstDeduction.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstDeduction.Entity = null;
						previousValue.trnLoanDeductions.Remove(this);
					}
					this._mstDeduction.Entity = value;
					if ((value != null))
					{
						value.trnLoanDeductions.Add(this);
						this._DeductionId = value.Id;
					}
					else
					{
						this._DeductionId = default(int);
					}
					this.SendPropertyChanged("mstDeduction");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="trnLoan_trnLoanDeduction", Storage="_trnLoan", ThisKey="LoanId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public trnLoan trnLoan
		{
			get
			{
				return this._trnLoan.Entity;
			}
			set
			{
				trnLoan previousValue = this._trnLoan.Entity;
				if (((previousValue != value) 
							|| (this._trnLoan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._trnLoan.Entity = null;
						previousValue.trnLoanDeductions.Remove(this);
					}
					this._trnLoan.Entity = value;
					if ((value != null))
					{
						value.trnLoanDeductions.Add(this);
						this._LoanId = value.Id;
					}
					else
					{
						this._LoanId = default(int);
					}
					this.SendPropertyChanged("trnLoan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
